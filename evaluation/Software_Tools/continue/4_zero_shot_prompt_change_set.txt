Changes between v0.8.43-vscode and v0.8.45-vscode
================================================================================

COMMITS
--------------------------------------------------------------------------------

Commit: c93f530abd0d64300c4d45a8ad8da9ee996f03f8
Author: Nate Sesti
Date: 2024-07-09 05:05:08+00:00
Message: üìù update changelogs
----------------------------------------

Commit: 823dcd6e66180ed74039d335980a8bc253239606
Author: Nate Sesti
Date: 2024-07-10 17:31:40+00:00
Message: update intellij changelog [skip ci]
----------------------------------------

Commit: 7b99524d16999af78a00b198724d3beb45334ff1
Author: Nate Sesti
Date: 2024-07-10 18:53:59+00:00
Message: update recommended models
----------------------------------------

Commit: 2eafdff54b1a77c6d403fa26a64c6793d7a4dfb9
Author: Nate Sesti
Date: 2024-07-13 23:28:20+00:00
Message: üìù intellij changelog
----------------------------------------

Commit: 0ef443cafc00eb44223bb34c81e52c3b1910eb3e
Author: Nate Sesti
Date: 2024-07-23 18:14:36+00:00
Message: llama 3.1 docs (#1812)

* llama 3.1 docs

* update links
----------------------------------------

Commit: 9961f85326b1205f2c7f43dc23d9e10c85710212
Author: Dan Dascalescu
Date: 2024-07-29 01:40:36+00:00
Message: Update copyright year for extension READMEs (#1856)

* Update copyright year

* Update VSCode extension copyright year
----------------------------------------

Commit: d0f3209dff29002e6dd6fa1cc47b5769d5c75106
Author: Nate Sesti
Date: 2024-07-29 06:16:18+00:00
Message: Preview (#1750)

* update package.json version

* ü™Ñ model dropdown, control plane (#1692)

* Nate/control plane client (#1691)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* fix(gui): ctx rendering w/ renderInlineAs: "" (#1541)

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* fix codeqwen autocomplete leading space

* add voyage rerank-1

* feat: `--noEmit` for tsc checks in CI (#1559)

* docs: update CustomContextProvider docs (#1557)

* add stop tokens to qwen prompt

* update docs to reflect 3.5 sonnet being best

* docs: comment out unused providers (#1561)

* import Handlebars

* feat: toast notification for config updates (#1560)

* feat: toast notification for config updates

* feat: only trigger toast on config.json save

* displayRawMarkdown option

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* update to reflect 16 stop words limit for deepseek

* feat: only trigger config update toast in vscode (#1571)

* docs(prompt-files): fix typos + clarify (#1575)

* doc: prompt file typo + clarifications

* fix: add back correct docs

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* docs(telemetry): add pageviews to tracking list (#1581)

* Add reranker configuration options to codebase embedding docs (#1584)

- Introduce reranker concept
- List available reranker options
- Provide configuration instructions
- Update keywords to include "reranker"

* chore: update pr template with screenshots (#1590)

* Refactor ConfirmationDialog to use SecondaryButton for cancel action (#1586)

* Added instructions for running docs server locally (#1578)

- Added NPM script method
- Added VS Code task method
- Update contributing guidelines

* Update branch policy (#1577)

- Change PR target to `dev` branch
- Update `CONTRIBUTING.md` instructions

* Consolidate example configurations into the main configuration guide (#1579)

- Moved examples to configuration.md
- Deleted the separate examples.md file
- Updated sidebar order and links
- Improved readability and structure in configuration.md

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* Update completionProvider.ts (warning tab-autocomplete models) (#1566)

* feat: enhanced IndexingProgressBar with blinking dot feature

- Integrated BlinkingDot component
- Added STATUS_COLORS for various states
- Replaced CircleDiv with BlinkingDot in UI
- Updated status messages and layout

* small UI tweaks

* feat(gui): enhance ModelCard, ModelProviderTag, and Toggle components (#1595)

- add styling and adjustments to ModelCard
- update ModelProviderTag font size
- remove box shadow from Toggle component
- tweak icon styles in ModelCard
- improve alignment and spacing

* media query

* feat: add best experience onboarding

* fix: file rename

* stop movement on button hover by keeping same border thickness

* fix mistake in setting cursor: pointer

* fix when free trial option is shown

* Support Node.js versions below 20 for streaming response handling (#1591)

- Add fallback for Node < 20
- Implement toAsyncIterable for streaming
- Use TextDecoder for manual decoding
- Maintain existing streaming for Node 20+

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* fix hasPassedFTL

* fix /edit cancellation from UI

* feat: add `applyCodeBlock` experimental prop (#1601)

* feat: add new model styling improvements (#1609)

* feat: add new model styling improvements

* better gap size

* feat: update bug_report.yml (#1610)

* chore: update bug_report.yml

* typo fix

* feat: add labels to "Add docs" dialog (#1612)

* feat: add labels to "Add docs" dialog

* remove autofocus

* don't double load config

* small fixes

* speed up directory traversal, and use correct native path module

* option not to show config update toast

* merge air-gapped and recommended setup pages

* chore: add telemetry for full screen toggle (#1618)

* Fix headings in codebase-embeddings.md (#1617)

* mention jetbrains

* docs: update changie  (#1619)

* feat: updated changie config

* hide toc and autogenerate

* Update changelog.mdx

* link to deeper explanation of embeddings models

* ensure target="_blank" for all links in sidebar

* fix gif links in intellij README.md

* don't require rust in dependency installation

* chore: fix padding on gh button (#1620)

* chore: adjust button padding

* Update tasks.json

* escape colons in diff path

* smoother lancedb indexing reporting

* smooth progress updates for indexing

* fix tsc err

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* üöë fix constant warnings when onboarding with Ollama

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* team analytics

* apply control plane settings

* workos auth

* ide protocol get session info

* UI for auth

* profile switching

* small fixes

* updates

* refresh tokens

* updates

* fix tsc errs

* model select in toolbar to make room for profile selector

* prod client id

* link to prod URL

* internal beta option

* profiles change listener

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* temporary patch for type errs

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* skip extension tests

* update package.json version

* handlebars import

* cmd+I improvements (#1728)

* Nate/control plane client (#1691)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* fix(gui): ctx rendering w/ renderInlineAs: "" (#1541)

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* fix codeqwen autocomplete leading space

* add voyage rerank-1

* feat: `--noEmit` for tsc checks in CI (#1559)

* docs: update CustomContextProvider docs (#1557)

* add stop tokens to qwen prompt

* update docs to reflect 3.5 sonnet being best

* docs: comment out unused providers (#1561)

* import Handlebars

* feat: toast notification for config updates (#1560)

* feat: toast notification for config updates

* feat: only trigger toast on config.json save

* displayRawMarkdown option

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* update to reflect 16 stop words limit for deepseek

* feat: only trigger config update toast in vscode (#1571)

* docs(prompt-files): fix typos + clarify (#1575)

* doc: prompt file typo + clarifications

* fix: add back correct docs

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* docs(telemetry): add pageviews to tracking list (#1581)

* Add reranker configuration options to codebase embedding docs (#1584)

- Introduce reranker concept
- List available reranker options
- Provide configuration instructions
- Update keywords to include "reranker"

* chore: update pr template with screenshots (#1590)

* Refactor ConfirmationDialog to use SecondaryButton for cancel action (#1586)

* Added instructions for running docs server locally (#1578)

- Added NPM script method
- Added VS Code task method
- Update contributing guidelines

* Update branch policy (#1577)

- Change PR target to `dev` branch
- Update `CONTRIBUTING.md` instructions

* Consolidate example configurations into the main configuration guide (#1579)

- Moved examples to configuration.md
- Deleted the separate examples.md file
- Updated sidebar order and links
- Improved readability and structure in configuration.md

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* Update completionProvider.ts (warning tab-autocomplete models) (#1566)

* feat: enhanced IndexingProgressBar with blinking dot feature

- Integrated BlinkingDot component
- Added STATUS_COLORS for various states
- Replaced CircleDiv with BlinkingDot in UI
- Updated status messages and layout

* small UI tweaks

* feat(gui): enhance ModelCard, ModelProviderTag, and Toggle components (#1595)

- add styling and adjustments to ModelCard
- update ModelProviderTag font size
- remove box shadow from Toggle component
- tweak icon styles in ModelCard
- improve alignment and spacing

* media query

* feat: add best experience onboarding

* fix: file rename

* stop movement on button hover by keeping same border thickness

* fix mistake in setting cursor: pointer

* fix when free trial option is shown

* Support Node.js versions below 20 for streaming response handling (#1591)

- Add fallback for Node < 20
- Implement toAsyncIterable for streaming
- Use TextDecoder for manual decoding
- Maintain existing streaming for Node 20+

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* fix hasPassedFTL

* fix /edit cancellation from UI

* feat: add `applyCodeBlock` experimental prop (#1601)

* feat: add new model styling improvements (#1609)

* feat: add new model styling improvements

* better gap size

* feat: update bug_report.yml (#1610)

* chore: update bug_report.yml

* typo fix

* feat: add labels to "Add docs" dialog (#1612)

* feat: add labels to "Add docs" dialog

* remove autofocus

* don't double load config

* small fixes

* speed up directory traversal, and use correct native path module

* option not to show config update toast

* merge air-gapped and recommended setup pages

* chore: add telemetry for full screen toggle (#1618)

* Fix headings in codebase-embeddings.md (#1617)

* mention jetbrains

* docs: update changie  (#1619)

* feat: updated changie config

* hide toc and autogenerate

* Update changelog.mdx

* link to deeper explanation of embeddings models

* ensure target="_blank" for all links in sidebar

* fix gif links in intellij README.md

* don't require rust in dependency installation

* chore: fix padding on gh button (#1620)

* chore: adjust button padding

* Update tasks.json

* escape colons in diff path

* smoother lancedb indexing reporting

* smooth progress updates for indexing

* fix tsc err

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* üöë fix constant warnings when onboarding with Ollama

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* team analytics

* apply control plane settings

* workos auth

* ide protocol get session info

* UI for auth

* profile switching

* small fixes

* updates

* refresh tokens

* updates

* fix tsc errs

* model select in toolbar to make room for profile selector

* prod client id

* link to prod URL

* internal beta option

* profiles change listener

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* temporary patch for type errs

* Dev (#1689)

* Fix an issue where CMD+K does not clear the terminal when the terminal has focus (#1671)

On MacOS, ‚åò+K is bound, by default, to Terminal:Clear. Without this
change ‚åò+K does not clear the terminal but instead iniates a chord
sequence and waits for the next stroke of the chord.

Co-authored-by: Rob Leidle <rleidle@tesla.com>

* Change treeSitter to cache the Language objects it loads from wasm (#1672)

Without this change, for a repository with 600 typescript files, the
indexer would fail to finish correctly and there would be many of the
following errors in the webview console log:

'Unable to load language for file ${path} RuntimeError: table index is out of bounds'

The following bash will create a repo that reproduces the problem:

current_path="."

for ((i=1; i<=20; i++)); do
    new_folder="folder-$i"
    mkdir -p "$current_path/$new_folder"
    current_path="$current_path/$new_folder"

    for ((a=1; a<=30; a++)); do
      head -c 10000 /dev/urandom | base64 > "$current_path/file-$a.ts"
    done
done

Co-authored-by: Rob Leidle <rleidle@tesla.com>

* acknowledge sourcemap flag in esbuild.js

* don't run jetbrains-release.yaml on vscode releases

* further testing for walkDir

* chore: add telemetry to commands (#1673)

* test: Add basic unit test to baseLLM (#1668)

* update version

* test: Add basic unit test to baseLLM

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: inimaz <imaz@ai-verse.com>

* feat: add Quick Actions CodeLens feature (#1674)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* add voyage rerank-1

* import Handlebars

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* small UI tweaks

* media query

* feat: add best experience onboarding

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* chore: add telemetry for full screen toggle (#1618)

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* manually implement stop tokens for hf inference api

* chore: onboarding metrics (#1626)

* fix: pageview tracking

* feat: add onboarding telemetry

* create single `onboardingStatus` type

* improved var naming

* remove console logs

* fix windows performance issue

* rename vscodeExtension.ts

* migration of onboarding variables

* "stash" instead of "delete" in indexing progress

* fix preview.yaml

* also fix main.yaml

* Update troubleshooting.md (#1637)

* feat: add quick actions

* Update index.d.ts

* quick actions mvp

* update docs

* subscribe to vscode change settings

* Update commands.ts

* cleanup

* Update quick-actions.md

* Update VerticalPerLineCodeLensProvider.ts

* resolve feedback

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: Nate Sesti <33237525+sestinj@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>

* chore: add `isCommandEvent` to command telemetry (#1675)

* chore: add `isCommandEvent` to command telemetry

* Update commands.ts

* Nate/better retrieval (#1677)

* deduplicatearray tests

* break out separate retrieval pipelines

* IConfigHandler

* tests for codebase indexer

* better .continueignore for continue

* indexing fixes

* ignore .gitignore and .continueignore when indexing

* retrieval pipeline improvements

* fix formatting err in out .continueignore

* add necessary filter to lance_db_cache

* update package.json version

* skip unused tests

* don't ignore .prompt files

* update version

* Update pull_request_template.md

* don't use multi-media format when there are multiple text items

* add free trial experience (#1685)

* fix: add code range for quick actions/fixes (#1687)

* fix: add code range for quick actions/fixes

* Update test.js

* add pathSep message type

* docs improvements

* jetbrains fix

* update package.json version

---------

Co-authored-by: Rob Leidle <rleidle@gmail.com>
Co-authored-by: Rob Leidle <rleidle@tesla.com>
Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: inimaz <49730431+inimaz@users.noreply.github.com>
Co-authored-by: inimaz <imaz@ai-verse.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>

* update package.json version

* skip extension tests

* update package.json version

* handlebars import

* don't push package.json version change from CI

* fix: scroll issues w/ code blocks (#1688)

* fix: scroll issues w/ code blocks

* chore: name offset

* chore: remove docs start

* chore: update headings on troubleshooting.md (#1696)

* ignore .svn folder for indexing (#1699)

* chore: clearer naming for `useSuffix` (#1702)

* chore: clearer naming for `useSuffix`

* schema updates

* fix: cmd+shft+l closes sidebar if focused (#1638)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* add voyage rerank-1

* import Handlebars

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* small UI tweaks

* media query

* feat: add best experience onboarding

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* chore: add telemetry for full screen toggle (#1618)

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* manually implement stop tokens for hf inference api

* chore: onboarding metrics (#1626)

* fix: pageview tracking

* feat: add onboarding telemetry

* create single `onboardingStatus` type

* improved var naming

* remove console logs

* fix windows performance issue

* rename vscodeExtension.ts

* migration of onboarding variables

* "stash" instead of "delete" in indexing progress

* fix preview.yaml

* also fix main.yaml

* Update troubleshooting.md (#1637)

* feat: close panel if main input is focused

* add skip param

* Update TipTapEditor.tsx

* merge dev

* Update commands.ts

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: Nate Sesti <33237525+sestinj@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>

* bugfix: quick actions undefined array (#1704)

* feat: add rich quick pick for quick edit (#1706)

* feat: multistep quick pick

* fix: multi step for context provider

* Update test.js

* Create deepseek.md (#1708)

* style: add max height to model selector (#1712)

* update styling

* remove testing code

* remove comments

* feat: add tutorial card (#1716)

* feat: create tutorial card

* Update TutorialCard.tsx

* feat: add file search to quick edit (#1714)

* feat: multistep quick pick

* fix: multi step for context provider

* Update test.js

* add file search

* complete file search

* remove unused import

* add comments

* Update utils.ts

* update naming

* chore: move quick pick instantiation (#1723)

* Break out into NPM modules (#1726)

* config.json types

* export all schemas

* break out request logic into packages

* update openai adapters to export body types

* update packaging of npm modules

* update packages

* continue proxy

* mistral

* Fix typo in documentation (#1722)

In  set-up-codestral.md
"Trobleshooting" -> "Troubleshooting"

* update package.json version

* ü™Ñ model dropdown, control plane (#1692)

* Nate/control plane client (#1691)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* fix(gui): ctx rendering w/ renderInlineAs: "" (#1541)

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* fix codeqwen autocomplete leading space

* add voyage rerank-1

* feat: `--noEmit` for tsc checks in CI (#1559)

* docs: update CustomContextProvider docs (#1557)

* add stop tokens to qwen prompt

* update docs to reflect 3.5 sonnet being best

* docs: comment out unused providers (#1561)

* import Handlebars

* feat: toast notification for config updates (#1560)

* feat: toast notification for config updates

* feat: only trigger toast on config.json save

* displayRawMarkdown option

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* update to reflect 16 stop words limit for deepseek

* feat: only trigger config update toast in vscode (#1571)

* docs(prompt-files): fix typos + clarify (#1575)

* doc: prompt file typo + clarifications

* fix: add back correct docs

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* docs(telemetry): add pageviews to tracking list (#1581)

* Add reranker configuration options to codebase embedding docs (#1584)

- Introduce reranker concept
- List available reranker options
- Provide configuration instructions
- Update keywords to include "reranker"

* chore: update pr template with screenshots (#1590)

* Refactor ConfirmationDialog to use SecondaryButton for cancel action (#1586)

* Added instructions for running docs server locally (#1578)

- Added NPM script method
- Added VS Code task method
- Update contributing guidelines

* Update branch policy (#1577)

- Change PR target to `dev` branch
- Update `CONTRIBUTING.md` instructions

* Consolidate example configurations into the main configuration guide (#1579)

- Moved examples to configuration.md
- Deleted the separate examples.md file
- Updated sidebar order and links
- Improved readability and structure in configuration.md

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* Update completionProvider.ts (warning tab-autocomplete models) (#1566)

* feat: enhanced IndexingProgressBar with blinking dot feature

- Integrated BlinkingDot component
- Added STATUS_COLORS for various states
- Replaced CircleDiv with BlinkingDot in UI
- Updated status messages and layout

* small UI tweaks

* feat(gui): enhance ModelCard, ModelProviderTag, and Toggle components (#1595)

- add styling and adjustments to ModelCard
- update ModelProviderTag font size
- remove box shadow from Toggle component
- tweak icon styles in ModelCard
- improve alignment and spacing

* media query

* feat: add best experience onboarding

* fix: file rename

* stop movement on button hover by keeping same border thickness

* fix mistake in setting cursor: pointer

* fix when free trial option is shown

* Support Node.js versions below 20 for streaming response handling (#1591)

- Add fallback for Node < 20
- Implement toAsyncIterable for streaming
- Use TextDecoder for manual decoding
- Maintain existing streaming for Node 20+

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* fix hasPassedFTL

* fix /edit cancellation from UI

* feat: add `applyCodeBlock` experimental prop (#1601)

* feat: add new model styling improvements (#1609)

* feat: add new model styling improvements

* better gap size

* feat: update bug_report.yml (#1610)

* chore: update bug_report.yml

* typo fix

* feat: add labels to "Add docs" dialog (#1612)

* feat: add labels to "Add docs" dialog

* remove autofocus

* don't double load config

* small fixes

* speed up directory traversal, and use correct native path module

* option not to show config update toast

* merge air-gapped and recommended setup pages

* chore: add telemetry for full screen toggle (#1618)

* Fix headings in codebase-embeddings.md (#1617)

* mention jetbrains

* docs: update changie  (#1619)

* feat: updated changie config

* hide toc and autogenerate

* Update changelog.mdx

* link to deeper explanation of embeddings models

* ensure target="_blank" for all links in sidebar

* fix gif links in intellij README.md

* don't require rust in dependency installation

* chore: fix padding on gh button (#1620)

* chore: adjust button padding

* Update tasks.json

* escape colons in diff path

* smoother lancedb indexing reporting

* smooth progress updates for indexing

* fix tsc err

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* üöë fix constant warnings when onboarding with Ollama

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* team analytics

* apply control plane settings

* workos auth

* ide protocol get session info

* UI for auth

* profile switching

* small fixes

* updates

* refresh tokens

* updates

* fix tsc errs

* model select in toolbar to make room for profile selector

* prod client id

* link to prod URL

* internal beta option

* profiles change listener

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* temporary patch for type errs

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* skip extension tests

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>
Co-authored-by: Rob Leidle <rleidle@gmail.com>
Co-authored-by: Rob Leidle <rleidle@tesla.com>
Co-authored-by: inimaz <49730431+inimaz@users.noreply.github.com>
Co-authored-by: inimaz <imaz@ai-verse.com>
Co-authored-by: Ana√´l Bonnafous <71386173+AnaelBonnafous@users.noreply.github.com>
Co-authored-by: Huy Tran <119860259+tranquochuy645@users.noreply.github.com>

* Dev (#1740)

* Nate/control plane client (#1691)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* fix(gui): ctx rendering w/ renderInlineAs: "" (#1541)

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* fix codeqwen autocomplete leading space

* add voyage rerank-1

* feat: `--noEmit` for tsc checks in CI (#1559)

* docs: update CustomContextProvider docs (#1557)

* add stop tokens to qwen prompt

* update docs to reflect 3.5 sonnet being best

* docs: comment out unused providers (#1561)

* import Handlebars

* feat: toast notification for config updates (#1560)

* feat: toast notification for config updates

* feat: only trigger toast on config.json save

* displayRawMarkdown option

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* update to reflect 16 stop words limit for deepseek

* feat: only trigger config update toast in vscode (#1571)

* docs(prompt-files): fix typos + clarify (#1575)

* doc: prompt file typo + clarifications

* fix: add back correct docs

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* docs(telemetry): add pageviews to tracking list (#1581)

* Add reranker configuration options to codebase embedding docs (#1584)

- Introduce reranker concept
- List available reranker options
- Provide configuration instructions
- Update keywords to include "reranker"

* chore: update pr template with screenshots (#1590)

* Refactor ConfirmationDialog to use SecondaryButton for cancel action (#1586)

* Added instructions for running docs server locally (#1578)

- Added NPM script method
- Added VS Code task method
- Update contributing guidelines

* Update branch policy (#1577)

- Change PR target to `dev` branch
- Update `CONTRIBUTING.md` instructions

* Consolidate example configurations into the main configuration guide (#1579)

- Moved examples to configuration.md
- Deleted the separate examples.md file
- Updated sidebar order and links
- Improved readability and structure in configuration.md

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* Update completionProvider.ts (warning tab-autocomplete models) (#1566)

* feat: enhanced IndexingProgressBar with blinking dot feature

- Integrated BlinkingDot component
- Added STATUS_COLORS for various states
- Replaced CircleDiv with BlinkingDot in UI
- Updated status messages and layout

* small UI tweaks

* feat(gui): enhance ModelCard, ModelProviderTag, and Toggle components (#1595)

- add styling and adjustments to ModelCard
- update ModelProviderTag font size
- remove box shadow from Toggle component
- tweak icon styles in ModelCard
- improve alignment and spacing

* media query

* feat: add best experience onboarding

* fix: file rename

* stop movement on button hover by keeping same border thickness

* fix mistake in setting cursor: pointer

* fix when free trial option is shown

* Support Node.js versions below 20 for streaming response handling (#1591)

- Add fallback for Node < 20
- Implement toAsyncIterable for streaming
- Use TextDecoder for manual decoding
- Maintain existing streaming for Node 20+

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* fix hasPassedFTL

* fix /edit cancellation from UI

* feat: add `applyCodeBlock` experimental prop (#1601)

* feat: add new model styling improvements (#1609)

* feat: add new model styling improvements

* better gap size

* feat: update bug_report.yml (#1610)

* chore: update bug_report.yml

* typo fix

* feat: add labels to "Add docs" dialog (#1612)

* feat: add labels to "Add docs" dialog

* remove autofocus

* don't double load config

* small fixes

* speed up directory traversal, and use correct native path module

* option not to show config update toast

* merge air-gapped and recommended setup pages

* chore: add telemetry for full screen toggle (#1618)

* Fix headings in codebase-embeddings.md (#1617)

* mention jetbrains

* docs: update changie  (#1619)

* feat: updated changie config

* hide toc and autogenerate

* Update changelog.mdx

* link to deeper explanation of embeddings models

* ensure target="_blank" for all links in sidebar

* fix gif links in intellij README.md

* don't require rust in dependency installation

* chore: fix padding on gh button (#1620)

* chore: adjust button padding

* Update tasks.json

* escape colons in diff path

* smoother lancedb indexing reporting

* smooth progress updates for indexing

* fix tsc err

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* üöë fix constant warnings when onboarding with Ollama

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* team analytics

* apply control plane settings

* workos auth

* ide protocol get session info

* UI for auth

* profile switching

* small fixes

* updates

* refresh tokens

* updates

* fix tsc errs

* model select in toolbar to make room for profile selector

* prod client id

* link to prod URL

* internal beta option

* profiles change listener

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* temporary patch for type errs

* Dev (#1689)

* Fix an issue where CMD+K does not clear the terminal when the terminal has focus (#1671)

On MacOS, ‚åò+K is bound, by default, to Terminal:Clear. Without this
change ‚åò+K does not clear the terminal but instead iniates a chord
sequence and waits for the next stroke of the chord.

Co-authored-by: Rob Leidle <rleidle@tesla.com>

* Change treeSitter to cache the Language objects it loads from wasm (#1672)

Without this change, for a repository with 600 typescript files, the
indexer would fail to finish correctly and there would be many of the
following errors in the webview console log:

'Unable to load language for file ${path} RuntimeError: table index is out of bounds'

The following bash will create a repo that reproduces the problem:

current_path="."

for ((i=1; i<=20; i++)); do
    new_folder="folder-$i"
    mkdir -p "$current_path/$new_folder"
    current_path="$current_path/$new_folder"

    for ((a=1; a<=30; a++)); do
      head -c 10000 /dev/urandom | base64 > "$current_path/file-$a.ts"
    done
done

Co-authored-by: Rob Leidle <rleidle@tesla.com>

* acknowledge sourcemap flag in esbuild.js

* don't run jetbrains-release.yaml on vscode releases

* further testing for walkDir

* chore: add telemetry to commands (#1673)

* test: Add basic unit test to baseLLM (#1668)

* update version

* test: Add basic unit test to baseLLM

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: inimaz <imaz@ai-verse.com>

* feat: add Quick Actions CodeLens feature (#1674)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* add voyage rerank-1

* import Handlebars

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* small UI tweaks

* media query

* feat: add best experience onboarding

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* chore: add telemetry for full screen toggle (#1618)

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* manually implement stop tokens for hf inference api

* chore: onboarding metrics (#1626)

* fix: pageview tracking

* feat: add onboarding telemetry

* create single `onboardingStatus` type

* improved var naming

* remove console logs

* fix windows performance issue

* rename vscodeExtension.ts

* migration of onboarding variables

* "stash" instead of "delete" in indexing progress

* fix preview.yaml

* also fix main.yaml

* Update troubleshooting.md (#1637)

* feat: add quick actions

* Update index.d.ts

* quick actions mvp

* update docs

* subscribe to vscode change settings

* Update commands.ts

* cleanup

* Update quick-actions.md

* Update VerticalPerLineCodeLensProvider.ts

* resolve feedback

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: Nate Sesti <33237525+sestinj@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>

* chore: add `isCommandEvent` to command telemetry (#1675)

* chore: add `isCommandEvent` to command telemetry

* Update commands.ts

* Nate/better retrieval (#1677)

* deduplicatearray tests

* break out separate retrieval pipelines

* IConfigHandler

* tests for codebase indexer

* better .continueignore for continue

* indexing fixes

* ignore .gitignore and .continueignore when indexing

* retrieval pipeline improvements

* fix formatting err in out .continueignore

* add necessary filter to lance_db_cache

* update package.json version

* skip unused tests

* don't ignore .prompt files

* update version

* Update pull_request_template.md

* don't use multi-media format when there are multiple text items

* add free trial experience (#1685)

* fix: add code range for quick actions/fixes (#1687)

* fix: add code range for quick actions/fixes

* Update test.js

* add pathSep message type

* docs improvements

* jetbrains fix

* update package.json version

---------

Co-authored-by: Rob Leidle <rleidle@gmail.com>
Co-authored-by: Rob Leidle <rleidle@tesla.com>
Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: inimaz <49730431+inimaz@users.noreply.github.com>
Co-authored-by: inimaz <imaz@ai-verse.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>

* update package.json version

* skip extension tests

* update package.json version

* handlebars import

* don't push package.json version change from CI

* fix: scroll issues w/ code blocks (#1688)

* fix: scroll issues w/ code blocks

* chore: name offset

* chore: remove docs start

* chore: update headings on troubleshooting.md (#1696)

* ignore .svn folder for indexing (#1699)

* chore: clearer naming for `useSuffix` (#1702)

* chore: clearer naming for `useSuffix`

* schema updates

* fix: cmd+shft+l closes sidebar if focused (#1638)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* add voyage rerank-1

* import Handlebars

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* small UI tweaks

* media query

* feat: add best experience onboarding

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* chore: add telemetry for full screen toggle (#1618)

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* manually implement stop tokens for hf inference api

* chore: onboarding metrics (#1626)

* fix: pageview tracking

* feat: add onboarding telemetry

* create single `onboardingStatus` type

* improved var naming

* remove console logs

* fix windows performance issue

* rename vscodeExtension.ts

* migration of onboarding variables

* "stash" instead of "delete" in indexing progress

* fix preview.yaml

* also fix main.yaml

* Update troubleshooting.md (#1637)

* feat: close panel if main input is focused

* add skip param

* Update TipTapEditor.tsx

* merge dev

* Update commands.ts

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: Nate Sesti <33237525+sestinj@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>

* bugfix: quick actions undefined array (#1704)

* feat: add rich quick pick for quick edit (#1706)

* feat: multistep quick pick

* fix: multi step for context provider

* Update test.js

* Create deepseek.md (#1708)

* style: add max height to model selector (#1712)

* update styling

* remove testing code

* remove comments

* feat: add tutorial card (#1716)

* feat: create tutorial card

* Update TutorialCard.tsx

* feat: add file search to quick edit (#1714)

* feat: multistep quick pick

* fix: multi step for context provider

* Update test.js

* add file search

* complete file search

* remove unused import

* add comments

* Update utils.ts

* update naming

* chore: move quick pick instantiation (#1723)

* Break out into NPM modules (#1726)

* config.json types

* export all schemas

* break out request logic into packages

* update openai adapters to export body types

* update packaging of npm modules

* update packages

* continue proxy

* mistral

* Fix typo in documentation (#1722)

In  set-up-codestral.md
"Trobleshooting" -> "Troubleshooting"

* update package.json version

* ü™Ñ model dropdown, control plane (#1692)

* Nate/control plane client (#1691)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* fix(gui): ctx rendering w/ renderInlineAs: "" (#1541)

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* fix codeqwen autocomplete leading space

* add voyage rerank-1

* feat: `--noEmit` for tsc checks in CI (#1559)

* docs: update CustomContextProvider docs (#1557)

* add stop tokens to qwen prompt

* update docs to reflect 3.5 sonnet being best

* docs: comment out unused providers (#1561)

* import Handlebars

* feat: toast notification for config updates (#1560)

* feat: toast notification for config updates

* feat: only trigger toast on config.json save

* displayRawMarkdown option

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* update to reflect 16 stop words limit for deepseek

* feat: only trigger config update toast in vscode (#1571)

* docs(prompt-files): fix typos + clarify (#1575)

* doc: prompt file typo + clarifications

* fix: add back correct docs

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* docs(telemetry): add pageviews to tracking list (#1581)

* Add reranker configuration options to codebase embedding docs (#1584)

- Introduce reranker concept
- List available reranker options
- Provide configuration instructions
- Update keywords to include "reranker"

* chore: update pr template with screenshots (#1590)

* Refactor ConfirmationDialog to use SecondaryButton for cancel action (#1586)

* Added instructions for running docs server locally (#1578)

- Added NPM script method
- Added VS Code task method
- Update contributing guidelines

* Update branch policy (#1577)

- Change PR target to `dev` branch
- Update `CONTRIBUTING.md` instructions

* Consolidate example configurations into the main configuration guide (#1579)

- Moved examples to configuration.md
- Deleted the separate examples.md file
- Updated sidebar order and links
- Improved readability and structure in configuration.md

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* Update completionProvider.ts (warning tab-autocomplete models) (#1566)

* feat: enhanced IndexingProgressBar with blinking dot feature

- Integrated BlinkingDot component
- Added STATUS_COLORS for various states
- Replaced CircleDiv with BlinkingDot in UI
- Updated status messages and layout

* small UI tweaks

* feat(gui): enhance ModelCard, ModelProviderTag, and Toggle components (#1595)

- add styling and adjustments to ModelCard
- update ModelProviderTag font size
- remove box shadow from Toggle component
- tweak icon styles in ModelCard
- improve alignment and spacing

* media query

* feat: add best experience onboarding

* fix: file rename

* stop movement on button hover by keeping same border thickness

* fix mistake in setting cursor: pointer

* fix when free trial option is shown

* Support Node.js versions below 20 for streaming response handling (#1591)

- Add fallback for Node < 20
- Implement toAsyncIterable for streaming
- Use TextDecoder for manual decoding
- Maintain existing streaming for Node 20+

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* fix hasPassedFTL

* fix /edit cancellation from UI

* feat: add `applyCodeBlock` experimental prop (#1601)

* feat: add new model styling improvements (#1609)

* feat: add new model styling improvements

* better gap size

* feat: update bug_report.yml (#1610)

* chore: update bug_report.yml

* typo fix

* feat: add labels to "Add docs" dialog (#1612)

* feat: add labels to "Add docs" dialog

* remove autofocus

* don't double load config

* small fixes

* speed up directory traversal, and use correct native path module

* option not to show config update toast

* merge air-gapped and recommended setup pages

* chore: add telemetry for full screen toggle (#1618)

* Fix headings in codebase-embeddings.md (#1617)

* mention jetbrains

* docs: update changie  (#1619)

* feat: updated changie config

* hide toc and autogenerate

* Update changelog.mdx

* link to deeper explanation of embeddings models

* ensure target="_blank" for all links in sidebar

* fix gif links in intellij README.md

* don't require rust in dependency installation

* chore: fix padding on gh button (#1620)

* chore: adjust button padding

* Update tasks.json

* escape colons in diff path

* smoother lancedb indexing reporting

* smooth progress updates for indexing

* fix tsc err

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* üöë fix constant warnings when onboarding with Ollama

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* team analytics

* apply control plane settings

* workos auth

* ide protocol get session info

* UI for auth

* profile switching

* small fixes

* updates

* refresh tokens

* updates

* fix tsc errs

* model select in toolbar to make room for profile selector

* prod client id

* link to prod URL

* internal beta option

* profiles change listener

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* temporary patch for type errs

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* skip extension tests

* JetBrains status bar spinner for autocomplete

* Remove unused images

* partial accept jetbrains

* fix double-rendering of jetbrains completions

* fix offset of multi-line jetbrains completions

* enable/disable actions

* upgrade to version 0.0.54

* fix: wrap editor buttons when out of space (#1727)

* Add .continuerc file to config directory on activation to prevent it's indexing. (#1733)

* Updated the content links that were deprecated in the document (#1709)

Co-authored-by: Ihe Fan <ih.fan.1027@gmail.com>

* Nate/dev (#1739)

* JetBrains status bar spinner for autocomplete

* Remove unused images

* partial accept jetbrains

* fix double-rendering of jetbrains completions

* fix offset of multi-line jetbrains completions

* enable/disable actions

* upgrade to version 0.0.54

* llm-info package

* small profile switching improvements

* instruct cmd+I not to leave placeholders

* @ files in context-providers docs

* onboarding fix

* update jetbrains ci to build gui

* feat: single default quick pick to edit (#1743)

* feat: single default quick pick to edit

* Update quick-actions.md

* Update quick-actions.md

* use defaultQuickAction

* quick fixes

* fix: handle line removal diff (#1744)

* fix: handle line removal diff

* remove comments

* Configurable `maxChunkSize` for embedding providers (#1746)

* Add `maxChunkSize` to `EmbeddingsProvider`

* Add `maxChunkSize` to schema

* add support for docs via config (#1594)

* mistral mamba (#1748)

* üêç mistral mamba

* autoscale retrieval based on context length

* autoscale retrieval based on context length

* fix input box movement

* update jetbrains build

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>
Co-authored-by: Rob Leidle <rleidle@gmail.com>
Co-authored-by: Rob Leidle <rleidle@tesla.com>
Co-authored-by: inimaz <49730431+inimaz@users.noreply.github.com>
Co-authored-by: inimaz <imaz@ai-verse.com>
Co-authored-by: Ana√´l Bonnafous <71386173+AnaelBonnafous@users.noreply.github.com>
Co-authored-by: Huy Tran <119860259+tranquochuy645@users.noreply.github.com>
Co-authored-by: Gabriel Gordbegli <ggordbegli@gmail.com>
Co-authored-by: Raven-1027 <83693755+Raven-1027@users.noreply.github.com>
Co-authored-by: Ihe Fan <ih.fan.1027@gmail.com>
Co-authored-by: Lukas Kreussel <65088241+LLukas22@users.noreply.github.com>

* update jetbrains build

* jetbrains build update

* Dev (#1780)

* Nate/control plane client (#1691)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* fix(gui): ctx rendering w/ renderInlineAs: "" (#1541)

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* fix codeqwen autocomplete leading space

* add voyage rerank-1

* feat: `--noEmit` for tsc checks in CI (#1559)

* docs: update CustomContextProvider docs (#1557)

* add stop tokens to qwen prompt

* update docs to reflect 3.5 sonnet being best

* docs: comment out unused providers (#1561)

* import Handlebars

* feat: toast notification for config updates (#1560)

* feat: toast notification for config updates

* feat: only trigger toast on config.json save

* displayRawMarkdown option

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* update to reflect 16 stop words limit for deepseek

* feat: only trigger config update toast in vscode (#1571)

* docs(prompt-files): fix typos + clarify (#1575)

* doc: prompt file typo + clarifications

* fix: add back correct docs

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* docs(telemetry): add pageviews to tracking list (#1581)

* Add reranker configuration options to codebase embedding docs (#1584)

- Introduce reranker concept
- List available reranker options
- Provide configuration instructions
- Update keywords to include "reranker"

* chore: update pr template with screenshots (#1590)

* Refactor ConfirmationDialog to use SecondaryButton for cancel action (#1586)

* Added instructions for running docs server locally (#1578)

- Added NPM script method
- Added VS Code task method
- Update contributing guidelines

* Update branch policy (#1577)

- Change PR target to `dev` branch
- Update `CONTRIBUTING.md` instructions

* Consolidate example configurations into the main configuration guide (#1579)

- Moved examples to configuration.md
- Deleted the separate examples.md file
- Updated sidebar order and links
- Improved readability and structure in configuration.md

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* Update completionProvider.ts (warning tab-autocomplete models) (#1566)

* feat: enhanced IndexingProgressBar with blinking dot feature

- Integrated BlinkingDot component
- Added STATUS_COLORS for various states
- Replaced CircleDiv with BlinkingDot in UI
- Updated status messages and layout

* small UI tweaks

* feat(gui): enhance ModelCard, ModelProviderTag, and Toggle components (#1595)

- add styling and adjustments to ModelCard
- update ModelProviderTag font size
- remove box shadow from Toggle component
- tweak icon styles in ModelCard
- improve alignment and spacing

* media query

* feat: add best experience onboarding

* fix: file rename

* stop movement on button hover by keeping same border thickness

* fix mistake in setting cursor: pointer

* fix when free trial option is shown

* Support Node.js versions below 20 for streaming response handling (#1591)

- Add fallback for Node < 20
- Implement toAsyncIterable for streaming
- Use TextDecoder for manual decoding
- Maintain existing streaming for Node 20+

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* fix hasPassedFTL

* fix /edit cancellation from UI

* feat: add `applyCodeBlock` experimental prop (#1601)

* feat: add new model styling improvements (#1609)

* feat: add new model styling improvements

* better gap size

* feat: update bug_report.yml (#1610)

* chore: update bug_report.yml

* typo fix

* feat: add labels to "Add docs" dialog (#1612)

* feat: add labels to "Add docs" dialog

* remove autofocus

* don't double load config

* small fixes

* speed up directory traversal, and use correct native path module

* option not to show config update toast

* merge air-gapped and recommended setup pages

* chore: add telemetry for full screen toggle (#1618)

* Fix headings in codebase-embeddings.md (#1617)

* mention jetbrains

* docs: update changie  (#1619)

* feat: updated changie config

* hide toc and autogenerate

* Update changelog.mdx

* link to deeper explanation of embeddings models

* ensure target="_blank" for all links in sidebar

* fix gif links in intellij README.md

* don't require rust in dependency installation

* chore: fix padding on gh button (#1620)

* chore: adjust button padding

* Update tasks.json

* escape colons in diff path

* smoother lancedb indexing reporting

* smooth progress updates for indexing

* fix tsc err

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* üöë fix constant warnings when onboarding with Ollama

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* team analytics

* apply control plane settings

* workos auth

* ide protocol get session info

* UI for auth

* profile switching

* small fixes

* updates

* refresh tokens

* updates

* fix tsc errs

* model select in toolbar to make room for profile selector

* prod client id

* link to prod URL

* internal beta option

* profiles change listener

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* temporary patch for type errs

* Dev (#1689)

* Fix an issue where CMD+K does not clear the terminal when the terminal has focus (#1671)

On MacOS, ‚åò+K is bound, by default, to Terminal:Clear. Without this
change ‚åò+K does not clear the terminal but instead iniates a chord
sequence and waits for the next stroke of the chord.

Co-authored-by: Rob Leidle <rleidle@tesla.com>

* Change treeSitter to cache the Language objects it loads from wasm (#1672)

Without this change, for a repository with 600 typescript files, the
indexer would fail to finish correctly and there would be many of the
following errors in the webview console log:

'Unable to load language for file ${path} RuntimeError: table index is out of bounds'

The following bash will create a repo that reproduces the problem:

current_path="."

for ((i=1; i<=20; i++)); do
    new_folder="folder-$i"
    mkdir -p "$current_path/$new_folder"
    current_path="$current_path/$new_folder"

    for ((a=1; a<=30; a++)); do
      head -c 10000 /dev/urandom | base64 > "$current_path/file-$a.ts"
    done
done

Co-authored-by: Rob Leidle <rleidle@tesla.com>

* acknowledge sourcemap flag in esbuild.js

* don't run jetbrains-release.yaml on vscode releases

* further testing for walkDir

* chore: add telemetry to commands (#1673)

* test: Add basic unit test to baseLLM (#1668)

* update version

* test: Add basic unit test to baseLLM

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: inimaz <imaz@ai-verse.com>

* feat: add Quick Actions CodeLens feature (#1674)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* add voyage rerank-1

* import Handlebars

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* small UI tweaks

* media query

* feat: add best experience onboarding

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* chore: add telemetry for full screen toggle (#1618)

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* manually implement stop tokens for hf inference api

* chore: onboarding metrics (#1626)

* fix: pageview tracking

* feat: add onboarding telemetry

* create single `onboardingStatus` type

* improved var naming

* remove console logs

* fix windows performance issue

* rename vscodeExtension.ts

* migration of onboarding variables

* "stash" instead of "delete" in indexing progress

* fix preview.yaml

* also fix main.yaml

* Update troubleshooting.md (#1637)

* feat: add quick act‚Ä¶
----------------------------------------

Commit: e2f7380ee86a8e3483e3f5de5bba708565cde164
Author: Nate Sesti
Date: 2024-07-29 06:18:45+00:00
Message: update ci
----------------------------------------

Commit: 029dc5aceac1df7cbde5f955f693a86c647eab61
Author: Nate Sesti
Date: 2024-07-29 06:20:02+00:00
Message: update package.json version
----------------------------------------

Commit: 7ba14c5149df1361227293a363801c46099b42d9
Author: Stijn Balk
Date: 2024-08-02 19:07:10+00:00
Message: Update select-model.md (#1879)

Add link to Autocomplete (beta) page in Features.
----------------------------------------

Commit: 4826def78b5cb910d171aeb68b30725d610085c5
Author: Nate Sesti
Date: 2024-08-05 22:39:31+00:00
Message: Pre-release changes [skip ci] (#1931)

* update package.json version

* ü™Ñ model dropdown, control plane (#1692)

* Nate/control plane client (#1691)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* fix(gui): ctx rendering w/ renderInlineAs: "" (#1541)

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* fix codeqwen autocomplete leading space

* add voyage rerank-1

* feat: `--noEmit` for tsc checks in CI (#1559)

* docs: update CustomContextProvider docs (#1557)

* add stop tokens to qwen prompt

* update docs to reflect 3.5 sonnet being best

* docs: comment out unused providers (#1561)

* import Handlebars

* feat: toast notification for config updates (#1560)

* feat: toast notification for config updates

* feat: only trigger toast on config.json save

* displayRawMarkdown option

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* update to reflect 16 stop words limit for deepseek

* feat: only trigger config update toast in vscode (#1571)

* docs(prompt-files): fix typos + clarify (#1575)

* doc: prompt file typo + clarifications

* fix: add back correct docs

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* docs(telemetry): add pageviews to tracking list (#1581)

* Add reranker configuration options to codebase embedding docs (#1584)

- Introduce reranker concept
- List available reranker options
- Provide configuration instructions
- Update keywords to include "reranker"

* chore: update pr template with screenshots (#1590)

* Refactor ConfirmationDialog to use SecondaryButton for cancel action (#1586)

* Added instructions for running docs server locally (#1578)

- Added NPM script method
- Added VS Code task method
- Update contributing guidelines

* Update branch policy (#1577)

- Change PR target to `dev` branch
- Update `CONTRIBUTING.md` instructions

* Consolidate example configurations into the main configuration guide (#1579)

- Moved examples to configuration.md
- Deleted the separate examples.md file
- Updated sidebar order and links
- Improved readability and structure in configuration.md

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* Update completionProvider.ts (warning tab-autocomplete models) (#1566)

* feat: enhanced IndexingProgressBar with blinking dot feature

- Integrated BlinkingDot component
- Added STATUS_COLORS for various states
- Replaced CircleDiv with BlinkingDot in UI
- Updated status messages and layout

* small UI tweaks

* feat(gui): enhance ModelCard, ModelProviderTag, and Toggle components (#1595)

- add styling and adjustments to ModelCard
- update ModelProviderTag font size
- remove box shadow from Toggle component
- tweak icon styles in ModelCard
- improve alignment and spacing

* media query

* feat: add best experience onboarding

* fix: file rename

* stop movement on button hover by keeping same border thickness

* fix mistake in setting cursor: pointer

* fix when free trial option is shown

* Support Node.js versions below 20 for streaming response handling (#1591)

- Add fallback for Node < 20
- Implement toAsyncIterable for streaming
- Use TextDecoder for manual decoding
- Maintain existing streaming for Node 20+

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* fix hasPassedFTL

* fix /edit cancellation from UI

* feat: add `applyCodeBlock` experimental prop (#1601)

* feat: add new model styling improvements (#1609)

* feat: add new model styling improvements

* better gap size

* feat: update bug_report.yml (#1610)

* chore: update bug_report.yml

* typo fix

* feat: add labels to "Add docs" dialog (#1612)

* feat: add labels to "Add docs" dialog

* remove autofocus

* don't double load config

* small fixes

* speed up directory traversal, and use correct native path module

* option not to show config update toast

* merge air-gapped and recommended setup pages

* chore: add telemetry for full screen toggle (#1618)

* Fix headings in codebase-embeddings.md (#1617)

* mention jetbrains

* docs: update changie  (#1619)

* feat: updated changie config

* hide toc and autogenerate

* Update changelog.mdx

* link to deeper explanation of embeddings models

* ensure target="_blank" for all links in sidebar

* fix gif links in intellij README.md

* don't require rust in dependency installation

* chore: fix padding on gh button (#1620)

* chore: adjust button padding

* Update tasks.json

* escape colons in diff path

* smoother lancedb indexing reporting

* smooth progress updates for indexing

* fix tsc err

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* üöë fix constant warnings when onboarding with Ollama

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* team analytics

* apply control plane settings

* workos auth

* ide protocol get session info

* UI for auth

* profile switching

* small fixes

* updates

* refresh tokens

* updates

* fix tsc errs

* model select in toolbar to make room for profile selector

* prod client id

* link to prod URL

* internal beta option

* profiles change listener

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* temporary patch for type errs

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* skip extension tests

* update package.json version

* handlebars import

* cmd+I improvements (#1728)

* Nate/control plane client (#1691)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* fix(gui): ctx rendering w/ renderInlineAs: "" (#1541)

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* fix codeqwen autocomplete leading space

* add voyage rerank-1

* feat: `--noEmit` for tsc checks in CI (#1559)

* docs: update CustomContextProvider docs (#1557)

* add stop tokens to qwen prompt

* update docs to reflect 3.5 sonnet being best

* docs: comment out unused providers (#1561)

* import Handlebars

* feat: toast notification for config updates (#1560)

* feat: toast notification for config updates

* feat: only trigger toast on config.json save

* displayRawMarkdown option

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* update to reflect 16 stop words limit for deepseek

* feat: only trigger config update toast in vscode (#1571)

* docs(prompt-files): fix typos + clarify (#1575)

* doc: prompt file typo + clarifications

* fix: add back correct docs

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* docs(telemetry): add pageviews to tracking list (#1581)

* Add reranker configuration options to codebase embedding docs (#1584)

- Introduce reranker concept
- List available reranker options
- Provide configuration instructions
- Update keywords to include "reranker"

* chore: update pr template with screenshots (#1590)

* Refactor ConfirmationDialog to use SecondaryButton for cancel action (#1586)

* Added instructions for running docs server locally (#1578)

- Added NPM script method
- Added VS Code task method
- Update contributing guidelines

* Update branch policy (#1577)

- Change PR target to `dev` branch
- Update `CONTRIBUTING.md` instructions

* Consolidate example configurations into the main configuration guide (#1579)

- Moved examples to configuration.md
- Deleted the separate examples.md file
- Updated sidebar order and links
- Improved readability and structure in configuration.md

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* Update completionProvider.ts (warning tab-autocomplete models) (#1566)

* feat: enhanced IndexingProgressBar with blinking dot feature

- Integrated BlinkingDot component
- Added STATUS_COLORS for various states
- Replaced CircleDiv with BlinkingDot in UI
- Updated status messages and layout

* small UI tweaks

* feat(gui): enhance ModelCard, ModelProviderTag, and Toggle components (#1595)

- add styling and adjustments to ModelCard
- update ModelProviderTag font size
- remove box shadow from Toggle component
- tweak icon styles in ModelCard
- improve alignment and spacing

* media query

* feat: add best experience onboarding

* fix: file rename

* stop movement on button hover by keeping same border thickness

* fix mistake in setting cursor: pointer

* fix when free trial option is shown

* Support Node.js versions below 20 for streaming response handling (#1591)

- Add fallback for Node < 20
- Implement toAsyncIterable for streaming
- Use TextDecoder for manual decoding
- Maintain existing streaming for Node 20+

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* fix hasPassedFTL

* fix /edit cancellation from UI

* feat: add `applyCodeBlock` experimental prop (#1601)

* feat: add new model styling improvements (#1609)

* feat: add new model styling improvements

* better gap size

* feat: update bug_report.yml (#1610)

* chore: update bug_report.yml

* typo fix

* feat: add labels to "Add docs" dialog (#1612)

* feat: add labels to "Add docs" dialog

* remove autofocus

* don't double load config

* small fixes

* speed up directory traversal, and use correct native path module

* option not to show config update toast

* merge air-gapped and recommended setup pages

* chore: add telemetry for full screen toggle (#1618)

* Fix headings in codebase-embeddings.md (#1617)

* mention jetbrains

* docs: update changie  (#1619)

* feat: updated changie config

* hide toc and autogenerate

* Update changelog.mdx

* link to deeper explanation of embeddings models

* ensure target="_blank" for all links in sidebar

* fix gif links in intellij README.md

* don't require rust in dependency installation

* chore: fix padding on gh button (#1620)

* chore: adjust button padding

* Update tasks.json

* escape colons in diff path

* smoother lancedb indexing reporting

* smooth progress updates for indexing

* fix tsc err

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* üöë fix constant warnings when onboarding with Ollama

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* team analytics

* apply control plane settings

* workos auth

* ide protocol get session info

* UI for auth

* profile switching

* small fixes

* updates

* refresh tokens

* updates

* fix tsc errs

* model select in toolbar to make room for profile selector

* prod client id

* link to prod URL

* internal beta option

* profiles change listener

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* temporary patch for type errs

* Dev (#1689)

* Fix an issue where CMD+K does not clear the terminal when the terminal has focus (#1671)

On MacOS, ‚åò+K is bound, by default, to Terminal:Clear. Without this
change ‚åò+K does not clear the terminal but instead iniates a chord
sequence and waits for the next stroke of the chord.

Co-authored-by: Rob Leidle <rleidle@tesla.com>

* Change treeSitter to cache the Language objects it loads from wasm (#1672)

Without this change, for a repository with 600 typescript files, the
indexer would fail to finish correctly and there would be many of the
following errors in the webview console log:

'Unable to load language for file ${path} RuntimeError: table index is out of bounds'

The following bash will create a repo that reproduces the problem:

current_path="."

for ((i=1; i<=20; i++)); do
    new_folder="folder-$i"
    mkdir -p "$current_path/$new_folder"
    current_path="$current_path/$new_folder"

    for ((a=1; a<=30; a++)); do
      head -c 10000 /dev/urandom | base64 > "$current_path/file-$a.ts"
    done
done

Co-authored-by: Rob Leidle <rleidle@tesla.com>

* acknowledge sourcemap flag in esbuild.js

* don't run jetbrains-release.yaml on vscode releases

* further testing for walkDir

* chore: add telemetry to commands (#1673)

* test: Add basic unit test to baseLLM (#1668)

* update version

* test: Add basic unit test to baseLLM

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: inimaz <imaz@ai-verse.com>

* feat: add Quick Actions CodeLens feature (#1674)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* add voyage rerank-1

* import Handlebars

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* small UI tweaks

* media query

* feat: add best experience onboarding

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* chore: add telemetry for full screen toggle (#1618)

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* manually implement stop tokens for hf inference api

* chore: onboarding metrics (#1626)

* fix: pageview tracking

* feat: add onboarding telemetry

* create single `onboardingStatus` type

* improved var naming

* remove console logs

* fix windows performance issue

* rename vscodeExtension.ts

* migration of onboarding variables

* "stash" instead of "delete" in indexing progress

* fix preview.yaml

* also fix main.yaml

* Update troubleshooting.md (#1637)

* feat: add quick actions

* Update index.d.ts

* quick actions mvp

* update docs

* subscribe to vscode change settings

* Update commands.ts

* cleanup

* Update quick-actions.md

* Update VerticalPerLineCodeLensProvider.ts

* resolve feedback

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: Nate Sesti <33237525+sestinj@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>

* chore: add `isCommandEvent` to command telemetry (#1675)

* chore: add `isCommandEvent` to command telemetry

* Update commands.ts

* Nate/better retrieval (#1677)

* deduplicatearray tests

* break out separate retrieval pipelines

* IConfigHandler

* tests for codebase indexer

* better .continueignore for continue

* indexing fixes

* ignore .gitignore and .continueignore when indexing

* retrieval pipeline improvements

* fix formatting err in out .continueignore

* add necessary filter to lance_db_cache

* update package.json version

* skip unused tests

* don't ignore .prompt files

* update version

* Update pull_request_template.md

* don't use multi-media format when there are multiple text items

* add free trial experience (#1685)

* fix: add code range for quick actions/fixes (#1687)

* fix: add code range for quick actions/fixes

* Update test.js

* add pathSep message type

* docs improvements

* jetbrains fix

* update package.json version

---------

Co-authored-by: Rob Leidle <rleidle@gmail.com>
Co-authored-by: Rob Leidle <rleidle@tesla.com>
Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: inimaz <49730431+inimaz@users.noreply.github.com>
Co-authored-by: inimaz <imaz@ai-verse.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>

* update package.json version

* skip extension tests

* update package.json version

* handlebars import

* don't push package.json version change from CI

* fix: scroll issues w/ code blocks (#1688)

* fix: scroll issues w/ code blocks

* chore: name offset

* chore: remove docs start

* chore: update headings on troubleshooting.md (#1696)

* ignore .svn folder for indexing (#1699)

* chore: clearer naming for `useSuffix` (#1702)

* chore: clearer naming for `useSuffix`

* schema updates

* fix: cmd+shft+l closes sidebar if focused (#1638)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* add voyage rerank-1

* import Handlebars

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* small UI tweaks

* media query

* feat: add best experience onboarding

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* chore: add telemetry for full screen toggle (#1618)

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* manually implement stop tokens for hf inference api

* chore: onboarding metrics (#1626)

* fix: pageview tracking

* feat: add onboarding telemetry

* create single `onboardingStatus` type

* improved var naming

* remove console logs

* fix windows performance issue

* rename vscodeExtension.ts

* migration of onboarding variables

* "stash" instead of "delete" in indexing progress

* fix preview.yaml

* also fix main.yaml

* Update troubleshooting.md (#1637)

* feat: close panel if main input is focused

* add skip param

* Update TipTapEditor.tsx

* merge dev

* Update commands.ts

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: Nate Sesti <33237525+sestinj@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>

* bugfix: quick actions undefined array (#1704)

* feat: add rich quick pick for quick edit (#1706)

* feat: multistep quick pick

* fix: multi step for context provider

* Update test.js

* Create deepseek.md (#1708)

* style: add max height to model selector (#1712)

* update styling

* remove testing code

* remove comments

* feat: add tutorial card (#1716)

* feat: create tutorial card

* Update TutorialCard.tsx

* feat: add file search to quick edit (#1714)

* feat: multistep quick pick

* fix: multi step for context provider

* Update test.js

* add file search

* complete file search

* remove unused import

* add comments

* Update utils.ts

* update naming

* chore: move quick pick instantiation (#1723)

* Break out into NPM modules (#1726)

* config.json types

* export all schemas

* break out request logic into packages

* update openai adapters to export body types

* update packaging of npm modules

* update packages

* continue proxy

* mistral

* Fix typo in documentation (#1722)

In  set-up-codestral.md
"Trobleshooting" -> "Troubleshooting"

* update package.json version

* ü™Ñ model dropdown, control plane (#1692)

* Nate/control plane client (#1691)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* fix(gui): ctx rendering w/ renderInlineAs: "" (#1541)

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* fix codeqwen autocomplete leading space

* add voyage rerank-1

* feat: `--noEmit` for tsc checks in CI (#1559)

* docs: update CustomContextProvider docs (#1557)

* add stop tokens to qwen prompt

* update docs to reflect 3.5 sonnet being best

* docs: comment out unused providers (#1561)

* import Handlebars

* feat: toast notification for config updates (#1560)

* feat: toast notification for config updates

* feat: only trigger toast on config.json save

* displayRawMarkdown option

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* update to reflect 16 stop words limit for deepseek

* feat: only trigger config update toast in vscode (#1571)

* docs(prompt-files): fix typos + clarify (#1575)

* doc: prompt file typo + clarifications

* fix: add back correct docs

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* docs(telemetry): add pageviews to tracking list (#1581)

* Add reranker configuration options to codebase embedding docs (#1584)

- Introduce reranker concept
- List available reranker options
- Provide configuration instructions
- Update keywords to include "reranker"

* chore: update pr template with screenshots (#1590)

* Refactor ConfirmationDialog to use SecondaryButton for cancel action (#1586)

* Added instructions for running docs server locally (#1578)

- Added NPM script method
- Added VS Code task method
- Update contributing guidelines

* Update branch policy (#1577)

- Change PR target to `dev` branch
- Update `CONTRIBUTING.md` instructions

* Consolidate example configurations into the main configuration guide (#1579)

- Moved examples to configuration.md
- Deleted the separate examples.md file
- Updated sidebar order and links
- Improved readability and structure in configuration.md

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* Update completionProvider.ts (warning tab-autocomplete models) (#1566)

* feat: enhanced IndexingProgressBar with blinking dot feature

- Integrated BlinkingDot component
- Added STATUS_COLORS for various states
- Replaced CircleDiv with BlinkingDot in UI
- Updated status messages and layout

* small UI tweaks

* feat(gui): enhance ModelCard, ModelProviderTag, and Toggle components (#1595)

- add styling and adjustments to ModelCard
- update ModelProviderTag font size
- remove box shadow from Toggle component
- tweak icon styles in ModelCard
- improve alignment and spacing

* media query

* feat: add best experience onboarding

* fix: file rename

* stop movement on button hover by keeping same border thickness

* fix mistake in setting cursor: pointer

* fix when free trial option is shown

* Support Node.js versions below 20 for streaming response handling (#1591)

- Add fallback for Node < 20
- Implement toAsyncIterable for streaming
- Use TextDecoder for manual decoding
- Maintain existing streaming for Node 20+

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* fix hasPassedFTL

* fix /edit cancellation from UI

* feat: add `applyCodeBlock` experimental prop (#1601)

* feat: add new model styling improvements (#1609)

* feat: add new model styling improvements

* better gap size

* feat: update bug_report.yml (#1610)

* chore: update bug_report.yml

* typo fix

* feat: add labels to "Add docs" dialog (#1612)

* feat: add labels to "Add docs" dialog

* remove autofocus

* don't double load config

* small fixes

* speed up directory traversal, and use correct native path module

* option not to show config update toast

* merge air-gapped and recommended setup pages

* chore: add telemetry for full screen toggle (#1618)

* Fix headings in codebase-embeddings.md (#1617)

* mention jetbrains

* docs: update changie  (#1619)

* feat: updated changie config

* hide toc and autogenerate

* Update changelog.mdx

* link to deeper explanation of embeddings models

* ensure target="_blank" for all links in sidebar

* fix gif links in intellij README.md

* don't require rust in dependency installation

* chore: fix padding on gh button (#1620)

* chore: adjust button padding

* Update tasks.json

* escape colons in diff path

* smoother lancedb indexing reporting

* smooth progress updates for indexing

* fix tsc err

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* üöë fix constant warnings when onboarding with Ollama

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* team analytics

* apply control plane settings

* workos auth

* ide protocol get session info

* UI for auth

* profile switching

* small fixes

* updates

* refresh tokens

* updates

* fix tsc errs

* model select in toolbar to make room for profile selector

* prod client id

* link to prod URL

* internal beta option

* profiles change listener

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* temporary patch for type errs

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* skip extension tests

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>
Co-authored-by: Rob Leidle <rleidle@gmail.com>
Co-authored-by: Rob Leidle <rleidle@tesla.com>
Co-authored-by: inimaz <49730431+inimaz@users.noreply.github.com>
Co-authored-by: inimaz <imaz@ai-verse.com>
Co-authored-by: Ana√´l Bonnafous <71386173+AnaelBonnafous@users.noreply.github.com>
Co-authored-by: Huy Tran <119860259+tranquochuy645@users.noreply.github.com>

* Dev (#1740)

* Nate/control plane client (#1691)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* fix(gui): ctx rendering w/ renderInlineAs: "" (#1541)

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* fix codeqwen autocomplete leading space

* add voyage rerank-1

* feat: `--noEmit` for tsc checks in CI (#1559)

* docs: update CustomContextProvider docs (#1557)

* add stop tokens to qwen prompt

* update docs to reflect 3.5 sonnet being best

* docs: comment out unused providers (#1561)

* import Handlebars

* feat: toast notification for config updates (#1560)

* feat: toast notification for config updates

* feat: only trigger toast on config.json save

* displayRawMarkdown option

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* update to reflect 16 stop words limit for deepseek

* feat: only trigger config update toast in vscode (#1571)

* docs(prompt-files): fix typos + clarify (#1575)

* doc: prompt file typo + clarifications

* fix: add back correct docs

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* docs(telemetry): add pageviews to tracking list (#1581)

* Add reranker configuration options to codebase embedding docs (#1584)

- Introduce reranker concept
- List available reranker options
- Provide configuration instructions
- Update keywords to include "reranker"

* chore: update pr template with screenshots (#1590)

* Refactor ConfirmationDialog to use SecondaryButton for cancel action (#1586)

* Added instructions for running docs server locally (#1578)

- Added NPM script method
- Added VS Code task method
- Update contributing guidelines

* Update branch policy (#1577)

- Change PR target to `dev` branch
- Update `CONTRIBUTING.md` instructions

* Consolidate example configurations into the main configuration guide (#1579)

- Moved examples to configuration.md
- Deleted the separate examples.md file
- Updated sidebar order and links
- Improved readability and structure in configuration.md

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* Update completionProvider.ts (warning tab-autocomplete models) (#1566)

* feat: enhanced IndexingProgressBar with blinking dot feature

- Integrated BlinkingDot component
- Added STATUS_COLORS for various states
- Replaced CircleDiv with BlinkingDot in UI
- Updated status messages and layout

* small UI tweaks

* feat(gui): enhance ModelCard, ModelProviderTag, and Toggle components (#1595)

- add styling and adjustments to ModelCard
- update ModelProviderTag font size
- remove box shadow from Toggle component
- tweak icon styles in ModelCard
- improve alignment and spacing

* media query

* feat: add best experience onboarding

* fix: file rename

* stop movement on button hover by keeping same border thickness

* fix mistake in setting cursor: pointer

* fix when free trial option is shown

* Support Node.js versions below 20 for streaming response handling (#1591)

- Add fallback for Node < 20
- Implement toAsyncIterable for streaming
- Use TextDecoder for manual decoding
- Maintain existing streaming for Node 20+

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* fix hasPassedFTL

* fix /edit cancellation from UI

* feat: add `applyCodeBlock` experimental prop (#1601)

* feat: add new model styling improvements (#1609)

* feat: add new model styling improvements

* better gap size

* feat: update bug_report.yml (#1610)

* chore: update bug_report.yml

* typo fix

* feat: add labels to "Add docs" dialog (#1612)

* feat: add labels to "Add docs" dialog

* remove autofocus

* don't double load config

* small fixes

* speed up directory traversal, and use correct native path module

* option not to show config update toast

* merge air-gapped and recommended setup pages

* chore: add telemetry for full screen toggle (#1618)

* Fix headings in codebase-embeddings.md (#1617)

* mention jetbrains

* docs: update changie  (#1619)

* feat: updated changie config

* hide toc and autogenerate

* Update changelog.mdx

* link to deeper explanation of embeddings models

* ensure target="_blank" for all links in sidebar

* fix gif links in intellij README.md

* don't require rust in dependency installation

* chore: fix padding on gh button (#1620)

* chore: adjust button padding

* Update tasks.json

* escape colons in diff path

* smoother lancedb indexing reporting

* smooth progress updates for indexing

* fix tsc err

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* üöë fix constant warnings when onboarding with Ollama

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* team analytics

* apply control plane settings

* workos auth

* ide protocol get session info

* UI for auth

* profile switching

* small fixes

* updates

* refresh tokens

* updates

* fix tsc errs

* model select in toolbar to make room for profile selector

* prod client id

* link to prod URL

* internal beta option

* profiles change listener

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* temporary patch for type errs

* Dev (#1689)

* Fix an issue where CMD+K does not clear the terminal when the terminal has focus (#1671)

On MacOS, ‚åò+K is bound, by default, to Terminal:Clear. Without this
change ‚åò+K does not clear the terminal but instead iniates a chord
sequence and waits for the next stroke of the chord.

Co-authored-by: Rob Leidle <rleidle@tesla.com>

* Change treeSitter to cache the Language objects it loads from wasm (#1672)

Without this change, for a repository with 600 typescript files, the
indexer would fail to finish correctly and there would be many of the
following errors in the webview console log:

'Unable to load language for file ${path} RuntimeError: table index is out of bounds'

The following bash will create a repo that reproduces the problem:

current_path="."

for ((i=1; i<=20; i++)); do
    new_folder="folder-$i"
    mkdir -p "$current_path/$new_folder"
    current_path="$current_path/$new_folder"

    for ((a=1; a<=30; a++)); do
      head -c 10000 /dev/urandom | base64 > "$current_path/file-$a.ts"
    done
done

Co-authored-by: Rob Leidle <rleidle@tesla.com>

* acknowledge sourcemap flag in esbuild.js

* don't run jetbrains-release.yaml on vscode releases

* further testing for walkDir

* chore: add telemetry to commands (#1673)

* test: Add basic unit test to baseLLM (#1668)

* update version

* test: Add basic unit test to baseLLM

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: inimaz <imaz@ai-verse.com>

* feat: add Quick Actions CodeLens feature (#1674)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* add voyage rerank-1

* import Handlebars

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* small UI tweaks

* media query

* feat: add best experience onboarding

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* chore: add telemetry for full screen toggle (#1618)

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* manually implement stop tokens for hf inference api

* chore: onboarding metrics (#1626)

* fix: pageview tracking

* feat: add onboarding telemetry

* create single `onboardingStatus` type

* improved var naming

* remove console logs

* fix windows performance issue

* rename vscodeExtension.ts

* migration of onboarding variables

* "stash" instead of "delete" in indexing progress

* fix preview.yaml

* also fix main.yaml

* Update troubleshooting.md (#1637)

* feat: add quick actions

* Update index.d.ts

* quick actions mvp

* update docs

* subscribe to vscode change settings

* Update commands.ts

* cleanup

* Update quick-actions.md

* Update VerticalPerLineCodeLensProvider.ts

* resolve feedback

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: Nate Sesti <33237525+sestinj@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>

* chore: add `isCommandEvent` to command telemetry (#1675)

* chore: add `isCommandEvent` to command telemetry

* Update commands.ts

* Nate/better retrieval (#1677)

* deduplicatearray tests

* break out separate retrieval pipelines

* IConfigHandler

* tests for codebase indexer

* better .continueignore for continue

* indexing fixes

* ignore .gitignore and .continueignore when indexing

* retrieval pipeline improvements

* fix formatting err in out .continueignore

* add necessary filter to lance_db_cache

* update package.json version

* skip unused tests

* don't ignore .prompt files

* update version

* Update pull_request_template.md

* don't use multi-media format when there are multiple text items

* add free trial experience (#1685)

* fix: add code range for quick actions/fixes (#1687)

* fix: add code range for quick actions/fixes

* Update test.js

* add pathSep message type

* docs improvements

* jetbrains fix

* update package.json version

---------

Co-authored-by: Rob Leidle <rleidle@gmail.com>
Co-authored-by: Rob Leidle <rleidle@tesla.com>
Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: inimaz <49730431+inimaz@users.noreply.github.com>
Co-authored-by: inimaz <imaz@ai-verse.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>

* update package.json version

* skip extension tests

* update package.json version

* handlebars import

* don't push package.json version change from CI

* fix: scroll issues w/ code blocks (#1688)

* fix: scroll issues w/ code blocks

* chore: name offset

* chore: remove docs start

* chore: update headings on troubleshooting.md (#1696)

* ignore .svn folder for indexing (#1699)

* chore: clearer naming for `useSuffix` (#1702)

* chore: clearer naming for `useSuffix`

* schema updates

* fix: cmd+shft+l closes sidebar if focused (#1638)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* add voyage rerank-1

* import Handlebars

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* small UI tweaks

* media query

* feat: add best experience onboarding

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* chore: add telemetry for full screen toggle (#1618)

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* manually implement stop tokens for hf inference api

* chore: onboarding metrics (#1626)

* fix: pageview tracking

* feat: add onboarding telemetry

* create single `onboardingStatus` type

* improved var naming

* remove console logs

* fix windows performance issue

* rename vscodeExtension.ts

* migration of onboarding variables

* "stash" instead of "delete" in indexing progress

* fix preview.yaml

* also fix main.yaml

* Update troubleshooting.md (#1637)

* feat: close panel if main input is focused

* add skip param

* Update TipTapEditor.tsx

* merge dev

* Update commands.ts

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: Nate Sesti <33237525+sestinj@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>

* bugfix: quick actions undefined array (#1704)

* feat: add rich quick pick for quick edit (#1706)

* feat: multistep quick pick

* fix: multi step for context provider

* Update test.js

* Create deepseek.md (#1708)

* style: add max height to model selector (#1712)

* update styling

* remove testing code

* remove comments

* feat: add tutorial card (#1716)

* feat: create tutorial card

* Update TutorialCard.tsx

* feat: add file search to quick edit (#1714)

* feat: multistep quick pick

* fix: multi step for context provider

* Update test.js

* add file search

* complete file search

* remove unused import

* add comments

* Update utils.ts

* update naming

* chore: move quick pick instantiation (#1723)

* Break out into NPM modules (#1726)

* config.json types

* export all schemas

* break out request logic into packages

* update openai adapters to export body types

* update packaging of npm modules

* update packages

* continue proxy

* mistral

* Fix typo in documentation (#1722)

In  set-up-codestral.md
"Trobleshooting" -> "Troubleshooting"

* update package.json version

* ü™Ñ model dropdown, control plane (#1692)

* Nate/control plane client (#1691)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* fix(gui): ctx rendering w/ renderInlineAs: "" (#1541)

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* fix codeqwen autocomplete leading space

* add voyage rerank-1

* feat: `--noEmit` for tsc checks in CI (#1559)

* docs: update CustomContextProvider docs (#1557)

* add stop tokens to qwen prompt

* update docs to reflect 3.5 sonnet being best

* docs: comment out unused providers (#1561)

* import Handlebars

* feat: toast notification for config updates (#1560)

* feat: toast notification for config updates

* feat: only trigger toast on config.json save

* displayRawMarkdown option

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* update to reflect 16 stop words limit for deepseek

* feat: only trigger config update toast in vscode (#1571)

* docs(prompt-files): fix typos + clarify (#1575)

* doc: prompt file typo + clarifications

* fix: add back correct docs

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* docs(telemetry): add pageviews to tracking list (#1581)

* Add reranker configuration options to codebase embedding docs (#1584)

- Introduce reranker concept
- List available reranker options
- Provide configuration instructions
- Update keywords to include "reranker"

* chore: update pr template with screenshots (#1590)

* Refactor ConfirmationDialog to use SecondaryButton for cancel action (#1586)

* Added instructions for running docs server locally (#1578)

- Added NPM script method
- Added VS Code task method
- Update contributing guidelines

* Update branch policy (#1577)

- Change PR target to `dev` branch
- Update `CONTRIBUTING.md` instructions

* Consolidate example configurations into the main configuration guide (#1579)

- Moved examples to configuration.md
- Deleted the separate examples.md file
- Updated sidebar order and links
- Improved readability and structure in configuration.md

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* Update completionProvider.ts (warning tab-autocomplete models) (#1566)

* feat: enhanced IndexingProgressBar with blinking dot feature

- Integrated BlinkingDot component
- Added STATUS_COLORS for various states
- Replaced CircleDiv with BlinkingDot in UI
- Updated status messages and layout

* small UI tweaks

* feat(gui): enhance ModelCard, ModelProviderTag, and Toggle components (#1595)

- add styling and adjustments to ModelCard
- update ModelProviderTag font size
- remove box shadow from Toggle component
- tweak icon styles in ModelCard
- improve alignment and spacing

* media query

* feat: add best experience onboarding

* fix: file rename

* stop movement on button hover by keeping same border thickness

* fix mistake in setting cursor: pointer

* fix when free trial option is shown

* Support Node.js versions below 20 for streaming response handling (#1591)

- Add fallback for Node < 20
- Implement toAsyncIterable for streaming
- Use TextDecoder for manual decoding
- Maintain existing streaming for Node 20+

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* fix hasPassedFTL

* fix /edit cancellation from UI

* feat: add `applyCodeBlock` experimental prop (#1601)

* feat: add new model styling improvements (#1609)

* feat: add new model styling improvements

* better gap size

* feat: update bug_report.yml (#1610)

* chore: update bug_report.yml

* typo fix

* feat: add labels to "Add docs" dialog (#1612)

* feat: add labels to "Add docs" dialog

* remove autofocus

* don't double load config

* small fixes

* speed up directory traversal, and use correct native path module

* option not to show config update toast

* merge air-gapped and recommended setup pages

* chore: add telemetry for full screen toggle (#1618)

* Fix headings in codebase-embeddings.md (#1617)

* mention jetbrains

* docs: update changie  (#1619)

* feat: updated changie config

* hide toc and autogenerate

* Update changelog.mdx

* link to deeper explanation of embeddings models

* ensure target="_blank" for all links in sidebar

* fix gif links in intellij README.md

* don't require rust in dependency installation

* chore: fix padding on gh button (#1620)

* chore: adjust button padding

* Update tasks.json

* escape colons in diff path

* smoother lancedb indexing reporting

* smooth progress updates for indexing

* fix tsc err

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* üöë fix constant warnings when onboarding with Ollama

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* team analytics

* apply control plane settings

* workos auth

* ide protocol get session info

* UI for auth

* profile switching

* small fixes

* updates

* refresh tokens

* updates

* fix tsc errs

* model select in toolbar to make room for profile selector

* prod client id

* link to prod URL

* internal beta option

* profiles change listener

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* temporary patch for type errs

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* skip extension tests

* JetBrains status bar spinner for autocomplete

* Remove unused images

* partial accept jetbrains

* fix double-rendering of jetbrains completions

* fix offset of multi-line jetbrains completions

* enable/disable actions

* upgrade to version 0.0.54

* fix: wrap editor buttons when out of space (#1727)

* Add .continuerc file to config directory on activation to prevent it's indexing. (#1733)

* Updated the content links that were deprecated in the document (#1709)

Co-authored-by: Ihe Fan <ih.fan.1027@gmail.com>

* Nate/dev (#1739)

* JetBrains status bar spinner for autocomplete

* Remove unused images

* partial accept jetbrains

* fix double-rendering of jetbrains completions

* fix offset of multi-line jetbrains completions

* enable/disable actions

* upgrade to version 0.0.54

* llm-info package

* small profile switching improvements

* instruct cmd+I not to leave placeholders

* @ files in context-providers docs

* onboarding fix

* update jetbrains ci to build gui

* feat: single default quick pick to edit (#1743)

* feat: single default quick pick to edit

* Update quick-actions.md

* Update quick-actions.md

* use defaultQuickAction

* quick fixes

* fix: handle line removal diff (#1744)

* fix: handle line removal diff

* remove comments

* Configurable `maxChunkSize` for embedding providers (#1746)

* Add `maxChunkSize` to `EmbeddingsProvider`

* Add `maxChunkSize` to schema

* add support for docs via config (#1594)

* mistral mamba (#1748)

* üêç mistral mamba

* autoscale retrieval based on context length

* autoscale retrieval based on context length

* fix input box movement

* update jetbrains build

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>
Co-authored-by: Rob Leidle <rleidle@gmail.com>
Co-authored-by: Rob Leidle <rleidle@tesla.com>
Co-authored-by: inimaz <49730431+inimaz@users.noreply.github.com>
Co-authored-by: inimaz <imaz@ai-verse.com>
Co-authored-by: Ana√´l Bonnafous <71386173+AnaelBonnafous@users.noreply.github.com>
Co-authored-by: Huy Tran <119860259+tranquochuy645@users.noreply.github.com>
Co-authored-by: Gabriel Gordbegli <ggordbegli@gmail.com>
Co-authored-by: Raven-1027 <83693755+Raven-1027@users.noreply.github.com>
Co-authored-by: Ihe Fan <ih.fan.1027@gmail.com>
Co-authored-by: Lukas Kreussel <65088241+LLukas22@users.noreply.github.com>

* update jetbrains build

* jetbrains build update

* Dev (#1780)

* Nate/control plane client (#1691)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* fix(gui): ctx rendering w/ renderInlineAs: "" (#1541)

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* fix codeqwen autocomplete leading space

* add voyage rerank-1

* feat: `--noEmit` for tsc checks in CI (#1559)

* docs: update CustomContextProvider docs (#1557)

* add stop tokens to qwen prompt

* update docs to reflect 3.5 sonnet being best

* docs: comment out unused providers (#1561)

* import Handlebars

* feat: toast notification for config updates (#1560)

* feat: toast notification for config updates

* feat: only trigger toast on config.json save

* displayRawMarkdown option

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* update to reflect 16 stop words limit for deepseek

* feat: only trigger config update toast in vscode (#1571)

* docs(prompt-files): fix typos + clarify (#1575)

* doc: prompt file typo + clarifications

* fix: add back correct docs

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* docs(telemetry): add pageviews to tracking list (#1581)

* Add reranker configuration options to codebase embedding docs (#1584)

- Introduce reranker concept
- List available reranker options
- Provide configuration instructions
- Update keywords to include "reranker"

* chore: update pr template with screenshots (#1590)

* Refactor ConfirmationDialog to use SecondaryButton for cancel action (#1586)

* Added instructions for running docs server locally (#1578)

- Added NPM script method
- Added VS Code task method
- Update contributing guidelines

* Update branch policy (#1577)

- Change PR target to `dev` branch
- Update `CONTRIBUTING.md` instructions

* Consolidate example configurations into the main configuration guide (#1579)

- Moved examples to configuration.md
- Deleted the separate examples.md file
- Updated sidebar order and links
- Improved readability and structure in configuration.md

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* Update completionProvider.ts (warning tab-autocomplete models) (#1566)

* feat: enhanced IndexingProgressBar with blinking dot feature

- Integrated BlinkingDot component
- Added STATUS_COLORS for various states
- Replaced CircleDiv with BlinkingDot in UI
- Updated status messages and layout

* small UI tweaks

* feat(gui): enhance ModelCard, ModelProviderTag, and Toggle components (#1595)

- add styling and adjustments to ModelCard
- update ModelProviderTag font size
- remove box shadow from Toggle component
- tweak icon styles in ModelCard
- improve alignment and spacing

* media query

* feat: add best experience onboarding

* fix: file rename

* stop movement on button hover by keeping same border thickness

* fix mistake in setting cursor: pointer

* fix when free trial option is shown

* Support Node.js versions below 20 for streaming response handling (#1591)

- Add fallback for Node < 20
- Implement toAsyncIterable for streaming
- Use TextDecoder for manual decoding
- Maintain existing streaming for Node 20+

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* fix hasPassedFTL

* fix /edit cancellation from UI

* feat: add `applyCodeBlock` experimental prop (#1601)

* feat: add new model styling improvements (#1609)

* feat: add new model styling improvements

* better gap size

* feat: update bug_report.yml (#1610)

* chore: update bug_report.yml

* typo fix

* feat: add labels to "Add docs" dialog (#1612)

* feat: add labels to "Add docs" dialog

* remove autofocus

* don't double load config

* small fixes

* speed up directory traversal, and use correct native path module

* option not to show config update toast

* merge air-gapped and recommended setup pages

* chore: add telemetry for full screen toggle (#1618)

* Fix headings in codebase-embeddings.md (#1617)

* mention jetbrains

* docs: update changie  (#1619)

* feat: updated changie config

* hide toc and autogenerate

* Update changelog.mdx

* link to deeper explanation of embeddings models

* ensure target="_blank" for all links in sidebar

* fix gif links in intellij README.md

* don't require rust in dependency installation

* chore: fix padding on gh button (#1620)

* chore: adjust button padding

* Update tasks.json

* escape colons in diff path

* smoother lancedb indexing reporting

* smooth progress updates for indexing

* fix tsc err

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* üöë fix constant warnings when onboarding with Ollama

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* team analytics

* apply control plane settings

* workos auth

* ide protocol get session info

* UI for auth

* profile switching

* small fixes

* updates

* refresh tokens

* updates

* fix tsc errs

* model select in toolbar to make room for profile selector

* prod client id

* link to prod URL

* internal beta option

* profiles change listener

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* temporary patch for type errs

* Dev (#1689)

* Fix an issue where CMD+K does not clear the terminal when the terminal has focus (#1671)

On MacOS, ‚åò+K is bound, by default, to Terminal:Clear. Without this
change ‚åò+K does not clear the terminal but instead iniates a chord
sequence and waits for the next stroke of the chord.

Co-authored-by: Rob Leidle <rleidle@tesla.com>

* Change treeSitter to cache the Language objects it loads from wasm (#1672)

Without this change, for a repository with 600 typescript files, the
indexer would fail to finish correctly and there would be many of the
following errors in the webview console log:

'Unable to load language for file ${path} RuntimeError: table index is out of bounds'

The following bash will create a repo that reproduces the problem:

current_path="."

for ((i=1; i<=20; i++)); do
    new_folder="folder-$i"
    mkdir -p "$current_path/$new_folder"
    current_path="$current_path/$new_folder"

    for ((a=1; a<=30; a++)); do
      head -c 10000 /dev/urandom | base64 > "$current_path/file-$a.ts"
    done
done

Co-authored-by: Rob Leidle <rleidle@tesla.com>

* acknowledge sourcemap flag in esbuild.js

* don't run jetbrains-release.yaml on vscode releases

* further testing for walkDir

* chore: add telemetry to commands (#1673)

* test: Add basic unit test to baseLLM (#1668)

* update version

* test: Add basic unit test to baseLLM

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: inimaz <imaz@ai-verse.com>

* feat: add Quick Actions CodeLens feature (#1674)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* add voyage rerank-1

* import Handlebars

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* small UI tweaks

* media query

* feat: add best experience onboarding

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* chore: add telemetry for full screen toggle (#1618)

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* manually implement stop tokens for hf inference api

* chore: onboarding metrics (#1626)

* fix: pageview tracking

* feat: add onboarding telemetry

* create single `onboardingStatus` type

* improved var naming

* remove console logs

* fix windows performance issue

* rename vscodeExtension.ts

* migration of onboarding variables

* "stash" instead of "delete" in indexing progress

* fix preview.yaml

* also fix main.yaml

* Update troubleshooting.md (#1637)
‚Ä¶
----------------------------------------

Commit: 6f4be27c2c9f9dcb2b8e68b8bdfa65d82bfcd43b
Author: Nate Sesti
Date: 2024-08-05 22:55:29+00:00
Message: Preview (#1930)

* update package.json version

* ü™Ñ model dropdown, control plane (#1692)

* Nate/control plane client (#1691)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* fix(gui): ctx rendering w/ renderInlineAs: "" (#1541)

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* fix codeqwen autocomplete leading space

* add voyage rerank-1

* feat: `--noEmit` for tsc checks in CI (#1559)

* docs: update CustomContextProvider docs (#1557)

* add stop tokens to qwen prompt

* update docs to reflect 3.5 sonnet being best

* docs: comment out unused providers (#1561)

* import Handlebars

* feat: toast notification for config updates (#1560)

* feat: toast notification for config updates

* feat: only trigger toast on config.json save

* displayRawMarkdown option

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* update to reflect 16 stop words limit for deepseek

* feat: only trigger config update toast in vscode (#1571)

* docs(prompt-files): fix typos + clarify (#1575)

* doc: prompt file typo + clarifications

* fix: add back correct docs

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* docs(telemetry): add pageviews to tracking list (#1581)

* Add reranker configuration options to codebase embedding docs (#1584)

- Introduce reranker concept
- List available reranker options
- Provide configuration instructions
- Update keywords to include "reranker"

* chore: update pr template with screenshots (#1590)

* Refactor ConfirmationDialog to use SecondaryButton for cancel action (#1586)

* Added instructions for running docs server locally (#1578)

- Added NPM script method
- Added VS Code task method
- Update contributing guidelines

* Update branch policy (#1577)

- Change PR target to `dev` branch
- Update `CONTRIBUTING.md` instructions

* Consolidate example configurations into the main configuration guide (#1579)

- Moved examples to configuration.md
- Deleted the separate examples.md file
- Updated sidebar order and links
- Improved readability and structure in configuration.md

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* Update completionProvider.ts (warning tab-autocomplete models) (#1566)

* feat: enhanced IndexingProgressBar with blinking dot feature

- Integrated BlinkingDot component
- Added STATUS_COLORS for various states
- Replaced CircleDiv with BlinkingDot in UI
- Updated status messages and layout

* small UI tweaks

* feat(gui): enhance ModelCard, ModelProviderTag, and Toggle components (#1595)

- add styling and adjustments to ModelCard
- update ModelProviderTag font size
- remove box shadow from Toggle component
- tweak icon styles in ModelCard
- improve alignment and spacing

* media query

* feat: add best experience onboarding

* fix: file rename

* stop movement on button hover by keeping same border thickness

* fix mistake in setting cursor: pointer

* fix when free trial option is shown

* Support Node.js versions below 20 for streaming response handling (#1591)

- Add fallback for Node < 20
- Implement toAsyncIterable for streaming
- Use TextDecoder for manual decoding
- Maintain existing streaming for Node 20+

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* fix hasPassedFTL

* fix /edit cancellation from UI

* feat: add `applyCodeBlock` experimental prop (#1601)

* feat: add new model styling improvements (#1609)

* feat: add new model styling improvements

* better gap size

* feat: update bug_report.yml (#1610)

* chore: update bug_report.yml

* typo fix

* feat: add labels to "Add docs" dialog (#1612)

* feat: add labels to "Add docs" dialog

* remove autofocus

* don't double load config

* small fixes

* speed up directory traversal, and use correct native path module

* option not to show config update toast

* merge air-gapped and recommended setup pages

* chore: add telemetry for full screen toggle (#1618)

* Fix headings in codebase-embeddings.md (#1617)

* mention jetbrains

* docs: update changie  (#1619)

* feat: updated changie config

* hide toc and autogenerate

* Update changelog.mdx

* link to deeper explanation of embeddings models

* ensure target="_blank" for all links in sidebar

* fix gif links in intellij README.md

* don't require rust in dependency installation

* chore: fix padding on gh button (#1620)

* chore: adjust button padding

* Update tasks.json

* escape colons in diff path

* smoother lancedb indexing reporting

* smooth progress updates for indexing

* fix tsc err

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* üöë fix constant warnings when onboarding with Ollama

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* team analytics

* apply control plane settings

* workos auth

* ide protocol get session info

* UI for auth

* profile switching

* small fixes

* updates

* refresh tokens

* updates

* fix tsc errs

* model select in toolbar to make room for profile selector

* prod client id

* link to prod URL

* internal beta option

* profiles change listener

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* temporary patch for type errs

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* skip extension tests

* update package.json version

* handlebars import

* cmd+I improvements (#1728)

* Nate/control plane client (#1691)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* fix(gui): ctx rendering w/ renderInlineAs: "" (#1541)

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* fix codeqwen autocomplete leading space

* add voyage rerank-1

* feat: `--noEmit` for tsc checks in CI (#1559)

* docs: update CustomContextProvider docs (#1557)

* add stop tokens to qwen prompt

* update docs to reflect 3.5 sonnet being best

* docs: comment out unused providers (#1561)

* import Handlebars

* feat: toast notification for config updates (#1560)

* feat: toast notification for config updates

* feat: only trigger toast on config.json save

* displayRawMarkdown option

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* update to reflect 16 stop words limit for deepseek

* feat: only trigger config update toast in vscode (#1571)

* docs(prompt-files): fix typos + clarify (#1575)

* doc: prompt file typo + clarifications

* fix: add back correct docs

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* docs(telemetry): add pageviews to tracking list (#1581)

* Add reranker configuration options to codebase embedding docs (#1584)

- Introduce reranker concept
- List available reranker options
- Provide configuration instructions
- Update keywords to include "reranker"

* chore: update pr template with screenshots (#1590)

* Refactor ConfirmationDialog to use SecondaryButton for cancel action (#1586)

* Added instructions for running docs server locally (#1578)

- Added NPM script method
- Added VS Code task method
- Update contributing guidelines

* Update branch policy (#1577)

- Change PR target to `dev` branch
- Update `CONTRIBUTING.md` instructions

* Consolidate example configurations into the main configuration guide (#1579)

- Moved examples to configuration.md
- Deleted the separate examples.md file
- Updated sidebar order and links
- Improved readability and structure in configuration.md

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* Update completionProvider.ts (warning tab-autocomplete models) (#1566)

* feat: enhanced IndexingProgressBar with blinking dot feature

- Integrated BlinkingDot component
- Added STATUS_COLORS for various states
- Replaced CircleDiv with BlinkingDot in UI
- Updated status messages and layout

* small UI tweaks

* feat(gui): enhance ModelCard, ModelProviderTag, and Toggle components (#1595)

- add styling and adjustments to ModelCard
- update ModelProviderTag font size
- remove box shadow from Toggle component
- tweak icon styles in ModelCard
- improve alignment and spacing

* media query

* feat: add best experience onboarding

* fix: file rename

* stop movement on button hover by keeping same border thickness

* fix mistake in setting cursor: pointer

* fix when free trial option is shown

* Support Node.js versions below 20 for streaming response handling (#1591)

- Add fallback for Node < 20
- Implement toAsyncIterable for streaming
- Use TextDecoder for manual decoding
- Maintain existing streaming for Node 20+

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* fix hasPassedFTL

* fix /edit cancellation from UI

* feat: add `applyCodeBlock` experimental prop (#1601)

* feat: add new model styling improvements (#1609)

* feat: add new model styling improvements

* better gap size

* feat: update bug_report.yml (#1610)

* chore: update bug_report.yml

* typo fix

* feat: add labels to "Add docs" dialog (#1612)

* feat: add labels to "Add docs" dialog

* remove autofocus

* don't double load config

* small fixes

* speed up directory traversal, and use correct native path module

* option not to show config update toast

* merge air-gapped and recommended setup pages

* chore: add telemetry for full screen toggle (#1618)

* Fix headings in codebase-embeddings.md (#1617)

* mention jetbrains

* docs: update changie  (#1619)

* feat: updated changie config

* hide toc and autogenerate

* Update changelog.mdx

* link to deeper explanation of embeddings models

* ensure target="_blank" for all links in sidebar

* fix gif links in intellij README.md

* don't require rust in dependency installation

* chore: fix padding on gh button (#1620)

* chore: adjust button padding

* Update tasks.json

* escape colons in diff path

* smoother lancedb indexing reporting

* smooth progress updates for indexing

* fix tsc err

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* üöë fix constant warnings when onboarding with Ollama

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* team analytics

* apply control plane settings

* workos auth

* ide protocol get session info

* UI for auth

* profile switching

* small fixes

* updates

* refresh tokens

* updates

* fix tsc errs

* model select in toolbar to make room for profile selector

* prod client id

* link to prod URL

* internal beta option

* profiles change listener

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* temporary patch for type errs

* Dev (#1689)

* Fix an issue where CMD+K does not clear the terminal when the terminal has focus (#1671)

On MacOS, ‚åò+K is bound, by default, to Terminal:Clear. Without this
change ‚åò+K does not clear the terminal but instead iniates a chord
sequence and waits for the next stroke of the chord.

Co-authored-by: Rob Leidle <rleidle@tesla.com>

* Change treeSitter to cache the Language objects it loads from wasm (#1672)

Without this change, for a repository with 600 typescript files, the
indexer would fail to finish correctly and there would be many of the
following errors in the webview console log:

'Unable to load language for file ${path} RuntimeError: table index is out of bounds'

The following bash will create a repo that reproduces the problem:

current_path="."

for ((i=1; i<=20; i++)); do
    new_folder="folder-$i"
    mkdir -p "$current_path/$new_folder"
    current_path="$current_path/$new_folder"

    for ((a=1; a<=30; a++)); do
      head -c 10000 /dev/urandom | base64 > "$current_path/file-$a.ts"
    done
done

Co-authored-by: Rob Leidle <rleidle@tesla.com>

* acknowledge sourcemap flag in esbuild.js

* don't run jetbrains-release.yaml on vscode releases

* further testing for walkDir

* chore: add telemetry to commands (#1673)

* test: Add basic unit test to baseLLM (#1668)

* update version

* test: Add basic unit test to baseLLM

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: inimaz <imaz@ai-verse.com>

* feat: add Quick Actions CodeLens feature (#1674)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* add voyage rerank-1

* import Handlebars

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* small UI tweaks

* media query

* feat: add best experience onboarding

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* chore: add telemetry for full screen toggle (#1618)

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* manually implement stop tokens for hf inference api

* chore: onboarding metrics (#1626)

* fix: pageview tracking

* feat: add onboarding telemetry

* create single `onboardingStatus` type

* improved var naming

* remove console logs

* fix windows performance issue

* rename vscodeExtension.ts

* migration of onboarding variables

* "stash" instead of "delete" in indexing progress

* fix preview.yaml

* also fix main.yaml

* Update troubleshooting.md (#1637)

* feat: add quick actions

* Update index.d.ts

* quick actions mvp

* update docs

* subscribe to vscode change settings

* Update commands.ts

* cleanup

* Update quick-actions.md

* Update VerticalPerLineCodeLensProvider.ts

* resolve feedback

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: Nate Sesti <33237525+sestinj@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>

* chore: add `isCommandEvent` to command telemetry (#1675)

* chore: add `isCommandEvent` to command telemetry

* Update commands.ts

* Nate/better retrieval (#1677)

* deduplicatearray tests

* break out separate retrieval pipelines

* IConfigHandler

* tests for codebase indexer

* better .continueignore for continue

* indexing fixes

* ignore .gitignore and .continueignore when indexing

* retrieval pipeline improvements

* fix formatting err in out .continueignore

* add necessary filter to lance_db_cache

* update package.json version

* skip unused tests

* don't ignore .prompt files

* update version

* Update pull_request_template.md

* don't use multi-media format when there are multiple text items

* add free trial experience (#1685)

* fix: add code range for quick actions/fixes (#1687)

* fix: add code range for quick actions/fixes

* Update test.js

* add pathSep message type

* docs improvements

* jetbrains fix

* update package.json version

---------

Co-authored-by: Rob Leidle <rleidle@gmail.com>
Co-authored-by: Rob Leidle <rleidle@tesla.com>
Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: inimaz <49730431+inimaz@users.noreply.github.com>
Co-authored-by: inimaz <imaz@ai-verse.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>

* update package.json version

* skip extension tests

* update package.json version

* handlebars import

* don't push package.json version change from CI

* fix: scroll issues w/ code blocks (#1688)

* fix: scroll issues w/ code blocks

* chore: name offset

* chore: remove docs start

* chore: update headings on troubleshooting.md (#1696)

* ignore .svn folder for indexing (#1699)

* chore: clearer naming for `useSuffix` (#1702)

* chore: clearer naming for `useSuffix`

* schema updates

* fix: cmd+shft+l closes sidebar if focused (#1638)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* add voyage rerank-1

* import Handlebars

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* small UI tweaks

* media query

* feat: add best experience onboarding

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* chore: add telemetry for full screen toggle (#1618)

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* manually implement stop tokens for hf inference api

* chore: onboarding metrics (#1626)

* fix: pageview tracking

* feat: add onboarding telemetry

* create single `onboardingStatus` type

* improved var naming

* remove console logs

* fix windows performance issue

* rename vscodeExtension.ts

* migration of onboarding variables

* "stash" instead of "delete" in indexing progress

* fix preview.yaml

* also fix main.yaml

* Update troubleshooting.md (#1637)

* feat: close panel if main input is focused

* add skip param

* Update TipTapEditor.tsx

* merge dev

* Update commands.ts

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: Nate Sesti <33237525+sestinj@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>

* bugfix: quick actions undefined array (#1704)

* feat: add rich quick pick for quick edit (#1706)

* feat: multistep quick pick

* fix: multi step for context provider

* Update test.js

* Create deepseek.md (#1708)

* style: add max height to model selector (#1712)

* update styling

* remove testing code

* remove comments

* feat: add tutorial card (#1716)

* feat: create tutorial card

* Update TutorialCard.tsx

* feat: add file search to quick edit (#1714)

* feat: multistep quick pick

* fix: multi step for context provider

* Update test.js

* add file search

* complete file search

* remove unused import

* add comments

* Update utils.ts

* update naming

* chore: move quick pick instantiation (#1723)

* Break out into NPM modules (#1726)

* config.json types

* export all schemas

* break out request logic into packages

* update openai adapters to export body types

* update packaging of npm modules

* update packages

* continue proxy

* mistral

* Fix typo in documentation (#1722)

In  set-up-codestral.md
"Trobleshooting" -> "Troubleshooting"

* update package.json version

* ü™Ñ model dropdown, control plane (#1692)

* Nate/control plane client (#1691)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* fix(gui): ctx rendering w/ renderInlineAs: "" (#1541)

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* fix codeqwen autocomplete leading space

* add voyage rerank-1

* feat: `--noEmit` for tsc checks in CI (#1559)

* docs: update CustomContextProvider docs (#1557)

* add stop tokens to qwen prompt

* update docs to reflect 3.5 sonnet being best

* docs: comment out unused providers (#1561)

* import Handlebars

* feat: toast notification for config updates (#1560)

* feat: toast notification for config updates

* feat: only trigger toast on config.json save

* displayRawMarkdown option

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* update to reflect 16 stop words limit for deepseek

* feat: only trigger config update toast in vscode (#1571)

* docs(prompt-files): fix typos + clarify (#1575)

* doc: prompt file typo + clarifications

* fix: add back correct docs

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* docs(telemetry): add pageviews to tracking list (#1581)

* Add reranker configuration options to codebase embedding docs (#1584)

- Introduce reranker concept
- List available reranker options
- Provide configuration instructions
- Update keywords to include "reranker"

* chore: update pr template with screenshots (#1590)

* Refactor ConfirmationDialog to use SecondaryButton for cancel action (#1586)

* Added instructions for running docs server locally (#1578)

- Added NPM script method
- Added VS Code task method
- Update contributing guidelines

* Update branch policy (#1577)

- Change PR target to `dev` branch
- Update `CONTRIBUTING.md` instructions

* Consolidate example configurations into the main configuration guide (#1579)

- Moved examples to configuration.md
- Deleted the separate examples.md file
- Updated sidebar order and links
- Improved readability and structure in configuration.md

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* Update completionProvider.ts (warning tab-autocomplete models) (#1566)

* feat: enhanced IndexingProgressBar with blinking dot feature

- Integrated BlinkingDot component
- Added STATUS_COLORS for various states
- Replaced CircleDiv with BlinkingDot in UI
- Updated status messages and layout

* small UI tweaks

* feat(gui): enhance ModelCard, ModelProviderTag, and Toggle components (#1595)

- add styling and adjustments to ModelCard
- update ModelProviderTag font size
- remove box shadow from Toggle component
- tweak icon styles in ModelCard
- improve alignment and spacing

* media query

* feat: add best experience onboarding

* fix: file rename

* stop movement on button hover by keeping same border thickness

* fix mistake in setting cursor: pointer

* fix when free trial option is shown

* Support Node.js versions below 20 for streaming response handling (#1591)

- Add fallback for Node < 20
- Implement toAsyncIterable for streaming
- Use TextDecoder for manual decoding
- Maintain existing streaming for Node 20+

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* fix hasPassedFTL

* fix /edit cancellation from UI

* feat: add `applyCodeBlock` experimental prop (#1601)

* feat: add new model styling improvements (#1609)

* feat: add new model styling improvements

* better gap size

* feat: update bug_report.yml (#1610)

* chore: update bug_report.yml

* typo fix

* feat: add labels to "Add docs" dialog (#1612)

* feat: add labels to "Add docs" dialog

* remove autofocus

* don't double load config

* small fixes

* speed up directory traversal, and use correct native path module

* option not to show config update toast

* merge air-gapped and recommended setup pages

* chore: add telemetry for full screen toggle (#1618)

* Fix headings in codebase-embeddings.md (#1617)

* mention jetbrains

* docs: update changie  (#1619)

* feat: updated changie config

* hide toc and autogenerate

* Update changelog.mdx

* link to deeper explanation of embeddings models

* ensure target="_blank" for all links in sidebar

* fix gif links in intellij README.md

* don't require rust in dependency installation

* chore: fix padding on gh button (#1620)

* chore: adjust button padding

* Update tasks.json

* escape colons in diff path

* smoother lancedb indexing reporting

* smooth progress updates for indexing

* fix tsc err

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* üöë fix constant warnings when onboarding with Ollama

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* team analytics

* apply control plane settings

* workos auth

* ide protocol get session info

* UI for auth

* profile switching

* small fixes

* updates

* refresh tokens

* updates

* fix tsc errs

* model select in toolbar to make room for profile selector

* prod client id

* link to prod URL

* internal beta option

* profiles change listener

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* temporary patch for type errs

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* skip extension tests

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>
Co-authored-by: Rob Leidle <rleidle@gmail.com>
Co-authored-by: Rob Leidle <rleidle@tesla.com>
Co-authored-by: inimaz <49730431+inimaz@users.noreply.github.com>
Co-authored-by: inimaz <imaz@ai-verse.com>
Co-authored-by: Ana√´l Bonnafous <71386173+AnaelBonnafous@users.noreply.github.com>
Co-authored-by: Huy Tran <119860259+tranquochuy645@users.noreply.github.com>

* Dev (#1740)

* Nate/control plane client (#1691)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* fix(gui): ctx rendering w/ renderInlineAs: "" (#1541)

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* fix codeqwen autocomplete leading space

* add voyage rerank-1

* feat: `--noEmit` for tsc checks in CI (#1559)

* docs: update CustomContextProvider docs (#1557)

* add stop tokens to qwen prompt

* update docs to reflect 3.5 sonnet being best

* docs: comment out unused providers (#1561)

* import Handlebars

* feat: toast notification for config updates (#1560)

* feat: toast notification for config updates

* feat: only trigger toast on config.json save

* displayRawMarkdown option

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* update to reflect 16 stop words limit for deepseek

* feat: only trigger config update toast in vscode (#1571)

* docs(prompt-files): fix typos + clarify (#1575)

* doc: prompt file typo + clarifications

* fix: add back correct docs

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* docs(telemetry): add pageviews to tracking list (#1581)

* Add reranker configuration options to codebase embedding docs (#1584)

- Introduce reranker concept
- List available reranker options
- Provide configuration instructions
- Update keywords to include "reranker"

* chore: update pr template with screenshots (#1590)

* Refactor ConfirmationDialog to use SecondaryButton for cancel action (#1586)

* Added instructions for running docs server locally (#1578)

- Added NPM script method
- Added VS Code task method
- Update contributing guidelines

* Update branch policy (#1577)

- Change PR target to `dev` branch
- Update `CONTRIBUTING.md` instructions

* Consolidate example configurations into the main configuration guide (#1579)

- Moved examples to configuration.md
- Deleted the separate examples.md file
- Updated sidebar order and links
- Improved readability and structure in configuration.md

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* Update completionProvider.ts (warning tab-autocomplete models) (#1566)

* feat: enhanced IndexingProgressBar with blinking dot feature

- Integrated BlinkingDot component
- Added STATUS_COLORS for various states
- Replaced CircleDiv with BlinkingDot in UI
- Updated status messages and layout

* small UI tweaks

* feat(gui): enhance ModelCard, ModelProviderTag, and Toggle components (#1595)

- add styling and adjustments to ModelCard
- update ModelProviderTag font size
- remove box shadow from Toggle component
- tweak icon styles in ModelCard
- improve alignment and spacing

* media query

* feat: add best experience onboarding

* fix: file rename

* stop movement on button hover by keeping same border thickness

* fix mistake in setting cursor: pointer

* fix when free trial option is shown

* Support Node.js versions below 20 for streaming response handling (#1591)

- Add fallback for Node < 20
- Implement toAsyncIterable for streaming
- Use TextDecoder for manual decoding
- Maintain existing streaming for Node 20+

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* fix hasPassedFTL

* fix /edit cancellation from UI

* feat: add `applyCodeBlock` experimental prop (#1601)

* feat: add new model styling improvements (#1609)

* feat: add new model styling improvements

* better gap size

* feat: update bug_report.yml (#1610)

* chore: update bug_report.yml

* typo fix

* feat: add labels to "Add docs" dialog (#1612)

* feat: add labels to "Add docs" dialog

* remove autofocus

* don't double load config

* small fixes

* speed up directory traversal, and use correct native path module

* option not to show config update toast

* merge air-gapped and recommended setup pages

* chore: add telemetry for full screen toggle (#1618)

* Fix headings in codebase-embeddings.md (#1617)

* mention jetbrains

* docs: update changie  (#1619)

* feat: updated changie config

* hide toc and autogenerate

* Update changelog.mdx

* link to deeper explanation of embeddings models

* ensure target="_blank" for all links in sidebar

* fix gif links in intellij README.md

* don't require rust in dependency installation

* chore: fix padding on gh button (#1620)

* chore: adjust button padding

* Update tasks.json

* escape colons in diff path

* smoother lancedb indexing reporting

* smooth progress updates for indexing

* fix tsc err

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* üöë fix constant warnings when onboarding with Ollama

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* team analytics

* apply control plane settings

* workos auth

* ide protocol get session info

* UI for auth

* profile switching

* small fixes

* updates

* refresh tokens

* updates

* fix tsc errs

* model select in toolbar to make room for profile selector

* prod client id

* link to prod URL

* internal beta option

* profiles change listener

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* temporary patch for type errs

* Dev (#1689)

* Fix an issue where CMD+K does not clear the terminal when the terminal has focus (#1671)

On MacOS, ‚åò+K is bound, by default, to Terminal:Clear. Without this
change ‚åò+K does not clear the terminal but instead iniates a chord
sequence and waits for the next stroke of the chord.

Co-authored-by: Rob Leidle <rleidle@tesla.com>

* Change treeSitter to cache the Language objects it loads from wasm (#1672)

Without this change, for a repository with 600 typescript files, the
indexer would fail to finish correctly and there would be many of the
following errors in the webview console log:

'Unable to load language for file ${path} RuntimeError: table index is out of bounds'

The following bash will create a repo that reproduces the problem:

current_path="."

for ((i=1; i<=20; i++)); do
    new_folder="folder-$i"
    mkdir -p "$current_path/$new_folder"
    current_path="$current_path/$new_folder"

    for ((a=1; a<=30; a++)); do
      head -c 10000 /dev/urandom | base64 > "$current_path/file-$a.ts"
    done
done

Co-authored-by: Rob Leidle <rleidle@tesla.com>

* acknowledge sourcemap flag in esbuild.js

* don't run jetbrains-release.yaml on vscode releases

* further testing for walkDir

* chore: add telemetry to commands (#1673)

* test: Add basic unit test to baseLLM (#1668)

* update version

* test: Add basic unit test to baseLLM

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: inimaz <imaz@ai-verse.com>

* feat: add Quick Actions CodeLens feature (#1674)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* add voyage rerank-1

* import Handlebars

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* small UI tweaks

* media query

* feat: add best experience onboarding

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* chore: add telemetry for full screen toggle (#1618)

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* manually implement stop tokens for hf inference api

* chore: onboarding metrics (#1626)

* fix: pageview tracking

* feat: add onboarding telemetry

* create single `onboardingStatus` type

* improved var naming

* remove console logs

* fix windows performance issue

* rename vscodeExtension.ts

* migration of onboarding variables

* "stash" instead of "delete" in indexing progress

* fix preview.yaml

* also fix main.yaml

* Update troubleshooting.md (#1637)

* feat: add quick actions

* Update index.d.ts

* quick actions mvp

* update docs

* subscribe to vscode change settings

* Update commands.ts

* cleanup

* Update quick-actions.md

* Update VerticalPerLineCodeLensProvider.ts

* resolve feedback

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: Nate Sesti <33237525+sestinj@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>

* chore: add `isCommandEvent` to command telemetry (#1675)

* chore: add `isCommandEvent` to command telemetry

* Update commands.ts

* Nate/better retrieval (#1677)

* deduplicatearray tests

* break out separate retrieval pipelines

* IConfigHandler

* tests for codebase indexer

* better .continueignore for continue

* indexing fixes

* ignore .gitignore and .continueignore when indexing

* retrieval pipeline improvements

* fix formatting err in out .continueignore

* add necessary filter to lance_db_cache

* update package.json version

* skip unused tests

* don't ignore .prompt files

* update version

* Update pull_request_template.md

* don't use multi-media format when there are multiple text items

* add free trial experience (#1685)

* fix: add code range for quick actions/fixes (#1687)

* fix: add code range for quick actions/fixes

* Update test.js

* add pathSep message type

* docs improvements

* jetbrains fix

* update package.json version

---------

Co-authored-by: Rob Leidle <rleidle@gmail.com>
Co-authored-by: Rob Leidle <rleidle@tesla.com>
Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: inimaz <49730431+inimaz@users.noreply.github.com>
Co-authored-by: inimaz <imaz@ai-verse.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>

* update package.json version

* skip extension tests

* update package.json version

* handlebars import

* don't push package.json version change from CI

* fix: scroll issues w/ code blocks (#1688)

* fix: scroll issues w/ code blocks

* chore: name offset

* chore: remove docs start

* chore: update headings on troubleshooting.md (#1696)

* ignore .svn folder for indexing (#1699)

* chore: clearer naming for `useSuffix` (#1702)

* chore: clearer naming for `useSuffix`

* schema updates

* fix: cmd+shft+l closes sidebar if focused (#1638)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* add voyage rerank-1

* import Handlebars

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* small UI tweaks

* media query

* feat: add best experience onboarding

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* chore: add telemetry for full screen toggle (#1618)

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* manually implement stop tokens for hf inference api

* chore: onboarding metrics (#1626)

* fix: pageview tracking

* feat: add onboarding telemetry

* create single `onboardingStatus` type

* improved var naming

* remove console logs

* fix windows performance issue

* rename vscodeExtension.ts

* migration of onboarding variables

* "stash" instead of "delete" in indexing progress

* fix preview.yaml

* also fix main.yaml

* Update troubleshooting.md (#1637)

* feat: close panel if main input is focused

* add skip param

* Update TipTapEditor.tsx

* merge dev

* Update commands.ts

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: Nate Sesti <33237525+sestinj@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>

* bugfix: quick actions undefined array (#1704)

* feat: add rich quick pick for quick edit (#1706)

* feat: multistep quick pick

* fix: multi step for context provider

* Update test.js

* Create deepseek.md (#1708)

* style: add max height to model selector (#1712)

* update styling

* remove testing code

* remove comments

* feat: add tutorial card (#1716)

* feat: create tutorial card

* Update TutorialCard.tsx

* feat: add file search to quick edit (#1714)

* feat: multistep quick pick

* fix: multi step for context provider

* Update test.js

* add file search

* complete file search

* remove unused import

* add comments

* Update utils.ts

* update naming

* chore: move quick pick instantiation (#1723)

* Break out into NPM modules (#1726)

* config.json types

* export all schemas

* break out request logic into packages

* update openai adapters to export body types

* update packaging of npm modules

* update packages

* continue proxy

* mistral

* Fix typo in documentation (#1722)

In  set-up-codestral.md
"Trobleshooting" -> "Troubleshooting"

* update package.json version

* ü™Ñ model dropdown, control plane (#1692)

* Nate/control plane client (#1691)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* fix(gui): ctx rendering w/ renderInlineAs: "" (#1541)

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* fix codeqwen autocomplete leading space

* add voyage rerank-1

* feat: `--noEmit` for tsc checks in CI (#1559)

* docs: update CustomContextProvider docs (#1557)

* add stop tokens to qwen prompt

* update docs to reflect 3.5 sonnet being best

* docs: comment out unused providers (#1561)

* import Handlebars

* feat: toast notification for config updates (#1560)

* feat: toast notification for config updates

* feat: only trigger toast on config.json save

* displayRawMarkdown option

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* update to reflect 16 stop words limit for deepseek

* feat: only trigger config update toast in vscode (#1571)

* docs(prompt-files): fix typos + clarify (#1575)

* doc: prompt file typo + clarifications

* fix: add back correct docs

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* docs(telemetry): add pageviews to tracking list (#1581)

* Add reranker configuration options to codebase embedding docs (#1584)

- Introduce reranker concept
- List available reranker options
- Provide configuration instructions
- Update keywords to include "reranker"

* chore: update pr template with screenshots (#1590)

* Refactor ConfirmationDialog to use SecondaryButton for cancel action (#1586)

* Added instructions for running docs server locally (#1578)

- Added NPM script method
- Added VS Code task method
- Update contributing guidelines

* Update branch policy (#1577)

- Change PR target to `dev` branch
- Update `CONTRIBUTING.md` instructions

* Consolidate example configurations into the main configuration guide (#1579)

- Moved examples to configuration.md
- Deleted the separate examples.md file
- Updated sidebar order and links
- Improved readability and structure in configuration.md

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* Update completionProvider.ts (warning tab-autocomplete models) (#1566)

* feat: enhanced IndexingProgressBar with blinking dot feature

- Integrated BlinkingDot component
- Added STATUS_COLORS for various states
- Replaced CircleDiv with BlinkingDot in UI
- Updated status messages and layout

* small UI tweaks

* feat(gui): enhance ModelCard, ModelProviderTag, and Toggle components (#1595)

- add styling and adjustments to ModelCard
- update ModelProviderTag font size
- remove box shadow from Toggle component
- tweak icon styles in ModelCard
- improve alignment and spacing

* media query

* feat: add best experience onboarding

* fix: file rename

* stop movement on button hover by keeping same border thickness

* fix mistake in setting cursor: pointer

* fix when free trial option is shown

* Support Node.js versions below 20 for streaming response handling (#1591)

- Add fallback for Node < 20
- Implement toAsyncIterable for streaming
- Use TextDecoder for manual decoding
- Maintain existing streaming for Node 20+

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* fix hasPassedFTL

* fix /edit cancellation from UI

* feat: add `applyCodeBlock` experimental prop (#1601)

* feat: add new model styling improvements (#1609)

* feat: add new model styling improvements

* better gap size

* feat: update bug_report.yml (#1610)

* chore: update bug_report.yml

* typo fix

* feat: add labels to "Add docs" dialog (#1612)

* feat: add labels to "Add docs" dialog

* remove autofocus

* don't double load config

* small fixes

* speed up directory traversal, and use correct native path module

* option not to show config update toast

* merge air-gapped and recommended setup pages

* chore: add telemetry for full screen toggle (#1618)

* Fix headings in codebase-embeddings.md (#1617)

* mention jetbrains

* docs: update changie  (#1619)

* feat: updated changie config

* hide toc and autogenerate

* Update changelog.mdx

* link to deeper explanation of embeddings models

* ensure target="_blank" for all links in sidebar

* fix gif links in intellij README.md

* don't require rust in dependency installation

* chore: fix padding on gh button (#1620)

* chore: adjust button padding

* Update tasks.json

* escape colons in diff path

* smoother lancedb indexing reporting

* smooth progress updates for indexing

* fix tsc err

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* üöë fix constant warnings when onboarding with Ollama

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* team analytics

* apply control plane settings

* workos auth

* ide protocol get session info

* UI for auth

* profile switching

* small fixes

* updates

* refresh tokens

* updates

* fix tsc errs

* model select in toolbar to make room for profile selector

* prod client id

* link to prod URL

* internal beta option

* profiles change listener

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* temporary patch for type errs

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* skip extension tests

* JetBrains status bar spinner for autocomplete

* Remove unused images

* partial accept jetbrains

* fix double-rendering of jetbrains completions

* fix offset of multi-line jetbrains completions

* enable/disable actions

* upgrade to version 0.0.54

* fix: wrap editor buttons when out of space (#1727)

* Add .continuerc file to config directory on activation to prevent it's indexing. (#1733)

* Updated the content links that were deprecated in the document (#1709)

Co-authored-by: Ihe Fan <ih.fan.1027@gmail.com>

* Nate/dev (#1739)

* JetBrains status bar spinner for autocomplete

* Remove unused images

* partial accept jetbrains

* fix double-rendering of jetbrains completions

* fix offset of multi-line jetbrains completions

* enable/disable actions

* upgrade to version 0.0.54

* llm-info package

* small profile switching improvements

* instruct cmd+I not to leave placeholders

* @ files in context-providers docs

* onboarding fix

* update jetbrains ci to build gui

* feat: single default quick pick to edit (#1743)

* feat: single default quick pick to edit

* Update quick-actions.md

* Update quick-actions.md

* use defaultQuickAction

* quick fixes

* fix: handle line removal diff (#1744)

* fix: handle line removal diff

* remove comments

* Configurable `maxChunkSize` for embedding providers (#1746)

* Add `maxChunkSize` to `EmbeddingsProvider`

* Add `maxChunkSize` to schema

* add support for docs via config (#1594)

* mistral mamba (#1748)

* üêç mistral mamba

* autoscale retrieval based on context length

* autoscale retrieval based on context length

* fix input box movement

* update jetbrains build

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>
Co-authored-by: Rob Leidle <rleidle@gmail.com>
Co-authored-by: Rob Leidle <rleidle@tesla.com>
Co-authored-by: inimaz <49730431+inimaz@users.noreply.github.com>
Co-authored-by: inimaz <imaz@ai-verse.com>
Co-authored-by: Ana√´l Bonnafous <71386173+AnaelBonnafous@users.noreply.github.com>
Co-authored-by: Huy Tran <119860259+tranquochuy645@users.noreply.github.com>
Co-authored-by: Gabriel Gordbegli <ggordbegli@gmail.com>
Co-authored-by: Raven-1027 <83693755+Raven-1027@users.noreply.github.com>
Co-authored-by: Ihe Fan <ih.fan.1027@gmail.com>
Co-authored-by: Lukas Kreussel <65088241+LLukas22@users.noreply.github.com>

* update jetbrains build

* jetbrains build update

* Dev (#1780)

* Nate/control plane client (#1691)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* fix(gui): ctx rendering w/ renderInlineAs: "" (#1541)

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* fix codeqwen autocomplete leading space

* add voyage rerank-1

* feat: `--noEmit` for tsc checks in CI (#1559)

* docs: update CustomContextProvider docs (#1557)

* add stop tokens to qwen prompt

* update docs to reflect 3.5 sonnet being best

* docs: comment out unused providers (#1561)

* import Handlebars

* feat: toast notification for config updates (#1560)

* feat: toast notification for config updates

* feat: only trigger toast on config.json save

* displayRawMarkdown option

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* update to reflect 16 stop words limit for deepseek

* feat: only trigger config update toast in vscode (#1571)

* docs(prompt-files): fix typos + clarify (#1575)

* doc: prompt file typo + clarifications

* fix: add back correct docs

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* docs(telemetry): add pageviews to tracking list (#1581)

* Add reranker configuration options to codebase embedding docs (#1584)

- Introduce reranker concept
- List available reranker options
- Provide configuration instructions
- Update keywords to include "reranker"

* chore: update pr template with screenshots (#1590)

* Refactor ConfirmationDialog to use SecondaryButton for cancel action (#1586)

* Added instructions for running docs server locally (#1578)

- Added NPM script method
- Added VS Code task method
- Update contributing guidelines

* Update branch policy (#1577)

- Change PR target to `dev` branch
- Update `CONTRIBUTING.md` instructions

* Consolidate example configurations into the main configuration guide (#1579)

- Moved examples to configuration.md
- Deleted the separate examples.md file
- Updated sidebar order and links
- Improved readability and structure in configuration.md

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* Update completionProvider.ts (warning tab-autocomplete models) (#1566)

* feat: enhanced IndexingProgressBar with blinking dot feature

- Integrated BlinkingDot component
- Added STATUS_COLORS for various states
- Replaced CircleDiv with BlinkingDot in UI
- Updated status messages and layout

* small UI tweaks

* feat(gui): enhance ModelCard, ModelProviderTag, and Toggle components (#1595)

- add styling and adjustments to ModelCard
- update ModelProviderTag font size
- remove box shadow from Toggle component
- tweak icon styles in ModelCard
- improve alignment and spacing

* media query

* feat: add best experience onboarding

* fix: file rename

* stop movement on button hover by keeping same border thickness

* fix mistake in setting cursor: pointer

* fix when free trial option is shown

* Support Node.js versions below 20 for streaming response handling (#1591)

- Add fallback for Node < 20
- Implement toAsyncIterable for streaming
- Use TextDecoder for manual decoding
- Maintain existing streaming for Node 20+

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* fix hasPassedFTL

* fix /edit cancellation from UI

* feat: add `applyCodeBlock` experimental prop (#1601)

* feat: add new model styling improvements (#1609)

* feat: add new model styling improvements

* better gap size

* feat: update bug_report.yml (#1610)

* chore: update bug_report.yml

* typo fix

* feat: add labels to "Add docs" dialog (#1612)

* feat: add labels to "Add docs" dialog

* remove autofocus

* don't double load config

* small fixes

* speed up directory traversal, and use correct native path module

* option not to show config update toast

* merge air-gapped and recommended setup pages

* chore: add telemetry for full screen toggle (#1618)

* Fix headings in codebase-embeddings.md (#1617)

* mention jetbrains

* docs: update changie  (#1619)

* feat: updated changie config

* hide toc and autogenerate

* Update changelog.mdx

* link to deeper explanation of embeddings models

* ensure target="_blank" for all links in sidebar

* fix gif links in intellij README.md

* don't require rust in dependency installation

* chore: fix padding on gh button (#1620)

* chore: adjust button padding

* Update tasks.json

* escape colons in diff path

* smoother lancedb indexing reporting

* smooth progress updates for indexing

* fix tsc err

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* üöë fix constant warnings when onboarding with Ollama

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* team analytics

* apply control plane settings

* workos auth

* ide protocol get session info

* UI for auth

* profile switching

* small fixes

* updates

* refresh tokens

* updates

* fix tsc errs

* model select in toolbar to make room for profile selector

* prod client id

* link to prod URL

* internal beta option

* profiles change listener

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* temporary patch for type errs

* Dev (#1689)

* Fix an issue where CMD+K does not clear the terminal when the terminal has focus (#1671)

On MacOS, ‚åò+K is bound, by default, to Terminal:Clear. Without this
change ‚åò+K does not clear the terminal but instead iniates a chord
sequence and waits for the next stroke of the chord.

Co-authored-by: Rob Leidle <rleidle@tesla.com>

* Change treeSitter to cache the Language objects it loads from wasm (#1672)

Without this change, for a repository with 600 typescript files, the
indexer would fail to finish correctly and there would be many of the
following errors in the webview console log:

'Unable to load language for file ${path} RuntimeError: table index is out of bounds'

The following bash will create a repo that reproduces the problem:

current_path="."

for ((i=1; i<=20; i++)); do
    new_folder="folder-$i"
    mkdir -p "$current_path/$new_folder"
    current_path="$current_path/$new_folder"

    for ((a=1; a<=30; a++)); do
      head -c 10000 /dev/urandom | base64 > "$current_path/file-$a.ts"
    done
done

Co-authored-by: Rob Leidle <rleidle@tesla.com>

* acknowledge sourcemap flag in esbuild.js

* don't run jetbrains-release.yaml on vscode releases

* further testing for walkDir

* chore: add telemetry to commands (#1673)

* test: Add basic unit test to baseLLM (#1668)

* update version

* test: Add basic unit test to baseLLM

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: inimaz <imaz@ai-verse.com>

* feat: add Quick Actions CodeLens feature (#1674)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* add voyage rerank-1

* import Handlebars

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* small UI tweaks

* media query

* feat: add best experience onboarding

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* chore: add telemetry for full screen toggle (#1618)

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* manually implement stop tokens for hf inference api

* chore: onboarding metrics (#1626)

* fix: pageview tracking

* feat: add onboarding telemetry

* create single `onboardingStatus` type

* improved var naming

* remove console logs

* fix windows performance issue

* rename vscodeExtension.ts

* migration of onboarding variables

* "stash" instead of "delete" in indexing progress

* fix preview.yaml

* also fix main.yaml

* Update troubleshooting.md (#1637)

* feat: add quick act‚Ä¶
----------------------------------------

Commit: bb403a1cb84f94996499cc52c1f7b55b04ab433b
Author: Nate Sesti
Date: 2024-08-05 23:12:39+00:00
Message: Preview (#1934)

* update package.json version

* ü™Ñ model dropdown, control plane (#1692)

* Nate/control plane client (#1691)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* fix(gui): ctx rendering w/ renderInlineAs: "" (#1541)

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* fix codeqwen autocomplete leading space

* add voyage rerank-1

* feat: `--noEmit` for tsc checks in CI (#1559)

* docs: update CustomContextProvider docs (#1557)

* add stop tokens to qwen prompt

* update docs to reflect 3.5 sonnet being best

* docs: comment out unused providers (#1561)

* import Handlebars

* feat: toast notification for config updates (#1560)

* feat: toast notification for config updates

* feat: only trigger toast on config.json save

* displayRawMarkdown option

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* update to reflect 16 stop words limit for deepseek

* feat: only trigger config update toast in vscode (#1571)

* docs(prompt-files): fix typos + clarify (#1575)

* doc: prompt file typo + clarifications

* fix: add back correct docs

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* docs(telemetry): add pageviews to tracking list (#1581)

* Add reranker configuration options to codebase embedding docs (#1584)

- Introduce reranker concept
- List available reranker options
- Provide configuration instructions
- Update keywords to include "reranker"

* chore: update pr template with screenshots (#1590)

* Refactor ConfirmationDialog to use SecondaryButton for cancel action (#1586)

* Added instructions for running docs server locally (#1578)

- Added NPM script method
- Added VS Code task method
- Update contributing guidelines

* Update branch policy (#1577)

- Change PR target to `dev` branch
- Update `CONTRIBUTING.md` instructions

* Consolidate example configurations into the main configuration guide (#1579)

- Moved examples to configuration.md
- Deleted the separate examples.md file
- Updated sidebar order and links
- Improved readability and structure in configuration.md

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* Update completionProvider.ts (warning tab-autocomplete models) (#1566)

* feat: enhanced IndexingProgressBar with blinking dot feature

- Integrated BlinkingDot component
- Added STATUS_COLORS for various states
- Replaced CircleDiv with BlinkingDot in UI
- Updated status messages and layout

* small UI tweaks

* feat(gui): enhance ModelCard, ModelProviderTag, and Toggle components (#1595)

- add styling and adjustments to ModelCard
- update ModelProviderTag font size
- remove box shadow from Toggle component
- tweak icon styles in ModelCard
- improve alignment and spacing

* media query

* feat: add best experience onboarding

* fix: file rename

* stop movement on button hover by keeping same border thickness

* fix mistake in setting cursor: pointer

* fix when free trial option is shown

* Support Node.js versions below 20 for streaming response handling (#1591)

- Add fallback for Node < 20
- Implement toAsyncIterable for streaming
- Use TextDecoder for manual decoding
- Maintain existing streaming for Node 20+

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* fix hasPassedFTL

* fix /edit cancellation from UI

* feat: add `applyCodeBlock` experimental prop (#1601)

* feat: add new model styling improvements (#1609)

* feat: add new model styling improvements

* better gap size

* feat: update bug_report.yml (#1610)

* chore: update bug_report.yml

* typo fix

* feat: add labels to "Add docs" dialog (#1612)

* feat: add labels to "Add docs" dialog

* remove autofocus

* don't double load config

* small fixes

* speed up directory traversal, and use correct native path module

* option not to show config update toast

* merge air-gapped and recommended setup pages

* chore: add telemetry for full screen toggle (#1618)

* Fix headings in codebase-embeddings.md (#1617)

* mention jetbrains

* docs: update changie  (#1619)

* feat: updated changie config

* hide toc and autogenerate

* Update changelog.mdx

* link to deeper explanation of embeddings models

* ensure target="_blank" for all links in sidebar

* fix gif links in intellij README.md

* don't require rust in dependency installation

* chore: fix padding on gh button (#1620)

* chore: adjust button padding

* Update tasks.json

* escape colons in diff path

* smoother lancedb indexing reporting

* smooth progress updates for indexing

* fix tsc err

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* üöë fix constant warnings when onboarding with Ollama

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* team analytics

* apply control plane settings

* workos auth

* ide protocol get session info

* UI for auth

* profile switching

* small fixes

* updates

* refresh tokens

* updates

* fix tsc errs

* model select in toolbar to make room for profile selector

* prod client id

* link to prod URL

* internal beta option

* profiles change listener

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* temporary patch for type errs

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* skip extension tests

* update package.json version

* handlebars import

* cmd+I improvements (#1728)

* Nate/control plane client (#1691)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* fix(gui): ctx rendering w/ renderInlineAs: "" (#1541)

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* fix codeqwen autocomplete leading space

* add voyage rerank-1

* feat: `--noEmit` for tsc checks in CI (#1559)

* docs: update CustomContextProvider docs (#1557)

* add stop tokens to qwen prompt

* update docs to reflect 3.5 sonnet being best

* docs: comment out unused providers (#1561)

* import Handlebars

* feat: toast notification for config updates (#1560)

* feat: toast notification for config updates

* feat: only trigger toast on config.json save

* displayRawMarkdown option

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* update to reflect 16 stop words limit for deepseek

* feat: only trigger config update toast in vscode (#1571)

* docs(prompt-files): fix typos + clarify (#1575)

* doc: prompt file typo + clarifications

* fix: add back correct docs

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* docs(telemetry): add pageviews to tracking list (#1581)

* Add reranker configuration options to codebase embedding docs (#1584)

- Introduce reranker concept
- List available reranker options
- Provide configuration instructions
- Update keywords to include "reranker"

* chore: update pr template with screenshots (#1590)

* Refactor ConfirmationDialog to use SecondaryButton for cancel action (#1586)

* Added instructions for running docs server locally (#1578)

- Added NPM script method
- Added VS Code task method
- Update contributing guidelines

* Update branch policy (#1577)

- Change PR target to `dev` branch
- Update `CONTRIBUTING.md` instructions

* Consolidate example configurations into the main configuration guide (#1579)

- Moved examples to configuration.md
- Deleted the separate examples.md file
- Updated sidebar order and links
- Improved readability and structure in configuration.md

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* Update completionProvider.ts (warning tab-autocomplete models) (#1566)

* feat: enhanced IndexingProgressBar with blinking dot feature

- Integrated BlinkingDot component
- Added STATUS_COLORS for various states
- Replaced CircleDiv with BlinkingDot in UI
- Updated status messages and layout

* small UI tweaks

* feat(gui): enhance ModelCard, ModelProviderTag, and Toggle components (#1595)

- add styling and adjustments to ModelCard
- update ModelProviderTag font size
- remove box shadow from Toggle component
- tweak icon styles in ModelCard
- improve alignment and spacing

* media query

* feat: add best experience onboarding

* fix: file rename

* stop movement on button hover by keeping same border thickness

* fix mistake in setting cursor: pointer

* fix when free trial option is shown

* Support Node.js versions below 20 for streaming response handling (#1591)

- Add fallback for Node < 20
- Implement toAsyncIterable for streaming
- Use TextDecoder for manual decoding
- Maintain existing streaming for Node 20+

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* fix hasPassedFTL

* fix /edit cancellation from UI

* feat: add `applyCodeBlock` experimental prop (#1601)

* feat: add new model styling improvements (#1609)

* feat: add new model styling improvements

* better gap size

* feat: update bug_report.yml (#1610)

* chore: update bug_report.yml

* typo fix

* feat: add labels to "Add docs" dialog (#1612)

* feat: add labels to "Add docs" dialog

* remove autofocus

* don't double load config

* small fixes

* speed up directory traversal, and use correct native path module

* option not to show config update toast

* merge air-gapped and recommended setup pages

* chore: add telemetry for full screen toggle (#1618)

* Fix headings in codebase-embeddings.md (#1617)

* mention jetbrains

* docs: update changie  (#1619)

* feat: updated changie config

* hide toc and autogenerate

* Update changelog.mdx

* link to deeper explanation of embeddings models

* ensure target="_blank" for all links in sidebar

* fix gif links in intellij README.md

* don't require rust in dependency installation

* chore: fix padding on gh button (#1620)

* chore: adjust button padding

* Update tasks.json

* escape colons in diff path

* smoother lancedb indexing reporting

* smooth progress updates for indexing

* fix tsc err

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* üöë fix constant warnings when onboarding with Ollama

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* team analytics

* apply control plane settings

* workos auth

* ide protocol get session info

* UI for auth

* profile switching

* small fixes

* updates

* refresh tokens

* updates

* fix tsc errs

* model select in toolbar to make room for profile selector

* prod client id

* link to prod URL

* internal beta option

* profiles change listener

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* temporary patch for type errs

* Dev (#1689)

* Fix an issue where CMD+K does not clear the terminal when the terminal has focus (#1671)

On MacOS, ‚åò+K is bound, by default, to Terminal:Clear. Without this
change ‚åò+K does not clear the terminal but instead iniates a chord
sequence and waits for the next stroke of the chord.

Co-authored-by: Rob Leidle <rleidle@tesla.com>

* Change treeSitter to cache the Language objects it loads from wasm (#1672)

Without this change, for a repository with 600 typescript files, the
indexer would fail to finish correctly and there would be many of the
following errors in the webview console log:

'Unable to load language for file ${path} RuntimeError: table index is out of bounds'

The following bash will create a repo that reproduces the problem:

current_path="."

for ((i=1; i<=20; i++)); do
    new_folder="folder-$i"
    mkdir -p "$current_path/$new_folder"
    current_path="$current_path/$new_folder"

    for ((a=1; a<=30; a++)); do
      head -c 10000 /dev/urandom | base64 > "$current_path/file-$a.ts"
    done
done

Co-authored-by: Rob Leidle <rleidle@tesla.com>

* acknowledge sourcemap flag in esbuild.js

* don't run jetbrains-release.yaml on vscode releases

* further testing for walkDir

* chore: add telemetry to commands (#1673)

* test: Add basic unit test to baseLLM (#1668)

* update version

* test: Add basic unit test to baseLLM

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: inimaz <imaz@ai-verse.com>

* feat: add Quick Actions CodeLens feature (#1674)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* add voyage rerank-1

* import Handlebars

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* small UI tweaks

* media query

* feat: add best experience onboarding

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* chore: add telemetry for full screen toggle (#1618)

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* manually implement stop tokens for hf inference api

* chore: onboarding metrics (#1626)

* fix: pageview tracking

* feat: add onboarding telemetry

* create single `onboardingStatus` type

* improved var naming

* remove console logs

* fix windows performance issue

* rename vscodeExtension.ts

* migration of onboarding variables

* "stash" instead of "delete" in indexing progress

* fix preview.yaml

* also fix main.yaml

* Update troubleshooting.md (#1637)

* feat: add quick actions

* Update index.d.ts

* quick actions mvp

* update docs

* subscribe to vscode change settings

* Update commands.ts

* cleanup

* Update quick-actions.md

* Update VerticalPerLineCodeLensProvider.ts

* resolve feedback

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: Nate Sesti <33237525+sestinj@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>

* chore: add `isCommandEvent` to command telemetry (#1675)

* chore: add `isCommandEvent` to command telemetry

* Update commands.ts

* Nate/better retrieval (#1677)

* deduplicatearray tests

* break out separate retrieval pipelines

* IConfigHandler

* tests for codebase indexer

* better .continueignore for continue

* indexing fixes

* ignore .gitignore and .continueignore when indexing

* retrieval pipeline improvements

* fix formatting err in out .continueignore

* add necessary filter to lance_db_cache

* update package.json version

* skip unused tests

* don't ignore .prompt files

* update version

* Update pull_request_template.md

* don't use multi-media format when there are multiple text items

* add free trial experience (#1685)

* fix: add code range for quick actions/fixes (#1687)

* fix: add code range for quick actions/fixes

* Update test.js

* add pathSep message type

* docs improvements

* jetbrains fix

* update package.json version

---------

Co-authored-by: Rob Leidle <rleidle@gmail.com>
Co-authored-by: Rob Leidle <rleidle@tesla.com>
Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: inimaz <49730431+inimaz@users.noreply.github.com>
Co-authored-by: inimaz <imaz@ai-verse.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>

* update package.json version

* skip extension tests

* update package.json version

* handlebars import

* don't push package.json version change from CI

* fix: scroll issues w/ code blocks (#1688)

* fix: scroll issues w/ code blocks

* chore: name offset

* chore: remove docs start

* chore: update headings on troubleshooting.md (#1696)

* ignore .svn folder for indexing (#1699)

* chore: clearer naming for `useSuffix` (#1702)

* chore: clearer naming for `useSuffix`

* schema updates

* fix: cmd+shft+l closes sidebar if focused (#1638)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* add voyage rerank-1

* import Handlebars

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* small UI tweaks

* media query

* feat: add best experience onboarding

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* chore: add telemetry for full screen toggle (#1618)

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* manually implement stop tokens for hf inference api

* chore: onboarding metrics (#1626)

* fix: pageview tracking

* feat: add onboarding telemetry

* create single `onboardingStatus` type

* improved var naming

* remove console logs

* fix windows performance issue

* rename vscodeExtension.ts

* migration of onboarding variables

* "stash" instead of "delete" in indexing progress

* fix preview.yaml

* also fix main.yaml

* Update troubleshooting.md (#1637)

* feat: close panel if main input is focused

* add skip param

* Update TipTapEditor.tsx

* merge dev

* Update commands.ts

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: Nate Sesti <33237525+sestinj@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>

* bugfix: quick actions undefined array (#1704)

* feat: add rich quick pick for quick edit (#1706)

* feat: multistep quick pick

* fix: multi step for context provider

* Update test.js

* Create deepseek.md (#1708)

* style: add max height to model selector (#1712)

* update styling

* remove testing code

* remove comments

* feat: add tutorial card (#1716)

* feat: create tutorial card

* Update TutorialCard.tsx

* feat: add file search to quick edit (#1714)

* feat: multistep quick pick

* fix: multi step for context provider

* Update test.js

* add file search

* complete file search

* remove unused import

* add comments

* Update utils.ts

* update naming

* chore: move quick pick instantiation (#1723)

* Break out into NPM modules (#1726)

* config.json types

* export all schemas

* break out request logic into packages

* update openai adapters to export body types

* update packaging of npm modules

* update packages

* continue proxy

* mistral

* Fix typo in documentation (#1722)

In  set-up-codestral.md
"Trobleshooting" -> "Troubleshooting"

* update package.json version

* ü™Ñ model dropdown, control plane (#1692)

* Nate/control plane client (#1691)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* fix(gui): ctx rendering w/ renderInlineAs: "" (#1541)

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* fix codeqwen autocomplete leading space

* add voyage rerank-1

* feat: `--noEmit` for tsc checks in CI (#1559)

* docs: update CustomContextProvider docs (#1557)

* add stop tokens to qwen prompt

* update docs to reflect 3.5 sonnet being best

* docs: comment out unused providers (#1561)

* import Handlebars

* feat: toast notification for config updates (#1560)

* feat: toast notification for config updates

* feat: only trigger toast on config.json save

* displayRawMarkdown option

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* update to reflect 16 stop words limit for deepseek

* feat: only trigger config update toast in vscode (#1571)

* docs(prompt-files): fix typos + clarify (#1575)

* doc: prompt file typo + clarifications

* fix: add back correct docs

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* docs(telemetry): add pageviews to tracking list (#1581)

* Add reranker configuration options to codebase embedding docs (#1584)

- Introduce reranker concept
- List available reranker options
- Provide configuration instructions
- Update keywords to include "reranker"

* chore: update pr template with screenshots (#1590)

* Refactor ConfirmationDialog to use SecondaryButton for cancel action (#1586)

* Added instructions for running docs server locally (#1578)

- Added NPM script method
- Added VS Code task method
- Update contributing guidelines

* Update branch policy (#1577)

- Change PR target to `dev` branch
- Update `CONTRIBUTING.md` instructions

* Consolidate example configurations into the main configuration guide (#1579)

- Moved examples to configuration.md
- Deleted the separate examples.md file
- Updated sidebar order and links
- Improved readability and structure in configuration.md

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* Update completionProvider.ts (warning tab-autocomplete models) (#1566)

* feat: enhanced IndexingProgressBar with blinking dot feature

- Integrated BlinkingDot component
- Added STATUS_COLORS for various states
- Replaced CircleDiv with BlinkingDot in UI
- Updated status messages and layout

* small UI tweaks

* feat(gui): enhance ModelCard, ModelProviderTag, and Toggle components (#1595)

- add styling and adjustments to ModelCard
- update ModelProviderTag font size
- remove box shadow from Toggle component
- tweak icon styles in ModelCard
- improve alignment and spacing

* media query

* feat: add best experience onboarding

* fix: file rename

* stop movement on button hover by keeping same border thickness

* fix mistake in setting cursor: pointer

* fix when free trial option is shown

* Support Node.js versions below 20 for streaming response handling (#1591)

- Add fallback for Node < 20
- Implement toAsyncIterable for streaming
- Use TextDecoder for manual decoding
- Maintain existing streaming for Node 20+

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* fix hasPassedFTL

* fix /edit cancellation from UI

* feat: add `applyCodeBlock` experimental prop (#1601)

* feat: add new model styling improvements (#1609)

* feat: add new model styling improvements

* better gap size

* feat: update bug_report.yml (#1610)

* chore: update bug_report.yml

* typo fix

* feat: add labels to "Add docs" dialog (#1612)

* feat: add labels to "Add docs" dialog

* remove autofocus

* don't double load config

* small fixes

* speed up directory traversal, and use correct native path module

* option not to show config update toast

* merge air-gapped and recommended setup pages

* chore: add telemetry for full screen toggle (#1618)

* Fix headings in codebase-embeddings.md (#1617)

* mention jetbrains

* docs: update changie  (#1619)

* feat: updated changie config

* hide toc and autogenerate

* Update changelog.mdx

* link to deeper explanation of embeddings models

* ensure target="_blank" for all links in sidebar

* fix gif links in intellij README.md

* don't require rust in dependency installation

* chore: fix padding on gh button (#1620)

* chore: adjust button padding

* Update tasks.json

* escape colons in diff path

* smoother lancedb indexing reporting

* smooth progress updates for indexing

* fix tsc err

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* üöë fix constant warnings when onboarding with Ollama

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* team analytics

* apply control plane settings

* workos auth

* ide protocol get session info

* UI for auth

* profile switching

* small fixes

* updates

* refresh tokens

* updates

* fix tsc errs

* model select in toolbar to make room for profile selector

* prod client id

* link to prod URL

* internal beta option

* profiles change listener

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* temporary patch for type errs

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* skip extension tests

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>
Co-authored-by: Rob Leidle <rleidle@gmail.com>
Co-authored-by: Rob Leidle <rleidle@tesla.com>
Co-authored-by: inimaz <49730431+inimaz@users.noreply.github.com>
Co-authored-by: inimaz <imaz@ai-verse.com>
Co-authored-by: Ana√´l Bonnafous <71386173+AnaelBonnafous@users.noreply.github.com>
Co-authored-by: Huy Tran <119860259+tranquochuy645@users.noreply.github.com>

* Dev (#1740)

* Nate/control plane client (#1691)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* fix(gui): ctx rendering w/ renderInlineAs: "" (#1541)

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* fix codeqwen autocomplete leading space

* add voyage rerank-1

* feat: `--noEmit` for tsc checks in CI (#1559)

* docs: update CustomContextProvider docs (#1557)

* add stop tokens to qwen prompt

* update docs to reflect 3.5 sonnet being best

* docs: comment out unused providers (#1561)

* import Handlebars

* feat: toast notification for config updates (#1560)

* feat: toast notification for config updates

* feat: only trigger toast on config.json save

* displayRawMarkdown option

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* update to reflect 16 stop words limit for deepseek

* feat: only trigger config update toast in vscode (#1571)

* docs(prompt-files): fix typos + clarify (#1575)

* doc: prompt file typo + clarifications

* fix: add back correct docs

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* docs(telemetry): add pageviews to tracking list (#1581)

* Add reranker configuration options to codebase embedding docs (#1584)

- Introduce reranker concept
- List available reranker options
- Provide configuration instructions
- Update keywords to include "reranker"

* chore: update pr template with screenshots (#1590)

* Refactor ConfirmationDialog to use SecondaryButton for cancel action (#1586)

* Added instructions for running docs server locally (#1578)

- Added NPM script method
- Added VS Code task method
- Update contributing guidelines

* Update branch policy (#1577)

- Change PR target to `dev` branch
- Update `CONTRIBUTING.md` instructions

* Consolidate example configurations into the main configuration guide (#1579)

- Moved examples to configuration.md
- Deleted the separate examples.md file
- Updated sidebar order and links
- Improved readability and structure in configuration.md

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* Update completionProvider.ts (warning tab-autocomplete models) (#1566)

* feat: enhanced IndexingProgressBar with blinking dot feature

- Integrated BlinkingDot component
- Added STATUS_COLORS for various states
- Replaced CircleDiv with BlinkingDot in UI
- Updated status messages and layout

* small UI tweaks

* feat(gui): enhance ModelCard, ModelProviderTag, and Toggle components (#1595)

- add styling and adjustments to ModelCard
- update ModelProviderTag font size
- remove box shadow from Toggle component
- tweak icon styles in ModelCard
- improve alignment and spacing

* media query

* feat: add best experience onboarding

* fix: file rename

* stop movement on button hover by keeping same border thickness

* fix mistake in setting cursor: pointer

* fix when free trial option is shown

* Support Node.js versions below 20 for streaming response handling (#1591)

- Add fallback for Node < 20
- Implement toAsyncIterable for streaming
- Use TextDecoder for manual decoding
- Maintain existing streaming for Node 20+

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* fix hasPassedFTL

* fix /edit cancellation from UI

* feat: add `applyCodeBlock` experimental prop (#1601)

* feat: add new model styling improvements (#1609)

* feat: add new model styling improvements

* better gap size

* feat: update bug_report.yml (#1610)

* chore: update bug_report.yml

* typo fix

* feat: add labels to "Add docs" dialog (#1612)

* feat: add labels to "Add docs" dialog

* remove autofocus

* don't double load config

* small fixes

* speed up directory traversal, and use correct native path module

* option not to show config update toast

* merge air-gapped and recommended setup pages

* chore: add telemetry for full screen toggle (#1618)

* Fix headings in codebase-embeddings.md (#1617)

* mention jetbrains

* docs: update changie  (#1619)

* feat: updated changie config

* hide toc and autogenerate

* Update changelog.mdx

* link to deeper explanation of embeddings models

* ensure target="_blank" for all links in sidebar

* fix gif links in intellij README.md

* don't require rust in dependency installation

* chore: fix padding on gh button (#1620)

* chore: adjust button padding

* Update tasks.json

* escape colons in diff path

* smoother lancedb indexing reporting

* smooth progress updates for indexing

* fix tsc err

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* üöë fix constant warnings when onboarding with Ollama

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* team analytics

* apply control plane settings

* workos auth

* ide protocol get session info

* UI for auth

* profile switching

* small fixes

* updates

* refresh tokens

* updates

* fix tsc errs

* model select in toolbar to make room for profile selector

* prod client id

* link to prod URL

* internal beta option

* profiles change listener

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* temporary patch for type errs

* Dev (#1689)

* Fix an issue where CMD+K does not clear the terminal when the terminal has focus (#1671)

On MacOS, ‚åò+K is bound, by default, to Terminal:Clear. Without this
change ‚åò+K does not clear the terminal but instead iniates a chord
sequence and waits for the next stroke of the chord.

Co-authored-by: Rob Leidle <rleidle@tesla.com>

* Change treeSitter to cache the Language objects it loads from wasm (#1672)

Without this change, for a repository with 600 typescript files, the
indexer would fail to finish correctly and there would be many of the
following errors in the webview console log:

'Unable to load language for file ${path} RuntimeError: table index is out of bounds'

The following bash will create a repo that reproduces the problem:

current_path="."

for ((i=1; i<=20; i++)); do
    new_folder="folder-$i"
    mkdir -p "$current_path/$new_folder"
    current_path="$current_path/$new_folder"

    for ((a=1; a<=30; a++)); do
      head -c 10000 /dev/urandom | base64 > "$current_path/file-$a.ts"
    done
done

Co-authored-by: Rob Leidle <rleidle@tesla.com>

* acknowledge sourcemap flag in esbuild.js

* don't run jetbrains-release.yaml on vscode releases

* further testing for walkDir

* chore: add telemetry to commands (#1673)

* test: Add basic unit test to baseLLM (#1668)

* update version

* test: Add basic unit test to baseLLM

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: inimaz <imaz@ai-verse.com>

* feat: add Quick Actions CodeLens feature (#1674)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* add voyage rerank-1

* import Handlebars

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* small UI tweaks

* media query

* feat: add best experience onboarding

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* chore: add telemetry for full screen toggle (#1618)

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* manually implement stop tokens for hf inference api

* chore: onboarding metrics (#1626)

* fix: pageview tracking

* feat: add onboarding telemetry

* create single `onboardingStatus` type

* improved var naming

* remove console logs

* fix windows performance issue

* rename vscodeExtension.ts

* migration of onboarding variables

* "stash" instead of "delete" in indexing progress

* fix preview.yaml

* also fix main.yaml

* Update troubleshooting.md (#1637)

* feat: add quick actions

* Update index.d.ts

* quick actions mvp

* update docs

* subscribe to vscode change settings

* Update commands.ts

* cleanup

* Update quick-actions.md

* Update VerticalPerLineCodeLensProvider.ts

* resolve feedback

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: Nate Sesti <33237525+sestinj@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>

* chore: add `isCommandEvent` to command telemetry (#1675)

* chore: add `isCommandEvent` to command telemetry

* Update commands.ts

* Nate/better retrieval (#1677)

* deduplicatearray tests

* break out separate retrieval pipelines

* IConfigHandler

* tests for codebase indexer

* better .continueignore for continue

* indexing fixes

* ignore .gitignore and .continueignore when indexing

* retrieval pipeline improvements

* fix formatting err in out .continueignore

* add necessary filter to lance_db_cache

* update package.json version

* skip unused tests

* don't ignore .prompt files

* update version

* Update pull_request_template.md

* don't use multi-media format when there are multiple text items

* add free trial experience (#1685)

* fix: add code range for quick actions/fixes (#1687)

* fix: add code range for quick actions/fixes

* Update test.js

* add pathSep message type

* docs improvements

* jetbrains fix

* update package.json version

---------

Co-authored-by: Rob Leidle <rleidle@gmail.com>
Co-authored-by: Rob Leidle <rleidle@tesla.com>
Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: inimaz <49730431+inimaz@users.noreply.github.com>
Co-authored-by: inimaz <imaz@ai-verse.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>

* update package.json version

* skip extension tests

* update package.json version

* handlebars import

* don't push package.json version change from CI

* fix: scroll issues w/ code blocks (#1688)

* fix: scroll issues w/ code blocks

* chore: name offset

* chore: remove docs start

* chore: update headings on troubleshooting.md (#1696)

* ignore .svn folder for indexing (#1699)

* chore: clearer naming for `useSuffix` (#1702)

* chore: clearer naming for `useSuffix`

* schema updates

* fix: cmd+shft+l closes sidebar if focused (#1638)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* add voyage rerank-1

* import Handlebars

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* small UI tweaks

* media query

* feat: add best experience onboarding

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* chore: add telemetry for full screen toggle (#1618)

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* manually implement stop tokens for hf inference api

* chore: onboarding metrics (#1626)

* fix: pageview tracking

* feat: add onboarding telemetry

* create single `onboardingStatus` type

* improved var naming

* remove console logs

* fix windows performance issue

* rename vscodeExtension.ts

* migration of onboarding variables

* "stash" instead of "delete" in indexing progress

* fix preview.yaml

* also fix main.yaml

* Update troubleshooting.md (#1637)

* feat: close panel if main input is focused

* add skip param

* Update TipTapEditor.tsx

* merge dev

* Update commands.ts

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: Nate Sesti <33237525+sestinj@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>

* bugfix: quick actions undefined array (#1704)

* feat: add rich quick pick for quick edit (#1706)

* feat: multistep quick pick

* fix: multi step for context provider

* Update test.js

* Create deepseek.md (#1708)

* style: add max height to model selector (#1712)

* update styling

* remove testing code

* remove comments

* feat: add tutorial card (#1716)

* feat: create tutorial card

* Update TutorialCard.tsx

* feat: add file search to quick edit (#1714)

* feat: multistep quick pick

* fix: multi step for context provider

* Update test.js

* add file search

* complete file search

* remove unused import

* add comments

* Update utils.ts

* update naming

* chore: move quick pick instantiation (#1723)

* Break out into NPM modules (#1726)

* config.json types

* export all schemas

* break out request logic into packages

* update openai adapters to export body types

* update packaging of npm modules

* update packages

* continue proxy

* mistral

* Fix typo in documentation (#1722)

In  set-up-codestral.md
"Trobleshooting" -> "Troubleshooting"

* update package.json version

* ü™Ñ model dropdown, control plane (#1692)

* Nate/control plane client (#1691)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* fix(gui): ctx rendering w/ renderInlineAs: "" (#1541)

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* fix codeqwen autocomplete leading space

* add voyage rerank-1

* feat: `--noEmit` for tsc checks in CI (#1559)

* docs: update CustomContextProvider docs (#1557)

* add stop tokens to qwen prompt

* update docs to reflect 3.5 sonnet being best

* docs: comment out unused providers (#1561)

* import Handlebars

* feat: toast notification for config updates (#1560)

* feat: toast notification for config updates

* feat: only trigger toast on config.json save

* displayRawMarkdown option

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* update to reflect 16 stop words limit for deepseek

* feat: only trigger config update toast in vscode (#1571)

* docs(prompt-files): fix typos + clarify (#1575)

* doc: prompt file typo + clarifications

* fix: add back correct docs

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* docs(telemetry): add pageviews to tracking list (#1581)

* Add reranker configuration options to codebase embedding docs (#1584)

- Introduce reranker concept
- List available reranker options
- Provide configuration instructions
- Update keywords to include "reranker"

* chore: update pr template with screenshots (#1590)

* Refactor ConfirmationDialog to use SecondaryButton for cancel action (#1586)

* Added instructions for running docs server locally (#1578)

- Added NPM script method
- Added VS Code task method
- Update contributing guidelines

* Update branch policy (#1577)

- Change PR target to `dev` branch
- Update `CONTRIBUTING.md` instructions

* Consolidate example configurations into the main configuration guide (#1579)

- Moved examples to configuration.md
- Deleted the separate examples.md file
- Updated sidebar order and links
- Improved readability and structure in configuration.md

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* Update completionProvider.ts (warning tab-autocomplete models) (#1566)

* feat: enhanced IndexingProgressBar with blinking dot feature

- Integrated BlinkingDot component
- Added STATUS_COLORS for various states
- Replaced CircleDiv with BlinkingDot in UI
- Updated status messages and layout

* small UI tweaks

* feat(gui): enhance ModelCard, ModelProviderTag, and Toggle components (#1595)

- add styling and adjustments to ModelCard
- update ModelProviderTag font size
- remove box shadow from Toggle component
- tweak icon styles in ModelCard
- improve alignment and spacing

* media query

* feat: add best experience onboarding

* fix: file rename

* stop movement on button hover by keeping same border thickness

* fix mistake in setting cursor: pointer

* fix when free trial option is shown

* Support Node.js versions below 20 for streaming response handling (#1591)

- Add fallback for Node < 20
- Implement toAsyncIterable for streaming
- Use TextDecoder for manual decoding
- Maintain existing streaming for Node 20+

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* fix hasPassedFTL

* fix /edit cancellation from UI

* feat: add `applyCodeBlock` experimental prop (#1601)

* feat: add new model styling improvements (#1609)

* feat: add new model styling improvements

* better gap size

* feat: update bug_report.yml (#1610)

* chore: update bug_report.yml

* typo fix

* feat: add labels to "Add docs" dialog (#1612)

* feat: add labels to "Add docs" dialog

* remove autofocus

* don't double load config

* small fixes

* speed up directory traversal, and use correct native path module

* option not to show config update toast

* merge air-gapped and recommended setup pages

* chore: add telemetry for full screen toggle (#1618)

* Fix headings in codebase-embeddings.md (#1617)

* mention jetbrains

* docs: update changie  (#1619)

* feat: updated changie config

* hide toc and autogenerate

* Update changelog.mdx

* link to deeper explanation of embeddings models

* ensure target="_blank" for all links in sidebar

* fix gif links in intellij README.md

* don't require rust in dependency installation

* chore: fix padding on gh button (#1620)

* chore: adjust button padding

* Update tasks.json

* escape colons in diff path

* smoother lancedb indexing reporting

* smooth progress updates for indexing

* fix tsc err

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* üöë fix constant warnings when onboarding with Ollama

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* team analytics

* apply control plane settings

* workos auth

* ide protocol get session info

* UI for auth

* profile switching

* small fixes

* updates

* refresh tokens

* updates

* fix tsc errs

* model select in toolbar to make room for profile selector

* prod client id

* link to prod URL

* internal beta option

* profiles change listener

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* temporary patch for type errs

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* skip extension tests

* JetBrains status bar spinner for autocomplete

* Remove unused images

* partial accept jetbrains

* fix double-rendering of jetbrains completions

* fix offset of multi-line jetbrains completions

* enable/disable actions

* upgrade to version 0.0.54

* fix: wrap editor buttons when out of space (#1727)

* Add .continuerc file to config directory on activation to prevent it's indexing. (#1733)

* Updated the content links that were deprecated in the document (#1709)

Co-authored-by: Ihe Fan <ih.fan.1027@gmail.com>

* Nate/dev (#1739)

* JetBrains status bar spinner for autocomplete

* Remove unused images

* partial accept jetbrains

* fix double-rendering of jetbrains completions

* fix offset of multi-line jetbrains completions

* enable/disable actions

* upgrade to version 0.0.54

* llm-info package

* small profile switching improvements

* instruct cmd+I not to leave placeholders

* @ files in context-providers docs

* onboarding fix

* update jetbrains ci to build gui

* feat: single default quick pick to edit (#1743)

* feat: single default quick pick to edit

* Update quick-actions.md

* Update quick-actions.md

* use defaultQuickAction

* quick fixes

* fix: handle line removal diff (#1744)

* fix: handle line removal diff

* remove comments

* Configurable `maxChunkSize` for embedding providers (#1746)

* Add `maxChunkSize` to `EmbeddingsProvider`

* Add `maxChunkSize` to schema

* add support for docs via config (#1594)

* mistral mamba (#1748)

* üêç mistral mamba

* autoscale retrieval based on context length

* autoscale retrieval based on context length

* fix input box movement

* update jetbrains build

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>
Co-authored-by: Rob Leidle <rleidle@gmail.com>
Co-authored-by: Rob Leidle <rleidle@tesla.com>
Co-authored-by: inimaz <49730431+inimaz@users.noreply.github.com>
Co-authored-by: inimaz <imaz@ai-verse.com>
Co-authored-by: Ana√´l Bonnafous <71386173+AnaelBonnafous@users.noreply.github.com>
Co-authored-by: Huy Tran <119860259+tranquochuy645@users.noreply.github.com>
Co-authored-by: Gabriel Gordbegli <ggordbegli@gmail.com>
Co-authored-by: Raven-1027 <83693755+Raven-1027@users.noreply.github.com>
Co-authored-by: Ihe Fan <ih.fan.1027@gmail.com>
Co-authored-by: Lukas Kreussel <65088241+LLukas22@users.noreply.github.com>

* update jetbrains build

* jetbrains build update

* Dev (#1780)

* Nate/control plane client (#1691)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* fix(gui): ctx rendering w/ renderInlineAs: "" (#1541)

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* fix codeqwen autocomplete leading space

* add voyage rerank-1

* feat: `--noEmit` for tsc checks in CI (#1559)

* docs: update CustomContextProvider docs (#1557)

* add stop tokens to qwen prompt

* update docs to reflect 3.5 sonnet being best

* docs: comment out unused providers (#1561)

* import Handlebars

* feat: toast notification for config updates (#1560)

* feat: toast notification for config updates

* feat: only trigger toast on config.json save

* displayRawMarkdown option

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* update to reflect 16 stop words limit for deepseek

* feat: only trigger config update toast in vscode (#1571)

* docs(prompt-files): fix typos + clarify (#1575)

* doc: prompt file typo + clarifications

* fix: add back correct docs

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* docs(telemetry): add pageviews to tracking list (#1581)

* Add reranker configuration options to codebase embedding docs (#1584)

- Introduce reranker concept
- List available reranker options
- Provide configuration instructions
- Update keywords to include "reranker"

* chore: update pr template with screenshots (#1590)

* Refactor ConfirmationDialog to use SecondaryButton for cancel action (#1586)

* Added instructions for running docs server locally (#1578)

- Added NPM script method
- Added VS Code task method
- Update contributing guidelines

* Update branch policy (#1577)

- Change PR target to `dev` branch
- Update `CONTRIBUTING.md` instructions

* Consolidate example configurations into the main configuration guide (#1579)

- Moved examples to configuration.md
- Deleted the separate examples.md file
- Updated sidebar order and links
- Improved readability and structure in configuration.md

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* Update completionProvider.ts (warning tab-autocomplete models) (#1566)

* feat: enhanced IndexingProgressBar with blinking dot feature

- Integrated BlinkingDot component
- Added STATUS_COLORS for various states
- Replaced CircleDiv with BlinkingDot in UI
- Updated status messages and layout

* small UI tweaks

* feat(gui): enhance ModelCard, ModelProviderTag, and Toggle components (#1595)

- add styling and adjustments to ModelCard
- update ModelProviderTag font size
- remove box shadow from Toggle component
- tweak icon styles in ModelCard
- improve alignment and spacing

* media query

* feat: add best experience onboarding

* fix: file rename

* stop movement on button hover by keeping same border thickness

* fix mistake in setting cursor: pointer

* fix when free trial option is shown

* Support Node.js versions below 20 for streaming response handling (#1591)

- Add fallback for Node < 20
- Implement toAsyncIterable for streaming
- Use TextDecoder for manual decoding
- Maintain existing streaming for Node 20+

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* fix hasPassedFTL

* fix /edit cancellation from UI

* feat: add `applyCodeBlock` experimental prop (#1601)

* feat: add new model styling improvements (#1609)

* feat: add new model styling improvements

* better gap size

* feat: update bug_report.yml (#1610)

* chore: update bug_report.yml

* typo fix

* feat: add labels to "Add docs" dialog (#1612)

* feat: add labels to "Add docs" dialog

* remove autofocus

* don't double load config

* small fixes

* speed up directory traversal, and use correct native path module

* option not to show config update toast

* merge air-gapped and recommended setup pages

* chore: add telemetry for full screen toggle (#1618)

* Fix headings in codebase-embeddings.md (#1617)

* mention jetbrains

* docs: update changie  (#1619)

* feat: updated changie config

* hide toc and autogenerate

* Update changelog.mdx

* link to deeper explanation of embeddings models

* ensure target="_blank" for all links in sidebar

* fix gif links in intellij README.md

* don't require rust in dependency installation

* chore: fix padding on gh button (#1620)

* chore: adjust button padding

* Update tasks.json

* escape colons in diff path

* smoother lancedb indexing reporting

* smooth progress updates for indexing

* fix tsc err

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* üöë fix constant warnings when onboarding with Ollama

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* team analytics

* apply control plane settings

* workos auth

* ide protocol get session info

* UI for auth

* profile switching

* small fixes

* updates

* refresh tokens

* updates

* fix tsc errs

* model select in toolbar to make room for profile selector

* prod client id

* link to prod URL

* internal beta option

* profiles change listener

---------

Co-authored-by: Patrick Erichsen <patrick.a.erichsen@gmail.com>
Co-authored-by: Priyash <38959321+priyashpatil@users.noreply.github.com>
Co-authored-by: Jonah Wagner <jonahwagner231@gmail.com>
Co-authored-by: YohannZe <99359799+YohannZe@users.noreply.github.com>
Co-authored-by: Dan Dascalescu <ddascalescu+github@gmail.com>

* temporary patch for type errs

* Dev (#1689)

* Fix an issue where CMD+K does not clear the terminal when the terminal has focus (#1671)

On MacOS, ‚åò+K is bound, by default, to Terminal:Clear. Without this
change ‚åò+K does not clear the terminal but instead iniates a chord
sequence and waits for the next stroke of the chord.

Co-authored-by: Rob Leidle <rleidle@tesla.com>

* Change treeSitter to cache the Language objects it loads from wasm (#1672)

Without this change, for a repository with 600 typescript files, the
indexer would fail to finish correctly and there would be many of the
following errors in the webview console log:

'Unable to load language for file ${path} RuntimeError: table index is out of bounds'

The following bash will create a repo that reproduces the problem:

current_path="."

for ((i=1; i<=20; i++)); do
    new_folder="folder-$i"
    mkdir -p "$current_path/$new_folder"
    current_path="$current_path/$new_folder"

    for ((a=1; a<=30; a++)); do
      head -c 10000 /dev/urandom | base64 > "$current_path/file-$a.ts"
    done
done

Co-authored-by: Rob Leidle <rleidle@tesla.com>

* acknowledge sourcemap flag in esbuild.js

* don't run jetbrains-release.yaml on vscode releases

* further testing for walkDir

* chore: add telemetry to commands (#1673)

* test: Add basic unit test to baseLLM (#1668)

* update version

* test: Add basic unit test to baseLLM

---------

Co-authored-by: Nate Sesti <sestinj@gmail.com>
Co-authored-by: inimaz <imaz@ai-verse.com>

* feat: add Quick Actions CodeLens feature (#1674)

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* add voyage rerank-1

* import Handlebars

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* small UI tweaks

* media query

* feat: add best experience onboarding

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* chore: add telemetry for full screen toggle (#1618)

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* manually implement stop tokens for hf inference api

* chore: onboarding metrics (#1626)

* fix: pageview tracking

* feat: add onboarding telemetry

* create single `onboardingStatus` type

* improved var naming

* remove console logs

* fix windows performance issue

* rename vscodeExtension.ts

* migration of onboarding variables

* "stash" instead of "delete" in indexing progress

* fix preview.yaml

* also fix main.yaml

* Update troubleshooting.md (#1637)

* feat: add quick act‚Ä¶
----------------------------------------

Commit: 5309067ac0e55ac1f464c1b24b8facf2d06896bd
Author: Nate Sesti
Date: 2024-08-05 23:21:42+00:00
Message: update changelog and package.json version
----------------------------------------

Commit: 9bf3facee0f722ea082054698f8d74fa4c5168ad
Author: Nate Sesti
Date: 2024-08-06 02:28:53+00:00
Message: fix ci
----------------------------------------


PULL REQUESTS
--------------------------------------------------------------------------------

PR #1842: Offload all token counting to worker processes as well as some optimizations to do more token counting in parallel
Author: spew
Merged at: 2024-07-26 22:10:20+00:00
URL: https://github.com/continuedev/continue/pull/1842
Description:
## Description
This change moves all countTokens(...) calls into a workerpool, it makes the new bottleneck sqllite inserts.

Adding the workerpool logic broke gui as vite does not support __dirname or path.join(...). To work around this, moved the gui dependency of stripImages out of countTokens.ts

On my system, before this change, indexing the continue repo took about 9:30, after the change, it takes 7:30. However, there much less instances of "extension is not responsive" and similar errors in the VScode developer console logs. In addition, it makes the new bottleneck the rate of SQLite inserts.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created


----------------------------------------

PR #1862: DeepSeek API FIM support
Author: sestinj
Merged at: 2024-07-29 02:49:45+00:00
URL: https://github.com/continuedev/continue/pull/1862
Description:
None
----------------------------------------

PR #1931: Pre-release changes [skip ci]
Author: sestinj
Merged at: 2024-08-05 22:39:31+00:00
URL: https://github.com/continuedev/continue/pull/1931
Description:
None
----------------------------------------

PR #1880: Migrate walkDir from using Minimatch to ignore.Ignore for matching .gitignore patterns
Author: spew
Merged at: 2024-08-02 16:14:12+00:00
URL: https://github.com/continuedev/continue/pull/1880
Description:
## Description

The ignore library attempts to pattern match exactly as .gitignore does and is better for this purpose than Minimatch.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created
----------------------------------------

PR #1632: Query vLLM OpenAI /models endpoint to get model name and context window
Author: simon376
Merged at: 2024-08-05 23:23:33+00:00
URL: https://github.com/continuedev/continue/pull/1632
Description:
## Description

Similar to #755 , the OpenAI-compatible API server by vLLM exposes both the model name via `id` and the context length via `max_model_len`, which can be used to automatically setup the context length of the deployed LLM.

I'm not sure how to best check if the endpoint should be queried, e.g. by checking the API Base URL, or introducing a new apiType besides Azure, etc.

## Checklist

- [x ] The base branch of this PR is `dev`, rather than `main` **it's preview as in your contributing guidelines**
- [ ] The relevant docs, if any, have been updated or created


## References

- [vLLM PR](https://github.com/vllm-project/vllm/pull/4643) adding `max_model_len`
- #609 Looks like this is closely related to the "AUTODETECT" functionality. however, that only uses the model names, not additional parameters as far as I am aware of (ref. `load.ts:244`). So it may be better to adjust the `listModels()` interface to include model parameters in its response
----------------------------------------

PR #1914: Fix codestral name warning
Author: jugodfroy
Merged at: 2024-08-05 23:42:10+00:00
URL: https://github.com/continuedev/continue/pull/1914
Description:
## Description

Avoid the warning message popup "mistralai/Codestral-22B[...] is not trained for tab-autocomplete ..." when using a codestral model as completion provider

## Checklist

- [X] The base branch of this PR is `dev`, rather than `main`
- [X] The relevant docs, if any, have been updated or created

## Screenshots

![image](https://github.com/user-attachments/assets/3d76ddca-332f-4823-82cd-4b033581ff33)

## Testing

NA

----------------------------------------

PR #1909: Step control icons and layout adjustment
Author: priyashpatil
Merged at: 2024-08-05 23:41:02+00:00
URL: https://github.com/continuedev/continue/pull/1909
Description:
## Description

- Fixes color and alignment issues on step controls.
- Changed `regenerate` icon and remove box icon from assistant name.
- Make step controls always visible on last step.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

Before:
![Screenshot 2024-08-04 at 4 47 55‚ÄØPM](https://github.com/user-attachments/assets/93edd37b-4453-4a87-be31-abb40416979c)
After:
![Screenshot 2024-08-04 at 4 48 50‚ÄØPM](https://github.com/user-attachments/assets/9aa3f376-a17c-4880-b573-74ac875885b1)


----------------------------------------

PR #1926: Change ChunkCodebaseIndex to add a tag for known chunks rather than rechunking the file
Author: spew
Merged at: 2024-08-05 23:39:13+00:00
URL: https://github.com/continuedev/continue/pull/1926
Description:
## Description

Note that the prior logic referenced the wrong file contents (`contents` variable vs `addContents` variable) so it was likely impacting the accuracy of portions of the index that use the chunks table.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

----------------------------------------

PR #1885: Enable SQLite WAL (Write-Ahead Logging) mode for improved concurrency
Author: priyashpatil
Merged at: 2024-08-05 23:38:23+00:00
URL: https://github.com/continuedev/continue/pull/1885
Description:
## Description

Enabled Write-Ahead Logging (WAL) mode for the SQLite database. This change is intended to enhance both the performance and stability of database operations, particularly when handling concurrent transactions and large volumes of data.

WAL is very standard across many well-known databases eg. MySQL, PostgreSQL, and MongoDB. The WAL mode in SQLite is kinda similar and **is not enabled by default**. More about it here: https://www.sqlite.org/wal.html

This also resolves the concurrency issues pointed out in and related to #1850 . **However, it does not improve the performance of indexing.** The indexing might be actually slower as mentioned in the above WAL references. For large codebase the performance will be noticeably slow by minutes For example the below:

**Codebase** - (Django Framework Repo) 
**Without WAL** - 13:48 Minutes
**With WAL** - 16:48 Minutes

**Note: The current change only enables WAL while creating SQLite files for the first time. A fresh run of continue (delete the index folder to test it out). The migration for the existing SQLite file is to be implemented (in Next PR).** 

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

----------------------------------------

PR #1876: Make indexing functional in large workspaces by chunking segments of the workspace instead of working on the entire workspace at once
Author: spew
Merged at: 2024-08-05 23:31:38+00:00
URL: https://github.com/continuedev/continue/pull/1876
Description:
## Description

Indexing now works in chunks instead of operating on the entire repo at once. Note: to keep the progress bar working, we do an initial walk of the repository to count the files. This walk is fast in small repositories and can take upwards of 30 seconds in a huge, 100K+ file repository. This is an acceptable price to pay since it would take O(days) to index 100K files.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

----------------------------------------

PR #1796: Fix missing code snippets due to uncaught MiniSearch exception
Author: joshvera
Merged at: 2024-08-05 23:29:30+00:00
URL: https://github.com/continuedev/continue/pull/1796
Description:
## Description

Fixes an issue where `MiniSearch` could throw an uncaught exception during `loadSubmenuItems` in `useSubmenuContextProviders`, causing no code search results to be added to the `MiniSearch`, and code snippets to appear missing in the UI.

The issue stems from lax database constraints, allowing us to insert duplicate `code_snippets` and `code_snippet_tags` during indexing. I've added unique constraints to both tables to prevent application errors in the future.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

<img width="397" alt="image" src="https://github.com/user-attachments/assets/157c705f-829b-4130-88c5-b5272d5c48c5">

## Testing
1. Add a duplicate `code_snippet_tags` row in the code_snippets database or index a repository with duplicate `code_snippet_tags` entries.
2. Load the extension and navigate to the @Code submenu item.
3. All indexed code snippets should be visible.

----------------------------------------

PR #1934: Preview
Author: sestinj
Merged at: 2024-08-05 23:12:39+00:00
URL: https://github.com/continuedev/continue/pull/1934
Description:
None
----------------------------------------

PR #1933: Dev
Author: sestinj
Merged at: 2024-08-05 22:58:23+00:00
URL: https://github.com/continuedev/continue/pull/1933
Description:
None
----------------------------------------

PR #1930: Preview
Author: sestinj
Merged at: 2024-08-05 22:55:29+00:00
URL: https://github.com/continuedev/continue/pull/1930
Description:
None
----------------------------------------

PR #1929: infoPopup
Author: sestinj
Merged at: 2024-08-05 22:01:39+00:00
URL: https://github.com/continuedev/continue/pull/1929
Description:
None
----------------------------------------

PR #1928: Pre-release changes
Author: sestinj
Merged at: 2024-08-05 21:52:47+00:00
URL: https://github.com/continuedev/continue/pull/1928
Description:
None
----------------------------------------

PR #1927: Pre-release changes
Author: sestinj
Merged at: 2024-08-05 21:49:45+00:00
URL: https://github.com/continuedev/continue/pull/1927
Description:
None
----------------------------------------

PR #1925: feat: recursively apply quick actions codelens
Author: Patrick-Erichsen
Merged at: 2024-08-05 20:36:23+00:00
URL: https://github.com/continuedev/continue/pull/1925
Description:
## Description

Recursively apply quick actions codelens

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1924: feat: ux improvements on control plane settings
Author: Patrick-Erichsen
Merged at: 2024-08-05 20:01:08+00:00
URL: https://github.com/continuedev/continue/pull/1924
Description:
## Description

UX improvements on control plane settings

## Checklist

- [ ] The base branch of this PR is `dev`, rather than `main`
- [ ] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1923: feat: improve input and tooltip ux
Author: Patrick-Erichsen
Merged at: 2024-08-05 18:06:53+00:00
URL: https://github.com/continuedev/continue/pull/1923
Description:
## Description

Improve input and tooltip ux

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1922: docs: add link to prompt library
Author: Patrick-Erichsen
Merged at: 2024-08-05 17:12:36+00:00
URL: https://github.com/continuedev/continue/pull/1922
Description:
## Description

Add link to prompt library

## Checklist

- [ ] The base branch of this PR is `dev`, rather than `main`
- [ ] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1904: feat: use bm25 ranking for fts on paths
Author: Patrick-Erichsen
Merged at: 2024-08-05 15:07:46+00:00
URL: https://github.com/continuedev/continue/pull/1904
Description:
## Description

[ What changed? Feel free to be brief. ]

## Checklist

- [ ] The base branch of this PR is `dev`, rather than `main`
- [ ] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1902: Fix error after sending an empty value to the Voyage reranker API
Author: FozzieHi
Merged at: 2024-08-02 23:23:04+00:00
URL: https://github.com/continuedev/continue/pull/1902
Description:
## Description

If the query or documents values are empty, the Voyage API returns an error, with this handy explanation "The request body is not valid JSON, or some arguments were not specified properly. In particular, Error for argument 'query': Value error, Cannot be empty list or empty string; Error for argument 'documents': Value error, Cannot be empty list or empty string".

In this PR, if query or chunks are empty, we return an empty array and we don't make a request to the API.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created
----------------------------------------

PR #1877: Convert core/ to NodeNext
Author: sestinj
Merged at: 2024-07-31 02:04:30+00:00
URL: https://github.com/continuedev/continue/pull/1877
Description:
None
----------------------------------------

PR #1831: Implements WatsonX model provider
Author: rishacha
Merged at: 2024-08-02 16:50:51+00:00
URL: https://github.com/continuedev/continue/pull/1831
Description:
## Description

Adds support for WatsonX as a model provider

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

Implements #1823 

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1903: fix failing test
Author: sestinj
Merged at: 2024-08-02 23:31:04+00:00
URL: https://github.com/continuedev/continue/pull/1903
Description:
None
----------------------------------------

PR #1899: fixes paste bug
Author: sestinj
Merged at: 2024-08-02 23:21:58+00:00
URL: https://github.com/continuedev/continue/pull/1899
Description:
None
----------------------------------------

PR #1901: fix: improve textarea ux
Author: Patrick-Erichsen
Merged at: 2024-08-02 19:50:50+00:00
URL: https://github.com/continuedev/continue/pull/1901
Description:
## Description

Improves the UX of the textarea

Larger font size
Brighter font color
More padding
display: none on enter/use codebase if width < 400px

## Checklist

- [ ] The base branch of this PR is `dev`, rather than `main`
- [ ] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1857: Disable autocomplete in config.json
Author: FozzieHi
Merged at: 2024-08-02 19:11:27+00:00
URL: https://github.com/continuedev/continue/pull/1857
Description:
## Description

Currently, if you edit the `config.json` in an editor with autocomplete enabled, apiKeys may be included in the prompt to the autocomplete provider. Since it is fairly common to edit the `config.json` in editor, this PR replaces configured API keys with the string "SECRET".

### Example
Before:
```
{
  "models": [
    {
      "title": "Claude 3.5 Sonnet",
      "provider": "anthropic",
      "model": "claude-3-5-sonnet-20240620",
      "apiKey": "[ANTHROPIC_API_KEY]"
    }
  ],
  "tabAutocompleteModel": {
    "title": "Codestral",
    "provider": "mistral",
    "model": "codestral-latest",
    "apiKey": "[CODESTRAL_API_KEY]"
  },
  "embeddingsProvider": {
    "provider": "openai",
    "model": "voyage-code-2",
    "apiBase": "https://api.voyageai.com/v1/",
    "apiKey": "[VOYAGE_AI_API_KEY]"
  },
  "reranker": {
    "name": "voyage",
    "params": {
      "apiKey": "[VOYAGE_AI_API_KEY]"
    }
  }
}
```

After:
```
{
  "models": [
    {
      "title": "Claude 3.5 Sonnet",
      "provider": "anthropic",
      "model": "claude-3-5-sonnet-20240620",
      "apiKey": "SECRET"
    }
  ],
  "tabAutocompleteModel": {
    "title": "Codestral",
    "provider": "mistral",
    "model": "codestral-latest",
    "apiKey": "SECRET"
  },
  "embeddingsProvider": {
    "provider": "openai",
    "model": "voyage-code-2",
    "apiBase": "https://api.voyageai.com/v1/",
    "apiKey": "SECRET"
  },
  "reranker": {
    "name": "voyage",
    "params": {
      "apiKey": "SECRET"
    }
  }
}
```

As this is my first contribution, feel free to let me know if any improvements could be made. For example, is this the correct place for the replacement to be made? Is the ConfigHandler the correct file for the `apiKeys()` function? Do we need to traverse like this or could we just get them from the known typed values? Could we just work on the serialised config instead?

I'm also happy to add any tests if needed.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created
----------------------------------------

PR #1898: Fix typo in slash commands docs
Author: FozzieHi
Merged at: 2024-08-02 19:05:18+00:00
URL: https://github.com/continuedev/continue/pull/1898
Description:
## Description
Embarrassingly, this made me very confused for a few mins, when I copy and pasted it and tried to search for the option in the code and nothing showed up! Thought I'd fix it in a separate PR.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created
----------------------------------------

PR #1879: Update select-model.md
Author: sbalk
Merged at: 2024-08-02 19:07:11+00:00
URL: https://github.com/continuedev/continue/pull/1879
Description:
Add link to Autocomplete (beta) page in Features.

## Description

[ What changed? Feel free to be brief. ]

## Checklist

- [ ] The base branch of this PR is `dev`, rather than `main`
- [ ] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1897: docs: remove stale docs
Author: Patrick-Erichsen
Merged at: 2024-08-02 16:59:18+00:00
URL: https://github.com/continuedev/continue/pull/1897
Description:
## Description

Removes the `dataServerUrl` doc 

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1864: feat: configure docs through config.json
Author: Patrick-Erichsen
Merged at: 2024-08-01 23:56:27+00:00
URL: https://github.com/continuedev/continue/pull/1864
Description:
## Description

Configure docs through config.json

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [ ] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

- Create a new doc through the UI
- Confirm it shows up in config.json
- Delete it through the UI
- Confirm it's removed

----------------------------------------

PR #1884: fix tests
Author: sestinj
Merged at: 2024-08-01 03:25:03+00:00
URL: https://github.com/continuedev/continue/pull/1884
Description:
None
----------------------------------------

PR #1883: Remove .prompts
Author: sestinj
Merged at: 2024-08-01 03:02:35+00:00
URL: https://github.com/continuedev/continue/pull/1883
Description:
None
----------------------------------------

PR #1882: Fix VS Code settings
Author: sestinj
Merged at: 2024-08-01 02:49:39+00:00
URL: https://github.com/continuedev/continue/pull/1882
Description:
None
----------------------------------------

PR #1875: More OpenAI Adapters
Author: sestinj
Merged at: 2024-07-30 20:05:24+00:00
URL: https://github.com/continuedev/continue/pull/1875
Description:
None
----------------------------------------

PR #1844: Copy-paste fix for `code-server` environments
Author: samir-abis
Merged at: 2024-07-30 20:01:29+00:00
URL: https://github.com/continuedev/continue/pull/1844
Description:
This PR enables pasting back for web interfaces such as code-server
----------------------------------------

PR #1873: Change the onDidSaveTextDocument handler to only reindex the single saved file
Author: spew
Merged at: 2024-07-30 19:16:29+00:00
URL: https://github.com/continuedev/continue/pull/1873
Description:
## Description

This will improve scale as before the indexing process was restarted on every file save. There is a bit of code duplication between this new function and the existing refresh function. It will be solved in the next commit which builds on top of this one.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

----------------------------------------

PR #1846: Updated Azure Open AI documentation
Author: uright
Merged at: 2024-07-30 17:11:56+00:00
URL: https://github.com/continuedev/continue/pull/1846
Description:
## Description

Added details to correlate parts of the Azure OpenAI endpoint URI to config parameters used by continue

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1810: Feature support model capability
Author: jueinin
Merged at: 2024-07-30 17:05:17+00:00
URL: https://github.com/continuedev/continue/pull/1810
Description:
## Description
close https://github.com/continuedev/continue/issues/1789

##### Customizing the LLM capability
Sometimes when you use certain third-party interface providers, such as [one api](https://github.com/songquanpeng/one-api), [openRouter](https://openrouter.ai/), etc., they offer openai-compatible interfaces, but the model names are highly different. 

Continue cannot determine the capabilities of the model, whether it supports uploading images or files, etc. You can clearly inform Continue about the capabilities of the model.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1871: Moving Bedrock integration to Converse API to support all models
Author: KoStard
Merged at: 2024-07-30 16:14:02+00:00
URL: https://github.com/continuedev/continue/pull/1871
Description:
## Description
This PR updates the Bedrock integration in the Continue.dev VSCode plugin to use the Converse API, allowing support for all Bedrock models instead of just Claude and Llama. The changes include:

1. Replacing model-specific toolkits with a unified approach using the Converse API.
2. Updating the `_streamChat` method to work with `ConverseStreamCommand`.
3. Adding a `_generateConverseInput` method to create the input for the Converse API.
4. Modifying message conversion methods to match the Converse API's expected input structure.
5. Simplifying model handling by removing model-specific logic.
6. Updating the default model to correct Claude 3 model identifier on Bedrock.

These changes provide a more flexible and universal approach to interacting with different Bedrock models.

## Checklist
- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots
N/A - This change doesn't involve visual modifications to the plugin.

## Testing
To test this change:

1. Ensure you have the necessary AWS credentials and permissions set up to use the Bedrock Converse API.
2. Test the plugin with different Bedrock models, including but not limited to Claude and Llama models.
3. Verify that both text completion and chat functionalities work as expected with various models.
4. Check that the system message, when provided, is correctly included in the API calls.
5. Test with multi-modal inputs (text and images) to ensure they are correctly handled.
6. Verify that streaming of responses works correctly for all tested models.
----------------------------------------

PR #1870: fix: update CodebaseIndexer path
Author: alanwu4321
Merged at: 2024-07-30 01:57:47+00:00
URL: https://github.com/continuedev/continue/pull/1870
Description:
## Description

[ What changed? Feel free to be brief. ]

The existing link leads to 404 as the file name has been changed

## Checklist

- [ ] The base branch of this PR is `dev`, rather than `main`
- [ ] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1867: Update prompt files
Author: Patrick-Erichsen
Merged at: 2024-07-29 19:23:30+00:00
URL: https://github.com/continuedev/continue/pull/1867
Description:
## Description

[ What changed? Feel free to be brief. ]

## Checklist

- [ ] The base branch of this PR is `dev`, rather than `main`
- [ ] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1866: Update refreshIndex.ts
Author: Patrick-Erichsen
Merged at: 2024-07-29 19:17:40+00:00
URL: https://github.com/continuedev/continue/pull/1866
Description:
## Description

Closes #1840 

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1750: Preview
Author: sestinj
Merged at: 2024-07-29 06:16:19+00:00
URL: https://github.com/continuedev/continue/pull/1750
Description:
None
----------------------------------------

PR #1865: update gradle version [skip ci]
Author: sestinj
Merged at: 2024-07-29 06:13:21+00:00
URL: https://github.com/continuedev/continue/pull/1865
Description:
None
----------------------------------------

PR #1863: DeepSeek FIM Support
Author: sestinj
Merged at: 2024-07-29 02:52:31+00:00
URL: https://github.com/continuedev/continue/pull/1863
Description:
None
----------------------------------------

PR #1861: proxy updates
Author: sestinj
Merged at: 2024-07-29 01:50:10+00:00
URL: https://github.com/continuedev/continue/pull/1861
Description:
None
----------------------------------------

PR #1853: Add Language Name Param to AutocompleteTemplate
Author: ekatiyar
Merged at: 2024-07-29 01:42:34+00:00
URL: https://github.com/continuedev/continue/pull/1853
Description:
## Description

Language name was previously added as a parameter only for string autocomplete templates. This change provides this same information to template functions that implement the AutocompleteTemplate interface.

Language name is explicitly supported for the CodeGeeX4 autocomplete template, and is added here in this change. Explicit language awareness could also be added for other templates in a future change, like the holeFillerTemplate used for models without explicit completion support.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

This change specifically targets CodeGeeX4, so modify config.json with the following:

```json
  "tabAutocompleteModel": {
    "title": "Tab Autocomplete Model",
    "provider": "ollama",
    "model": "codegeex4:{quant}"
  },
```

I'm running the quant `9b-all-q6_K`, but should work similarly with other quantizations.

----------------------------------------

PR #1856: Update copyright year for extension READMEs
Author: dandv
Merged at: 2024-07-29 01:40:36+00:00
URL: https://github.com/continuedev/continue/pull/1856
Description:
None
----------------------------------------

PR #1855: fix: missing Content-Type header in OllamaEmbeddingsProvider
Author: spaasis
Merged at: 2024-07-29 01:40:01+00:00
URL: https://github.com/continuedev/continue/pull/1855
Description:
## Description

Added the Content-Type: application/json header to OllamaEmbeddingsProvider

Fixes: #1836

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [ ] The relevant docs, if any, have been updated or created
----------------------------------------

PR #1859: OpenAI Adapters
Author: sestinj
Merged at: 2024-07-29 01:22:37+00:00
URL: https://github.com/continuedev/continue/pull/1859
Description:
None
----------------------------------------

PR #1845: Improved indexing performance
Author: sestinj
Merged at: 2024-07-26 22:41:44+00:00
URL: https://github.com/continuedev/continue/pull/1845
Description:
None
----------------------------------------

PR #1843: Create CODE_OF_CONDUCT.md
Author: Patrick-Erichsen
Merged at: 2024-07-26 20:22:39+00:00
URL: https://github.com/continuedev/continue/pull/1843
Description:
## Description

[ What changed? Feel free to be brief. ]

## Checklist

- [ ] The base branch of this PR is `dev`, rather than `main`
- [ ] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1833: feat: include recently + open files in codebase search
Author: Patrick-Erichsen
Merged at: 2024-07-26 17:40:52+00:00
URL: https://github.com/continuedev/continue/pull/1833
Description:
## Description

Includes recently + open files in codebase search.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

- Open `core/context/retrieval/pipelines/RerankerRetrievalPipeline.ts`
- Comment out the other retrieval steps
```ts
retrievalResults.push(
    ...recentlyEditedFilesChunks,
    // ...ftsChunks,
    // ...embeddingsChunks,
  );
```
- Tab through a few files, submit a prompt using codebase 
- Confirm that those files are used as context
- Reload the window
- Submit a prompt using codebase, confirm the open tabs are used as context

----------------------------------------

PR #1839: chore: add trailing slash to ollama `apiBase`
Author: Patrick-Erichsen
Merged at: 2024-07-26 15:43:24+00:00
URL: https://github.com/continuedev/continue/pull/1839
Description:
## Description

Adds a trailing slash to ollama `apiBase`. Mentioned in #1836 .

## Checklist

- [ ] The base branch of this PR is `dev`, rather than `main`
- [ ] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1684: docs: change page heading to model providers
Author: priyashpatil
Merged at: 2024-07-22 20:13:06+00:00
URL: https://github.com/continuedev/continue/pull/1684
Description:
## Description

I think this clears the possible confusion for beginner between select providers and context provider.
- [x] Change page heading to model providers.
- [x] adds redirect to handle old urls

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

If your updates include visual changes, please share screenshots below.

----------------------------------------

PR #1757: add "Codebase Force Re-Index" command
Author: priyashpatil
Merged at: 2024-07-19 16:53:20+00:00
URL: https://github.com/continuedev/continue/pull/1757
Description:
## Description

add Codebase Force Re-Index for VS Code

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

----------------------------------------

PR #1778: fix: delete old docs index on force re-index
Author: priyashpatil
Merged at: 2024-07-19 16:52:23+00:00
URL: https://github.com/continuedev/continue/pull/1778
Description:
## Description

fix: delete old docs index on force re-index

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

----------------------------------------

PR #1779: fix: layout alignment
Author: priyashpatil
Merged at: 2024-07-19 16:51:18+00:00
URL: https://github.com/continuedev/continue/pull/1779
Description:
## Description

- fixes layout alignment issues
- removes duplicate component: BlinkingDot

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots
Before:
![Screenshot 2024-07-19 at 12 51 50‚ÄØPM](https://github.com/user-attachments/assets/3b9ce701-a9e0-4e07-b93f-9c96e1fdf753)

After:
![Screenshot 2024-07-19 at 12 45 10‚ÄØPM](https://github.com/user-attachments/assets/875f8348-a736-42e3-8ee2-c24fa19bcb21)

----------------------------------------

PR #1786: Improve chat thread UI for better readability
Author: priyashpatil
Merged at: 2024-07-22 02:04:48+00:00
URL: https://github.com/continuedev/continue/pull/1786
Description:
## Description

The current chat thread UI is hard to read and it's difficult to distinguish between User and LLM messages. The updated layout is inspired by GitHub Copilot to make it easier to read. Additionally, this new layout will allow more detailed information and options to be displayed for each thread message in future updates.

- Updated the chat thread UI with a GitHub Copilot-inspired design.
- Added the continue Logo SVG.
- Made several minor UI improvements.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots
Demo: https://discord.com/channels/1108621136150929458/1131313996750917835/1264192750086127646

Before:
<img width="604" alt="Screenshot 2024-07-20 at 5 56 48‚ÄØPM" src="https://github.com/user-attachments/assets/6b2fa331-dc07-4a29-a01e-c7c6c3a5b67f">
After:
<img width="604" alt="Screenshot 2024-07-20 at 5 58 02‚ÄØPM" src="https://github.com/user-attachments/assets/fee295b6-d0f6-46e2-925b-d87d2c77872d">


----------------------------------------

PR #1834: Remove a copy / pasta section that duplicated the work done in ChunkCodebaseIndexer
Author: spew
Merged at: 2024-07-25 22:35:50+00:00
URL: https://github.com/continuedev/continue/pull/1834
Description:
This cuts the amount of time spent in this section of indexing in half. On my local machine, indexing the `continue` repo, this section of indexing went from 2:22 to 1:12.

## Description

This section of code is completely duplicated right above & below (expand the diff to see) -- this was doubling the amount of work done in the ChunkCodebaseIndexer for new runs.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created


----------------------------------------

PR #1827: Add Missing Tokens for CodeGeeX4 AutoComplete
Author: ekatiyar
Merged at: 2024-07-24 23:53:09+00:00
URL: https://github.com/continuedev/continue/pull/1827
Description:
## Description

Follow up on #1815, Handles #1742

Previous attempts at using the normal pipe char with CodeGeeX FIM tokens resulted in empty completion output. However, this was due to `<|user|>` and `<|assistant|>` tokens being necessary for completion. The earlier working change omitted these tokens, and its functionality through using the deepseek pipe char was merely coincidental. This change now properly follows the CodeGeeX infill guides and should match what the model expects.

In addition to `<|user|>` and `<|assistant|>`, the `<|endoftext|>` token was added as a stop token.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

Same as #1815

----------------------------------------

PR #1828: chore: bump tree-sitter
Author: Patrick-Erichsen
Merged at: 2024-07-24 23:31:02+00:00
URL: https://github.com/continuedev/continue/pull/1828
Description:
## Description

[ What changed? Feel free to be brief. ]

## Checklist

- [ ] The base branch of this PR is `dev`, rather than `main`
- [ ] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1825: feat: perform FTS on file paths
Author: Patrick-Erichsen
Merged at: 2024-07-24 23:23:17+00:00
URL: https://github.com/continuedev/continue/pull/1825
Description:
## Description

Adds FTS on file paths + testing

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

Run the new tests and confirm `Accuracy: 1`

----------------------------------------

PR #1815: Add CodeGeeX4 code completion support
Author: ekatiyar
Merged at: 2024-07-24 18:58:30+00:00
URL: https://github.com/continuedev/continue/pull/1815
Description:
## Description
Handles #1742

I added support for autocomplete using using the new CodeGeeX4 model.
Following their FIM guide, this change also includes support for context through code snippets.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

Modify config.json with the following:
```json
  "tabAutocompleteModel": {
    "title": "Tab Autocomplete Model",
    "provider": "ollama",
    "model": "codegeex4:{quant}"
  },
```

I'm running the quant 9b-all-q6_K, but should work similarly with other quantizations.
----------------------------------------

PR #1820: config loading
Author: sestinj
Merged at: 2024-07-24 07:35:00+00:00
URL: https://github.com/continuedev/continue/pull/1820
Description:
None
----------------------------------------

PR #1819: Nate/dev
Author: sestinj
Merged at: 2024-07-24 07:28:36+00:00
URL: https://github.com/continuedev/continue/pull/1819
Description:
None
----------------------------------------

PR #1818: feat: make @codebase a hardcoded ctx provider
Author: Patrick-Erichsen
Merged at: 2024-07-23 22:11:49+00:00
URL: https://github.com/continuedev/continue/pull/1818
Description:
## Description

[ What changed? Feel free to be brief. ]

## Checklist

- [ ] The base branch of this PR is `dev`, rather than `main`
- [ ] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1816: chore: add docs as top level config
Author: Patrick-Erichsen
Merged at: 2024-07-23 20:52:53+00:00
URL: https://github.com/continuedev/continue/pull/1816
Description:
## Description

Adds docs as top level config

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [ ] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1814: Improved walkDir performance
Author: sestinj
Merged at: 2024-07-23 20:12:03+00:00
URL: https://github.com/continuedev/continue/pull/1814
Description:
None
----------------------------------------

PR #1808: fix indentation
Author: pzaback
Merged at: 2024-07-23 18:28:44+00:00
URL: https://github.com/continuedev/continue/pull/1808
Description:
## Description

fixed my prior whoopsie

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created
----------------------------------------

PR #1809: increase gemini 1.5 pro contextLength
Author: pzaback
Merged at: 2024-07-23 18:28:24+00:00
URL: https://github.com/continuedev/continue/pull/1809
Description:
## Description

Gemini 1.5 Pro increased context window to 2M tokens: https://developers.googleblog.com/en/new-features-for-the-gemini-api-and-google-ai-studio/

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

----------------------------------------

PR #1813: Llama 3.1 405b model selection
Author: sestinj
Merged at: 2024-07-23 19:00:15+00:00
URL: https://github.com/continuedev/continue/pull/1813
Description:
None
----------------------------------------

PR #1811: feat: add Llama 3.1 8B to cloudflare provider options
Author: deloreyj
Merged at: 2024-07-23 18:28:02+00:00
URL: https://github.com/continuedev/continue/pull/1811
Description:
## Description

Added Llama 3.1 8B as an option for the Cloudflare provider

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1812: llama 3.1 docs
Author: sestinj
Merged at: 2024-07-23 18:14:37+00:00
URL: https://github.com/continuedev/continue/pull/1812
Description:
None
----------------------------------------

PR #1801: Un-shadow file context provider
Author: pzaback
Merged at: 2024-07-22 22:09:30+00:00
URL: https://github.com/continuedev/continue/pull/1801
Description:
## Description

Functionality defined in `FileContextProvider.ts` was effectively shadowed/over-ridden by `resolveInput.ts`
For now I merely commented out the responsible code in case it's desired to include any of it in `FileContextProvider.ts`, but if others agree this is otherwise a good change, these lines should probably just be deleted.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created


## Testing

I'd appreciate guidance on what tests exist to be modified or where I should add testing

----------------------------------------

PR #1807: Dev
Author: sestinj
Merged at: 2024-07-23 05:15:27+00:00
URL: https://github.com/continuedev/continue/pull/1807
Description:
None
----------------------------------------

PR #1806: Simplify walkDir(...) and improve performance by roughly 10x in larger repos
Author: spew
Merged at: 2024-07-23 02:33:59+00:00
URL: https://github.com/continuedev/continue/pull/1806
Description:
## Description

The performance of WalkDir is improved by replacing the recursive DFS with a stack based implementation (less memory in-use during peak exploration). In addition, some unnecessary flags and options were removed which allowed the code to be overall simplified. Much less rule matching is occurring with the same files returned. Finally, all the event emitter features were not needed so they were removed.

Some performance results on my linux host:

small repo:
- 649 files returned by walkDir()
- 9 .gitignore files
- walkDir() old vs new duration: 918 ms to 143 ms

medium sized repo:
- 9271 returned by walkDir()
- 35 .gitignore files
- walkDir() old vs new duration: 10,886 ms to 970ms

large sized repo:
- 197,900 files returned by walkDir()
- 929 .gitignore files
- walkDir() old vs new duration: 498,151 ms to 37,353 ms

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Testing

I did my performance testing with this simple test:

```
describe.only("perf exploration", () => {
  test("time walkdir", async () => {
    const options = {
      returnRelativePaths: true,
    };
    console.time('walkDir.continue')
    const results = await walkDir('/home/username/code/common/continue/', ide, options);
    console.timeEnd('walkDir.continue');
    expect(results.length).toBe(649)
  }, 10 * 60 * 1000);
});
```

----------------------------------------

PR #1785: Index on file change
Author: joshvera
Merged at: 2024-07-22 20:22:55+00:00
URL: https://github.com/continuedev/continue/pull/1785
Description:
## Description

Indexes files on save. Fixes an issue where Continue wasn't reindexing the file and reloading the submenu items on save.

Now you can load a code context with @Class, change the class, then load it again with @Class and the submenu item should be loaded with the latest results from the context provider.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [ ] The relevant docs, if any, have been updated or created

## Testing

1. Open a file with Continue.
2. Add a `console.log("Test")` to the file.
3. Ask Continue how many Test logs are in the file. Should return something like 1.
4. Add `console.log("Test2")` to the file.
5. Ask Continue how many Test logs are in the file. Should return something like 2.

----------------------------------------

PR #1790: Add a Delete Message button to the StepContainer
Author: joshvera
Merged at: 2024-07-22 22:39:49+00:00
URL: https://github.com/continuedev/continue/pull/1790
Description:
## Description

Add a Delete Message button to the StepContainer to allow the user to delete messages. This allows the user to shorten or clean up the context that is sent on request.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

<img width="307" alt="image" src="https://github.com/user-attachments/assets/b5c45d0c-a429-4518-86ed-0107a3e5bafa">

## Testing

1. Create a new message.
2. Hover over the StepContainer in a user message.
3. Click the Delete Message button which should be an X.
4. Expect the message to be deleted.
5. Write a new message referencing the deleted message and expect the LLM response to not know the content.

----------------------------------------

PR #1792: Fix Input Toolbar layout
Author: joshvera
Merged at: 2024-07-22 22:39:14+00:00
URL: https://github.com/continuedev/continue/pull/1792
Description:
## Description

The Input Toolbar now sizes itself to the content and displays it in a flex column under the user's EditorContent message.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots
**Before:**
<img width="302" alt="image" src="https://github.com/user-attachments/assets/302510d7-06cb-4240-9c0f-15e439038293">

**After:**
<img width="305" alt="image" src="https://github.com/user-attachments/assets/c4ed8ddc-21b4-4f11-9e47-6fa79aa1af4a">


## Testing

1. Check the Input Toolbar looks like the above screenshot.

----------------------------------------

PR #1804: Set the Index Progress indicator to paused on startup
Author: joshvera
Merged at: 2024-07-22 22:36:13+00:00
URL: https://github.com/continuedev/continue/pull/1804
Description:
## Description

Fixes an issue introduced in https://github.com/continuedev/continue/pull/1788 where the index progress indicator was stuck on initializing and wouldn't let you manually trigger an index.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

Now shows the paused status with `pauseCodebaseIndexOnStart` enabled.
<img width="339" alt="image" src="https://github.com/user-attachments/assets/a25aa04a-39ad-4b41-930a-33cca481edd8">

## Testing

1. Load this extension with `pauseCodebaseIndexOnStart` enabled.
2. See that the Index Progress indicator is paused and no index has been run.

----------------------------------------

PR #1805: chore: add telemetry to alt-enter
Author: Patrick-Erichsen
Merged at: 2024-07-22 22:19:56+00:00
URL: https://github.com/continuedev/continue/pull/1805
Description:
## Description

Adds telemetry to alt-enter.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1788: Add Pause Codebase On Start setting
Author: joshvera
Merged at: 2024-07-22 21:19:49+00:00
URL: https://github.com/continuedev/continue/pull/1788
Description:
## Description

Adds a Pause Codebase On Start VSCode user setting.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

<img width="784" alt="image" src="https://github.com/user-attachments/assets/7b3aeb6a-26d3-427c-81d0-ed9e1621d530">


## Testing

1. Set the Pause Codebase On Start setting to true
2. Open a Repository or hit Reload Window
3. The Codebase should not Index
4. Check that Manual Indexing still works

----------------------------------------

PR #1797: feat: allow JetBrains users to index docs
Author: Patrick-Erichsen
Merged at: 2024-07-22 20:22:31+00:00
URL: https://github.com/continuedev/continue/pull/1797
Description:
## Description

Allows JetBrains users to index docs.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

Perform these actions in IntelliJ

- Verify that preindexed docs are not shown in the docs dropdown
- Add a new docs (through the UI or config.json, doesn't matter) and wait for it to index
- Change your embeddings provider to transformers.js
- Verify that you get an error
- Change back to a valid  provider
- Confirm that reindexing is kicked off (by waiting for toast notifications in the IDE) and that it completes
- Confirm that the reindexing was successful by using the docs context provider

----------------------------------------

PR #1795: Refresh index fixes
Author: joshvera
Merged at: 2024-07-22 19:54:11+00:00
URL: https://github.com/continuedev/continue/pull/1795
Description:
## Description

Fixes some issues with insertions in `refreshIndex`.

* Separates out `Compute` and `UpdateLastUpdated` operations into their own separate `AddRemoveResultType` and `IndexResultType`. 
* We now update the last updated at field even if the item hasn't changed. 
* We now only insert items into `UpdateNewVersion` if the `cacheKey` has changed.
* Delete duplicate rows in the `tag_catalog` and `global_cache` if they exist.
* Adds unique constraints on `tag_catalog` and `global_cache` to prevent application errors in the future and restrict duplicate insertions.
* CodebaseIndexer now marks all `UpdateLastUpdated` operations as completed when they are returned by the indexers.
* The `results.addTag` loop in `CodebaseIndexer` always inserts.
* 
## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Testing

1. Hitting the reindex button multiple times should be a noop.

----------------------------------------

PR #1800: Enable debug logs
Author: joshvera
Merged at: 2024-07-22 19:50:37+00:00
URL: https://github.com/continuedev/continue/pull/1800
Description:
## Description

Added an `enableDebugLogs` user settings flag that logs to a Continue `vscode.outputChannel`. Useful for debugging GUI code we can't breakpoint in yet. Also generally consolidates logging to an output channel.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [ ] The relevant docs, if any, have been updated or created

## Screenshots

<img width="1106" alt="image" src="https://github.com/user-attachments/assets/90fe86b4-3646-410a-86b1-ce588f291d9e">

## Testing

1. Enable Debug Logs in Continue User Settings
2. Expect debug logs to print in the Continue output channel in the console
3. There are some debug logs in `useSubmenuContextProviders` so they should show up if you @ some code.

----------------------------------------

PR #1784: Dev
Author: Patrick-Erichsen
Merged at: 2024-07-19 20:05:22+00:00
URL: https://github.com/continuedev/continue/pull/1784
Description:
## Description

[ What changed? Feel free to be brief. ]

## Checklist

- [ ] The base branch of this PR is `dev`, rather than `main`
- [ ] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1783: fix: convert `walkDir` to an async generator
Author: Patrick-Erichsen
Merged at: 2024-07-19 19:55:02+00:00
URL: https://github.com/continuedev/continue/pull/1783
Description:
## Description

Converts `walkDir` to an async generator.

Closes #1774 #1771 #1705 

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

- Confirm all tests in `core/test/walkDir.test.ts` are passing
- Open a very large project (e.g. https://github.com/torvalds/linux) and verify that the IDE is responsive while indexing

----------------------------------------

PR #1781: fix tests
Author: sestinj
Merged at: 2024-07-19 18:41:10+00:00
URL: https://github.com/continuedev/continue/pull/1781
Description:
None
----------------------------------------

PR #1780: Dev
Author: sestinj
Merged at: 2024-07-19 18:32:47+00:00
URL: https://github.com/continuedev/continue/pull/1780
Description:
None
----------------------------------------

PR #1711: Add `HuggingFaceTEIReranker`
Author: LLukas22
Merged at: 2024-07-19 18:22:26+00:00
URL: https://github.com/continuedev/continue/pull/1711
Description:
## Description

See #1701

Adds HugginfaceTEI as a reranker

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Testing

1. Create a TEI reranker server with a reranking model, e.g. [BAAI/bge-reranker-base](https://huggingface.co/BAAI/bge-reranker-base)
2. Add the reranker to the `config.json`, e.g.:
```json
{
  "reranker": {
    "name": "huggingface-tei",
    "params": {
        "apiBase": "http://localhost:8080",
        "truncate": true,
        "truncation_direction": "Right"
    }
  },
}
```


----------------------------------------

PR #1773: test: add dir read check for walkDir
Author: Patrick-Erichsen
Merged at: 2024-07-18 20:19:48+00:00
URL: https://github.com/continuedev/continue/pull/1773
Description:
## Description

Adds dir read check for walkDir

## Checklist

- [ ] The base branch of this PR is `dev`, rather than `main`
- [ ] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1772: Update QuickEditQuickPick.ts
Author: Patrick-Erichsen
Merged at: 2024-07-18 17:18:10+00:00
URL: https://github.com/continuedev/continue/pull/1772
Description:
## Description

Fixes bug when opening quick edit if there is no open file on first load.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1764: feat: add azure provider config
Author: Patrick-Erichsen
Merged at: 2024-07-17 18:59:11+00:00
URL: https://github.com/continuedev/continue/pull/1764
Description:
## Description

add azure provider config

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1755: feat: enhance help center
Author: Patrick-Erichsen
Merged at: 2024-07-17 03:14:00+00:00
URL: https://github.com/continuedev/continue/pull/1755
Description:
## Description

A few quick/simple updates to the help center page.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots
<img width="635" alt="Screenshot 2024-07-16 at 8 12 26‚ÄØPM" src="https://github.com/user-attachments/assets/a912cee1-b426-4bae-9e9b-10390f37e2ed">

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1754: test: add myers diff tests
Author: Patrick-Erichsen
Merged at: 2024-07-16 22:19:18+00:00
URL: https://github.com/continuedev/continue/pull/1754
Description:
## Description

Add tests to compare our `streamEdit` against Myers Diff

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1740: Dev
Author: sestinj
Merged at: 2024-07-16 18:07:31+00:00
URL: https://github.com/continuedev/continue/pull/1740
Description:
None
----------------------------------------

PR #1748: mistral mamba
Author: sestinj
Merged at: 2024-07-16 17:00:58+00:00
URL: https://github.com/continuedev/continue/pull/1748
Description:
None
----------------------------------------

PR #1594: [CON-245] Add docs through config.json
Author: priyashpatil
Merged at: 2024-07-16 16:20:23+00:00
URL: https://github.com/continuedev/continue/pull/1594
Description:
## Description

- [x] Add showing docs submenu from config
- [x] Fix docs indexing progress calculator
- [x] Avoid showing duplicate docs in submenu
- [x] Add indexing commands to manual trigger
- [x] Add auto indexing with debounce (If disableIndexing options is false).

**Note**: This PR do not show the indexing progress in UI due to possible collision with progress updates with Code Indexing. This will be resolved in a separate PR.

Closes #1442 

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

----------------------------------------

PR #1746: Configurable `maxChunkSize` for embedding providers
Author: LLukas22
Merged at: 2024-07-16 16:05:20+00:00
URL: https://github.com/continuedev/continue/pull/1746
Description:
## Description

Add `maxChunkSize` to `EmbeddingsProvider` and makes it configurable via `config.json`.
An embedding providers `id` will now also include the `maxChunkSize` to avoid collisions between indices with different chunck lengths if it is not the default. 

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Testing

Set `maxChunkSize` for an embedding provider that does support longer sequences, e.g. : 
```json
"embeddingsProvider": {
    "provider": "huggingface-tei",
    "model": "jina-embeddings-v2-base-code",
    "apiBase": "[URL]",
    "maxChunkSize": 1024
  },
```
Then index a new project.
----------------------------------------

PR #1744: fix: handle line removal diff
Author: Patrick-Erichsen
Merged at: 2024-07-16 14:03:12+00:00
URL: https://github.com/continuedev/continue/pull/1744
Description:
## Description

Logic to handle line removal diff + testing

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1743: feat: single default quick pick to edit
Author: Patrick-Erichsen
Merged at: 2024-07-16 00:35:43+00:00
URL: https://github.com/continuedev/continue/pull/1743
Description:
## Description

Removes the default `Explain` and `Docstring` quick picks and instead uses the quick pick as a shorthand to pull in a given document symbol to quick edit.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

----------------------------------------

PR #1739: Nate/dev
Author: sestinj
Merged at: 2024-07-15 18:08:48+00:00
URL: https://github.com/continuedev/continue/pull/1739
Description:
None
----------------------------------------

PR #1733: Fix: Create .continuerc.json file in configuration directory to prevent it's indexing (and infinite loops).
Author: gordbegli
Merged at: 2024-07-15 15:44:35+00:00
URL: https://github.com/continuedev/continue/pull/1733
Description:
## Description

Fixes #1654 by creating a `.continuerc.json` file in the configuration directory via `activate.ts`.

## Checklist

- [X] The base branch of this PR is `dev`, rather than `main`
- [X] The relevant docs, if any, have been updated or created

## Screenshots

When the user opens their configuration directory they will see
![image](https://github.com/user-attachments/assets/9d2596d3-477e-49af-b57c-e16c946b6ac0)

----------------------------------------

PR #1709: Updated the content links that were deprecated in the document
Author: Raven-1027
Merged at: 2024-07-15 15:46:55+00:00
URL: https://github.com/continuedev/continue/pull/1709
Description:
## Description

Updated the content links that were deprecated in the document.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1727: fix: wrap editor buttons when out of space
Author: devbyjonah
Merged at: 2024-07-15 15:43:30+00:00
URL: https://github.com/continuedev/continue/pull/1727
Description:
## Description

Editor button sections now wrap instead of overflowing out of the container. Also fixed editor placeholder text from wrapping and showing just the top of each letter. Solves issue #1721 

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

<img width="403" alt="Screenshot 2024-07-11 at 11 25 51‚ÄØPM" src="https://github.com/user-attachments/assets/412e77da-fa32-4017-9e76-87c309d24785">
<img width="268" alt="Screenshot 2024-07-11 at 11 25 40‚ÄØPM" src="https://github.com/user-attachments/assets/37b2dbb6-1c43-4078-bc98-e0401839fc8f">


## Testing

Resize the continue sidebar to view the wrapping and placeholder text changes. An alternative solution is to hide the "+ Add context" and "‚åò ‚èé Use codebase" buttons when the sidebar reaches a certain size which looks cleaner and fits in a single row at the cost of no longer displaying these options directly in the editor.
----------------------------------------

PR #1728: cmd+I improvements
Author: sestinj
Merged at: 2024-07-12 07:49:24+00:00
URL: https://github.com/continuedev/continue/pull/1728
Description:
None
----------------------------------------

PR #1722: Fix typo in documentation
Author: tranquochuy645
Merged at: 2024-07-12 07:38:58+00:00
URL: https://github.com/continuedev/continue/pull/1722
Description:
In  set-up-codestral.md
"Trobleshooting" -> "Troubleshooting"

## Description

[ What changed? Feel free to be brief. ]

## Checklist

- [ ] The base branch of this PR is `dev`, rather than `main`
- [ ] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1726: Break out into NPM modules
Author: sestinj
Merged at: 2024-07-12 05:12:42+00:00
URL: https://github.com/continuedev/continue/pull/1726
Description:
None
----------------------------------------

PR #1723: chore: move quick edit instantiation to activation
Author: Patrick-Erichsen
Merged at: 2024-07-12 04:21:31+00:00
URL: https://github.com/continuedev/continue/pull/1723
Description:
## Description

Moves the  quick edit instantiation to activation

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1714: feat: add file search to quick edit
Author: Patrick-Erichsen
Merged at: 2024-07-12 03:41:02+00:00
URL: https://github.com/continuedev/continue/pull/1714
Description:
## Description

Adds file search capabilities to quick edit

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1716: feat: add tutorial card
Author: Patrick-Erichsen
Merged at: 2024-07-11 21:58:56+00:00
URL: https://github.com/continuedev/continue/pull/1716
Description:
## Description

Adds a "Tutorial Card" to give users tips after onboarding.

- Only is displayed once a user completes onboarding
- If dismissed, currently no way to recall

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots
<img width="599" alt="Screenshot 2024-07-11 at 4 48 09‚ÄØPM" src="https://github.com/user-attachments/assets/0b8097f3-2a6c-4925-b439-c4286b877bf2">

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1712: style: add max height to model selector
Author: Patrick-Erichsen
Merged at: 2024-07-11 14:09:09+00:00
URL: https://github.com/continuedev/continue/pull/1712
Description:
## Description

Adds a max height and updated styling to the model selector.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots
<img width="222" alt="Screenshot 2024-07-11 at 8 57 28‚ÄØAM" src="https://github.com/continuedev/continue/assets/20157849/6d803a4c-8ee1-4938-bdc2-4ab77adabb0d">

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1708: docs: add deepseek to reference
Author: Patrick-Erichsen
Merged at: 2024-07-11 00:55:56+00:00
URL: https://github.com/continuedev/continue/pull/1708
Description:
## Description

Adds deepseek to reference docs

## Checklist

- [ ] The base branch of this PR is `dev`, rather than `main`
- [ ] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1706: feat: add rich quick pick for quick edit
Author: Patrick-Erichsen
Merged at: 2024-07-10 22:05:57+00:00
URL: https://github.com/continuedev/continue/pull/1706
Description:
## Description

Adds a richer quick pick for the quick edit functionality

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1704: bugfix: quick actions undefined array
Author: Patrick-Erichsen
Merged at: 2024-07-10 18:57:54+00:00
URL: https://github.com/continuedev/continue/pull/1704
Description:
## Description

Fixes a bug where quick actions receives an empty array of values.

## Checklist

- [ ] The base branch of this PR is `dev`, rather than `main`
- [ ] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1638: fix: cmd+shft+l closes sidebar if focused
Author: Patrick-Erichsen
Merged at: 2024-07-10 17:53:40+00:00
URL: https://github.com/continuedev/continue/pull/1638
Description:
## Description

Fixes missing functionality and enables cmd+shft+l to close the sidebar if focused. Also removes a now unnecessary `continue.toggleAuxiliaryBar` command.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Testing
- Don't highlight any code, press `cmd+shft+l`, confirm the side bar opens
- Press `cmd+shft+l`, confirm the sidebar closes
- Highlight code, press `cmd+shft+l`, confirm sidebar opens with code
- Press `cmd+shft+l`, confirm sidebar closes
----------------------------------------

PR #1702: chore: clearer naming for `useSuffix`
Author: Patrick-Erichsen
Merged at: 2024-07-10 17:08:04+00:00
URL: https://github.com/continuedev/continue/pull/1702
Description:
## Description

Renames `useSuffix` -> `useFileSuffix`

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1699: ignore .svn folder for indexing
Author: AnaelBonnafous
Merged at: 2024-07-10 16:52:06+00:00
URL: https://github.com/continuedev/continue/pull/1699
Description:
## Description

Add .svn folder to ignore list for indexing.

I'm working on a project versioned under SVN rather than Git and have noticed slow indexing, hope this fixes the issue.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

----------------------------------------

PR #1696: chore: update headings on troubleshooting.md
Author: Patrick-Erichsen
Merged at: 2024-07-09 14:58:16+00:00
URL: https://github.com/continuedev/continue/pull/1696
Description:
## Description

[ What changed? Feel free to be brief. ]

## Checklist

- [ ] The base branch of this PR is `dev`, rather than `main`
- [ ] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1688: fix: scroll issues w/ code blocks
Author: Patrick-Erichsen
Merged at: 2024-07-09 13:41:10+00:00
URL: https://github.com/continuedev/continue/pull/1688
Description:
## Description

Fixes some of the scroll issues w/ code blocks.

## Checklist

- [x] The base branch of this PR is `dev`, rather than `main`
- [x] The relevant docs, if any, have been updated or created

## Screenshots

If your updates include visual changes, please share screenshots below.

## Testing

- Generate enough responses to fill the chat sidebar 
- `cmd+L` to add some code 
- Confirm that the chat window scrolls with the text streaming
- `cmd+L` to add some code and scroll up as it generates
- Confirm that that window doesn't jump to keep scrolling
- Scroll to bottom and confirm that it resumes auto scrolling


----------------------------------------

PR #1692: ü™Ñ model dropdown, control plane
Author: sestinj
Merged at: 2024-07-09 05:05:21+00:00
URL: https://github.com/continuedev/continue/pull/1692
Description:
* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* fix(gui): ctx rendering w/ renderInlineAs: "" (#1541)

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* fix codeqwen autocomplete leading space

* add voyage rerank-1

* feat: `--noEmit` for tsc checks in CI (#1559)

* docs: update CustomContextProvider docs (#1557)

* add stop tokens to qwen prompt

* update docs to reflect 3.5 sonnet being best

* docs: comment out unused providers (#1561)

* import Handlebars

* feat: toast notification for config updates (#1560)

* feat: toast notification for config updates

* feat: only trigger toast on config.json save

* displayRawMarkdown option

* feat: open pane on install (#1564)

* feat: open pane on activation

* comment out testing code

* update to reflect 16 stop words limit for deepseek

* feat: only trigger config update toast in vscode (#1571)

* docs(prompt-files): fix typos + clarify (#1575)

* doc: prompt file typo + clarifications

* fix: add back correct docs

* chore: add telemetry for pageviews (#1576)

* feat: update onboarding w/ embeddings model (#1570)

* chore(gui): remove unused pages

* feat: add embeddings step

* feat: update styles

* feat: copy button updates

* fix: correct pull command for embed model

* fix: remove commented code

* fix: remove commented code

* feat: simplify copy btn props

* chore: rename onboarding selection event

* feat: add provider config

* fix: undo msg name

* remove dead code

* fix: invalid mode check

* fix: remove testing logic

* docs(telemetry): add pageviews to tracking list (#1581)

* Add reranker configuration options to codebase embedding docs (#1584)

- Introduce reranker concept
- List available reranker options
- Provide configuration instructions
- Update keywords to include "reranker"

* chore: update pr template with screenshots (#1590)

* Refactor ConfirmationDialog to use SecondaryButton for cancel action (#1586)

* Added instructions for running docs server locally (#1578)

- Added NPM script method
- Added VS Code task method
- Update contributing guidelines

* Update branch policy (#1577)

- Change PR target to `dev` branch
- Update `CONTRIBUTING.md` instructions

* Consolidate example configurations into the main configuration guide (#1579)

- Moved examples to configuration.md
- Deleted the separate examples.md file
- Updated sidebar order and links
- Improved readability and structure in configuration.md

* fix: fullscreen gui retains context when hidden, fixed fullscreen focusing (#1582)

* Update completionProvider.ts (warning tab-autocomplete models) (#1566)

* feat: enhanced IndexingProgressBar with blinking dot feature

- Integrated BlinkingDot component
- Added STATUS_COLORS for various states
- Replaced CircleDiv with BlinkingDot in UI
- Updated status messages and layout

* small UI tweaks

* feat(gui): enhance ModelCard, ModelProviderTag, and Toggle components (#1595)

- add styling and adjustments to ModelCard
- update ModelProviderTag font size
- remove box shadow from Toggle component
- tweak icon styles in ModelCard
- improve alignment and spacing

* media query

* feat: add best experience onboarding

* fix: file rename

* stop movement on button hover by keeping same border thickness

* fix mistake in setting cursor: pointer

* fix when free trial option is shown

* Support Node.js versions below 20 for streaming response handling (#1591)

- Add fallback for Node < 20
- Implement toAsyncIterable for streaming
- Use TextDecoder for manual decoding
- Maintain existing streaming for Node 20+

* small fixes

* feat: add free trial card to onboarding (#1600)

* feat: add free trial card to onboarding

* add import

* fix hasPassedFTL

* fix /edit cancellation from UI

* feat: add `applyCodeBlock` experimental prop (#1601)

* feat: add new model styling improvements (#1609)

* feat: add new model styling improvements

* better gap size

* feat: update bug_report.yml (#1610)

* chore: update bug_report.yml

* typo fix

* feat: add labels to "Add docs" dialog (#1612)

* feat: add labels to "Add docs" dialog

* remove autofocus

* don't double load config

* small fixes

* speed up directory traversal, and use correct native path module

* option not to show config update toast

* merge air-gapped and recommended setup pages

* chore: add telemetry for full screen toggle (#1618)

* Fix headings in codebase-embeddings.md (#1617)

* mention jetbrains

* docs: update changie  (#1619)

* feat: updated changie config

* hide toc and autogenerate

* Update changelog.mdx

* link to deeper explanation of embeddings models

* ensure target="_blank" for all links in sidebar

* fix gif links in intellij README.md

* don't require rust in dependency installation

* chore: fix padding on gh button (#1620)

* chore: adjust button padding

* Update tasks.json

* escape colons in diff path

* smoother lancedb indexing reporting

* smooth progress updates for indexing

* fix tsc err

* rerank-lite-1

* remove doccs

* basic tests for VS Code extension

* improved testing of VS Code extension

* docs: add docs and schema for "OS" provider (#1536)

* ignore .env

* üöë fix constant warnings when onboarding with Ollama

* ‚ú® use and cache imports for autocomplete (#1456)

* ‚ú® use and cache imports for autocomplete

* fix tsc

* team analytics

* apply control plane settings

* workos auth

* ide protocol get session info

* UI for auth

* profile switching

* small fixes

* updates

* refresh tokens

* updates

* fix tsc errs

* model select in toolbar to make room for profile selector

* prod client id

* link to prod URL

* internal beta option

* profiles change listener

---------

## Description

[ What changed? Feel free to be brief. ]

## Checklist

- [ ] The base branch of this PR is `dev`, rather than `main`
- [ ] The relevant docs, if any, have been updated or created

## Screenshots

[ "For visual changes, include screenshots." ]

## Testing

[ For new or modified features, provide testing instructions. ]

----------------------------------------

PR #1691: Nate/control plane client
Author: sestinj
Merged at: 2024-07-09 04:51:53+00:00
URL: https://github.com/continuedev/continue/pull/1691
Description:
None
----------------------------------------

PR #1690: ‚ö°Ô∏è Indexing Improvements
Author: sestinj
Merged at: 2024-07-09 04:48:45+00:00
URL: https://github.com/continuedev/continue/pull/1690
Description:
None
----------------------------------------


FILE CHANGES
--------------------------------------------------------------------------------

File: .changes/extensions/intellij/0.0.53.md
Status: added
Changes: +8 -0
Diff:
@@ -0,0 +1,8 @@
+## 0.0.53 - 2024-07-10
+### Added
+* Support for .prompt files
+* New onboarding experience
+### Fixed
+* Indexing fixes from VS Code versions merged into IntelliJ
+* Improved codebase indexing reliability and testing
+* Fixes for autocomplete text positioning and timing

----------------------------------------

File: .changes/extensions/intellij/0.0.54.md
Status: added
Changes: +6 -0
Diff:
@@ -0,0 +1,6 @@
+## 0.0.54 - 2024-07-13
+### Added
+* Partial autocomplete acceptance
+* Autocomplete status bar spinner
+### Fixed
+* Fixed duplicate completion bug and others

----------------------------------------

File: .changes/extensions/vscode/0.8.43.md
Status: added
Changes: +4 -0
Diff:
@@ -0,0 +1,4 @@
+## 0.8.43 - 2024-07-08
+### Added
+* Improved indexing reliability and testing
+* Quick Actions: use CodeLens to quickly take common actions like adding docstrings

----------------------------------------

File: .changes/extensions/vscode/0.8.45.md
Status: added
Changes: +12 -0
Diff:
@@ -0,0 +1,12 @@
+## 0.8.45 - 2024-08-05
+### Added
+* Support for Llama 3.1 and gpt-4o-mini
+* Support for WatsonX+Granite models
+### Changed
+* Significant improvements to indexing performance
+* Improved @codebase quality by more accurately searching over file names and paths
+* Improved @codebase accuracy
+* Further improvements to indexing performance

----------------------------------------

File: .github/workflows/jetbrains-build.yaml
Status: modified
Changes: +21 -3
Diff:
@@ -16,7 +16,7 @@ name: Build
 on:
   # Trigger the workflow on pushes to only the 'main' branch (this avoids duplicate checks being run e.g., for dependabot pull requests)
   push:
-    branches: [main]
+    branches: [main, preview]
   # Trigger the workflow on any pull request
   # pull_request:
 
@@ -97,6 +97,12 @@ jobs:
           path: binary/node_modules
           key: ${{ runner.os }}-node-${{ hashFiles('binary/package-lock.json') }}
 
+      - name: Cache gui node_modules
+        uses: actions/cache@v3
+        with:
+          path: gui/node_modules
+          key: ${{ runner.os }}-node-${{ hashFiles('gui/package-lock.json') }}

----------------------------------------

File: .github/workflows/jetbrains-release.yaml
Status: modified
Changes: +24 -6
Diff:
@@ -87,6 +87,12 @@ jobs:
           path: binary/node_modules
           key: ${{ runner.os }}-node-${{ hashFiles('binary/package-lock.json') }}
 
+      - name: Cache gui node_modules
+        uses: actions/cache@v3
+        with:
+          path: gui/node_modules
+          key: ${{ runner.os }}-node-${{ hashFiles('gui/package-lock.json') }}
+
       # npm install core
       - name: Install core node_modules
         run: |
@@ -99,6 +105,18 @@ jobs:
           cd ../../binary
           npm ci
 
+      # npm install gui
+      - name: Install gui node_modules

----------------------------------------

File: .github/workflows/main.yaml
Status: modified
Changes: +19 -19
Diff:
@@ -4,10 +4,10 @@ on:
   push:
     branches:
       - main
-  pull_request:
-    types: [closed]
-    branches:
-      - main
+  # pull_request:
+  #   types: [closed]
+  #   branches:
+  #     - main
 
 jobs:
   build:
@@ -231,22 +231,22 @@ jobs:
           npx ovsx publish -p ${{ secrets.VSX_REGISTRY_TOKEN }} --packagePath ../../alpine-x64/*.vsix ../../darwin-arm64/*.vsix ../../darwin-x64/*.vsix ../../linux-arm64/*.vsix ../../linux-armhf/*.vsix ../../linux-x64/*.vsix ../../win32-x64/*.vsix ../../win32-arm64/*.vsix

----------------------------------------

File: .github/workflows/preview.yaml
Status: modified
Changes: +15 -15
Diff:
@@ -223,19 +223,19 @@ jobs:
           npx ovsx publish --pre-release -p ${{ secrets.VSX_REGISTRY_TOKEN }} --packagePath ../../alpine-x64/*.vsix ../../darwin-arm64/*.vsix ../../darwin-x64/*.vsix ../../linux-arm64/*.vsix ../../linux-armhf/*.vsix ../../linux-x64/*.vsix ../../win32-x64/*.vsix ../../win32-arm64/*.vsix
 
       # 4. Update the package.json version and push changes
-      - name: Update version in package.json
-        run: |
-          cd extensions/vscode
-          npm version patch
-
-      - name: Commit changes
-        run: |

----------------------------------------

File: .gitignore
Status: modified
Changes: +3 -1
Diff:
@@ -166,4 +166,6 @@ Icon?
 .continue
 
 # Sandbox env default file
-extensions/vscode/manual-testing-sandbox/example.ts
\ No newline at end of file
+extensions/vscode/manual-testing-sandbox/example.ts
+
+.prompts/
\ No newline at end of file

----------------------------------------

File: .prettierignore
Status: modified
Changes: +2 -1
Diff:
@@ -1,2 +1,3 @@
 extensions/vscode/continue_rc_schema.json
-**/.continueignore
\ No newline at end of file
+**/.continueignore
+CHANGELOG.md
\ No newline at end of file

----------------------------------------

File: .prompts/jest.prompt
Status: removed
Changes: +0 -20
Diff:
@@ -1,20 +0,0 @@
-temperature: 0.5
-maxTokens: 4096
-name: jest
-description: Write Jest unit tests
----
-<system>
-You are an expert programmer
-</system>
-

----------------------------------------

File: .vscode/launch.json
Status: modified
Changes: +64 -2
Diff:
@@ -22,7 +22,6 @@
         "CONTINUE_GLOBAL_DIR": "${workspaceFolder}/binary/.continue"
       }
     },
-
     {
       "name": "Debug Jest Tests",
       "type": "node",
@@ -35,6 +34,7 @@
         "--config",
         "${workspaceRoot}/core/jest.config.js"
       ],
+
       "console": "integratedTerminal",
       "internalConsoleOptions": "neverOpen"
     },
@@ -68,7 +68,10 @@
         "${workspaceFolder}/extensions/vscode/out/extension.js",
         "/Users/natesesti/.continue/config.ts"
       ],
-      "preLaunchTask": "vscode-extension:build"
+      "preLaunchTask": "vscode-extension:build",
+      "env": {
+        // "CONTROL_PLANE_ENV": "local"
+      }
     },
     // Has to be run after starting the server (separately or using the compound configuration)
     {
@@ -95,6 +98,65 @@
         // Avoid timing out when stopping on breakpoints during debugging in VSCode
         "MOCHA_TIMEOUT": "0"

----------------------------------------

File: .vscode/settings.json
Status: modified
Changes: +10 -5
Diff:
@@ -7,10 +7,15 @@
   "python.testing.unittestEnabled": false,
   "python.testing.pytestEnabled": true,
   "terminal.integrated.defaultProfile.linux": "bash",
-    "terminal.integrated.profiles.linux": {
-      "bash": {
-        "path": "bash",
-        "args": ["-l"]
-      }
+  "terminal.integrated.profiles.linux": {

----------------------------------------

File: CODE_OF_CONDUCT.md
Status: added
Changes: +73 -0
Diff:
@@ -0,0 +1,73 @@
+# Contributor Covenant Code of Conduct
+
+## Our Pledge
+
+In the interest of fostering an open and welcoming environment, we as
+contributors and maintainers pledge to making participation in our project and
+our community a harassment-free experience for everyone, regardless of age, body
+size, disability, ethnicity, gender identity and expression, level of experience,
+education, socio-economic status, nationality, personal appearance, race,
+religion, or sexual identity and orientation.
+
+## Our Standards
+
+Examples of behavior that contributes to creating a positive environment
+include:
+
+* Using welcoming and inclusive language
+* Being respectful of differing viewpoints and experiences
+* Gracefully accepting constructive criticism
+* Focusing on what is best for the community
+* Showing empathy towards other community members
+
+Examples of unacceptable behavior by participants include:

----------------------------------------

File: binary/build.js
Status: modified
Changes: +12 -5
Diff:
@@ -158,11 +158,18 @@ async function installNodeModuleInTempDirAndCopyToCurrent(packageName, toCopy) {
     );
   });
 
-  fs.copyFileSync(
-    path.join(__dirname, "../core/vendor/tree-sitter.wasm"),
-    path.join(__dirname, "out/tree-sitter.wasm"),
-  );
-  console.log("[info] Copied tree-sitter wasms");
+  const filesToCopy = [

----------------------------------------

File: binary/package-lock.json
Status: modified
Changes: +11 -4
Diff:
@@ -44,8 +44,10 @@
       "version": "1.0.13",
       "license": "Apache-2.0",
       "dependencies": {
-        "@aws-sdk/client-bedrock-runtime": "^3.574.0",
-        "@aws-sdk/credential-providers": "^3.596.0",
+        "@aws-sdk/client-bedrock-runtime": "^3.620.1",
+        "@aws-sdk/credential-providers": "^3.620.1",
+        "@continuedev/config-types": "^1.0.10",
+        "@continuedev/llm-info": "^1.0.1",
         "@mozilla/readability": "^0.5.0",
         "@octokit/rest": "^20.0.2",
         "@types/jsdom": "^21.1.6",
@@ -61,7 +63,7 @@
         "commander": "^12.0.0",
         "comment-json": "^4.2.3",
         "dbinfoz": "^0.1.4",
-        "dotenv": "^16.3.1",

----------------------------------------

File: binary/package.json
Status: modified
Changes: +1 -1
Diff:
@@ -1,6 +1,7 @@
 {
   "name": "binary",
   "version": "1.0.0",
+  "author": "Continue Dev, Inc",
   "description": "",
   "main": "out/index.js",
   "bin": "out/index.js",
@@ -26,7 +27,6 @@
     "build:dev": "tsc",

----------------------------------------

File: binary/test/binary.test.ts
Status: modified
Changes: +3 -3
Diff:
@@ -107,7 +107,7 @@ describe("Test Suite", () => {
 
     // Many of the files are only created when trying to load the config
     const config = await messenger.request(
-      "config/getBrowserSerialized",
+      "config/getSerializedProfileInfo",
       undefined,
     );
 
@@ -128,8 +128,8 @@ describe("Test Suite", () => {

----------------------------------------

File: binary/tsconfig.json
Status: modified
Changes: +1 -1
Diff:
@@ -3,7 +3,7 @@
     "module": "commonjs",
     "target": "ES2020",
     "outDir": "out",
-    "lib": ["ES2020", "dom", "es6", "es5", "dom.iterable", "scripthost"],
+    "lib": ["ES2021", "dom", "es6", "es5", "dom.iterable", "scripthost"],
     "sourceMap": true,
     "rootDirs": ["src", "../core"],
     "allowJs": true,

----------------------------------------

File: biome.json
Status: removed
Changes: +0 -26
Diff:
@@ -1,26 +0,0 @@
-{
-  "$schema": "https://biomejs.dev/schemas/1.6.4/schema.json",
-  "organizeImports": {
-    "enabled": true
-  },
-  "linter": {
-    "enabled": true,
-    "rules": {
-      "recommended": true,

----------------------------------------

File: core/.eslintrc.json
Status: modified
Changes: +0 -1
Diff:
@@ -8,7 +8,6 @@
   "plugins": ["@typescript-eslint", "import"],
   "rules": {
     "quotes": ["warn", "double", {}],
-    "import/extensions": ["error", "ignorePackages"],
     "@typescript-eslint/naming-convention": "warn",
     "@typescript-eslint/semi": "warn",
     "curly": "warn",

----------------------------------------

File: core/autocomplete/ImportDefinitionsService.ts
Status: modified
Changes: +4 -4
Diff:
@@ -1,11 +1,11 @@
-import { IDE } from "..";
-import { RangeInFileWithContents } from "../commands/util";
-import { PrecalculatedLruCache } from "../util/LruCache";
+import { IDE } from "../index.js";
+import { RangeInFileWithContents } from "../commands/util.js";
+import { PrecalculatedLruCache } from "../util/LruCache.js";
 import {
   TSQueryType,
   getParserForFile,

----------------------------------------

File: core/autocomplete/NearbyDefinitionsService.ts
Status: modified
Changes: +3 -3
Diff:
@@ -1,6 +1,6 @@
-import { IDE, Location } from "..";
-import { LANGUAGES } from "./languages";
-import { getSymbolsForSnippet } from "./ranking";
+import { IDE, Location } from "../index.js";
+import { LANGUAGES } from "./languages.js";
+import { getSymbolsForSnippet } from "./ranking.js";
 
 interface FileInfo {
   filepath: string;

----------------------------------------

File: core/autocomplete/README.md
Status: modified
Changes: +1 -1
Diff:
@@ -90,7 +90,7 @@ This is just another object like the ones in the `"models"` array of `config.jso
 This object allows you to customize the behavior of tab-autocomplete. The available options are:
 
 - `useCopyBuffer`: Determines whether the copy buffer will be considered when constructing the prompt. (Boolean)
-- `useSuffix`: Determines whether to use the file suffix in the prompt. (Boolean)
+- `useFileSuffix`: Determines whether to use the file suffix in the prompt. (Boolean)
 - `maxPromptTokens`: The maximum number of prompt tokens to use. A smaller number will yield faster completions, but less context. (Number)
 - `debounceDelay`: The delay in milliseconds before triggering autocomplete after a keystroke. (Number)
 - `maxSuffixPercentage`: The maximum percentage of the prompt that can be dedicated to the suffix. (Number)

----------------------------------------

File: core/autocomplete/completionProvider.ts
Status: modified
Changes: +42 -16
Diff:
@@ -1,10 +1,9 @@
-import Handlebars from "handlebars";
 import ignore from "ignore";
 import OpenAI from "openai";
 import path from "path";
 import { v4 as uuidv4 } from "uuid";
 import { RangeInFileWithContents } from "../commands/util.js";
-import { IConfigHandler } from "../config/IConfigHandler.js";
+import { ConfigHandler } from "../config/ConfigHandler.js";
 import { TRIAL_FIM_MODEL } from "../config/onboarding.js";
 import { streamLines } from "../diff/util.js";
 import {
@@ -29,6 +28,7 @@ import AutocompleteLruCache from "./cache.js";
 import {
   noFirstCharNewline,
   onlyWhitespaceAfterEndOfLine,
+  stopAtStopTokens,
 } from "./charStream.js";
 import {
   constructAutocompletePrompt,
@@ -50,6 +50,9 @@ import { AutocompleteSnippet } from "./ranking.js";
 import { RecentlyEditedRange } from "./recentlyEdited.js";
 import { getTemplateForModel } from "./templates.js";
 import { GeneratorReuseManager } from "./util.js";
+// @prettier-ignore
+import Handlebars from "handlebars";
+import { getConfigJsonPath } from "../util/paths.js";
 
 export interface AutocompleteInput {
   completionId: string;
@@ -145,7 +148,7 @@ export class CompletionProvider {
   private static lastUUID: string | undefined = undefined;
 
   constructor(
-    private readonly configHandler: IConfigHandler,
+    private readonly configHandler: ConfigHandler,
     private readonly ide: IDE,
     private readonly getLlm: () => Promise<ILLM | undefined>,
     private readonly _onError: (e: any) => void,
@@ -201,13 +204,17 @@ export class CompletionProvider {
       const outcome = this._outcomes.get(completionId)!;
       outcome.accepted = true;
       logDevData("autocomplete", outcome);
-      Telemetry.capture("autocomplete", {
-        accepted: outcome.accepted,
-        modelName: outcome.modelName,

----------------------------------------

File: core/autocomplete/languages.ts
Status: modified
Changes: +25 -1
Diff:
@@ -1,6 +1,7 @@
-import type { LineFilter } from "./lineStream";
+import type { LineFilter } from "./lineStream.js";
 
 export interface AutocompleteLanguageInfo {
+  name: string;
   topLevelKeywords: string[];
   singleLineComment: string;
   endOfLine: string[];
@@ -14,13 +15,15 @@ export interface AutocompleteLanguageInfo {
 
 // TypeScript
 export const Typescript = {
+  name: "TypeScript",
   topLevelKeywords: ["function", "class", "module", "export", "import"],
   singleLineComment: "//",
   endOfLine: [";"],
 };
 
 // Python
 export const Python = {
+  name: "Python",
   // """"#" is for .ipynb files, where we add '"""' surrounding markdown blocks.
   // This stops the model from trying to complete the start of a new markdown block
   topLevelKeywords: ["def", "class", '"""#'],
@@ -30,55 +33,63 @@ export const Python = {
 
 // Java
 export const Java = {
+  name: "Java",
   topLevelKeywords: ["class", "function"],
   singleLineComment: "//",
   endOfLine: [";"],
 };
 
 // C++
 export const Cpp = {
+  name: "C++",
   topLevelKeywords: ["class", "namespace", "template"],
   singleLineComment: "//",
   endOfLine: [";"],
 };
 
 // C#
 export const CSharp = {
+  name: "C#",
   topLevelKeywords: ["class", "namespace", "void"],
   singleLineComment: "//",
   endOfLine: [";"],
 };
 
 // C
 export const C = {
+  name: "C",
   topLevelKeywords: ["if", "else", "while", "for", "switch", "case"],
   singleLineComment: "//",
   endOfLine: [";"],
 };
 
 // Scala
 export const Scala = {
+  name: "Scala",
   topLevelKeywords: ["def", "val", "var", "class", "object", "trait"],
   singleLineComment: "//",

----------------------------------------

File: core/autocomplete/postprocessing.ts
Status: modified
Changes: +3 -3
Diff:
@@ -1,6 +1,6 @@
-import type { ILLM } from "..";
-import { longestCommonSubsequence } from "../util/lcs";
-import { lineIsRepeated } from "./lineStream";
+import type { ILLM } from "../index.js";
+import { longestCommonSubsequence } from "../util/lcs.js";
+import { lineIsRepeated } from "./lineStream.js";
 
 function rewritesLineAbove(completion: string, prefix: string): boolean {
   const lineAbove = prefix

----------------------------------------

File: core/autocomplete/templates.ts
Status: modified
Changes: +42 -3
Diff:
@@ -19,6 +19,7 @@ interface AutocompleteTemplate {
         suffix: string,
         filepath: string,
         reponame: string,
+        language: string,
         snippets: AutocompleteSnippet[],
       ) => string);
   completionOptions?: Partial<CompletionOptions>;
@@ -78,6 +79,7 @@ const codestralMultifileFimTemplate: AutocompleteTemplate = {
     suffix: string,
     filepath: string,
     reponame: string,
+    language: string,
     snippets: AutocompleteSnippet[],
   ): string => {
     return `[SUFFIX]${suffix}[PREFIX]${prefix}`;
@@ -109,6 +111,7 @@ const starcoder2FimTemplate: AutocompleteTemplate = {
     suffix: string,
     filename: string,
     reponame: string,
+    language: string,
     snippets: AutocompleteSnippet[],
   ): string => {
     const otherFiles =
@@ -155,9 +158,40 @@ const deepseekFimTemplate: AutocompleteTemplate = {
   },
 };
 
-const deepseekFimTemplateWrongPipeChar: AutocompleteTemplate = {

----------------------------------------

File: core/biome.json
Status: removed
Changes: +0 -15
Diff:
@@ -1,15 +0,0 @@
-{
-  "$schema": "https://biomejs.dev/schemas/1.6.4/schema.json",
-  "organizeImports": {
-    "enabled": true
-  },
-  "linter": {
-    "enabled": true,
-    "rules": {
-      "recommended": true

----------------------------------------

File: core/commands/index.ts
Status: modified
Changes: +1 -1
Diff:
@@ -3,7 +3,7 @@ import {
   SlashCommand,
   SlashCommandDescription,
 } from "../index.js";
-import { stripImages } from "../llm/countTokens.js";
+import { stripImages } from "../llm/images.js";
 import { renderTemplatedString } from "../llm/llms/index.js";
 import SlashCommands from "./slash/index.js";
 

----------------------------------------

File: core/commands/slash/commit.ts
Status: modified
Changes: +1 -1
Diff:
@@ -1,5 +1,5 @@
 import { SlashCommand } from "../../index.js";
-import { stripImages } from "../../llm/countTokens.js";
+import { stripImages } from "../../llm/images.js";
 
 const CommitMessageCommand: SlashCommand = {
   name: "commit",

----------------------------------------

File: core/commands/slash/draftIssue.ts
Status: modified
Changes: +1 -1
Diff:
@@ -1,5 +1,5 @@
 import { ChatMessage, SlashCommand } from "../../index.js";
-import { stripImages } from "../../llm/countTokens.js";
+import { stripImages } from "../../llm/images.js";
 import { removeQuotesAndEscapes } from "../../util/index.js";
 
 const PROMPT = (

----------------------------------------

File: core/commands/slash/edit.ts
Status: modified
Changes: +1 -1
Diff:
@@ -8,7 +8,7 @@ import {
 } from "../../autocomplete/lineStream.js";
 import { streamLines } from "../../diff/util.js";
 import { ContextItemWithId, ILLM, SlashCommand } from "../../index.js";
-import { stripImages } from "../../llm/countTokens.js";
+import { stripImages } from "../../llm/images.js";
 import {
   dedentAndGetCommonWhitespace,
   getMarkdownLanguageTagForFile,

----------------------------------------

File: core/commands/slash/review.ts
Status: modified
Changes: +1 -1
Diff:
@@ -1,5 +1,5 @@
 import { ChatMessage, SlashCommand } from "../../index.js";
-import { stripImages } from "../../llm/countTokens.js";
+import { stripImages } from "../../llm/images.js";
 
 const prompt = `
      Review the following code, focusing on Readability, Maintainability, Code Smells, Speed, and Memory Performance. Provide feedback with these guidelines:

----------------------------------------

File: core/commands/slash/share.ts
Status: modified
Changes: +1 -1
Diff:
@@ -3,7 +3,7 @@ import { homedir } from "node:os";
 import path from "path";
 import { languageForFilepath } from "../../autocomplete/constructPrompt.js";
 import { SlashCommand } from "../../index.js";
-import { stripImages } from "../../llm/countTokens.js";
+import { stripImages } from "../../llm/images.js";
 
 // If useful elsewhere, helper funcs should move to core/util/index.ts or similar
 function getOffsetDatetime(date: Date): Date {

----------------------------------------

File: core/commands/slash/stackOverflow.ts
Status: modified
Changes: +2 -1
Diff:
@@ -1,6 +1,7 @@
 import { constants } from "../../deploy/constants.js";
 import { ChatMessageRole, FetchFunction, SlashCommand } from "../../index.js";
-import { pruneStringFromBottom, stripImages } from "../../llm/countTokens.js";
+import { pruneStringFromBottom } from "../../llm/countTokens.js";
+import { stripImages } from "../../llm/images.js";
 
 const PROMPT = (
   input: string,

----------------------------------------

File: core/config/ConfigHandler.ts
Status: modified
Changes: +227 -66
Diff:
@@ -1,116 +1,277 @@
+import {
+  ControlPlaneClient,
+  ControlPlaneSessionInfo,
+} from "../control-plane/client.js";
 import {
   BrowserSerializedContinueConfig,
   ContinueConfig,
-  ContinueRcJson,
   IContextProvider,
   IDE,
   IdeSettings,
   ILLM,
 } from "../index.js";
-import { Telemetry } from "../util/posthog.js";
-import { IConfigHandler } from "./IConfigHandler.js";
-import { finalToBrowserConfig, loadFullConfigNode } from "./load.js";
+import { GlobalContext } from "../util/GlobalContext.js";
+import { finalToBrowserConfig } from "./load.js";
+import ControlPlaneProfileLoader from "./profile/ControlPlaneProfileLoader.js";
+import { IProfileLoader } from "./profile/IProfileLoader.js";
+import LocalProfileLoader from "./profile/LocalProfileLoader.js";
+
+export interface ProfileDescription {
+  title: string;
+  id: string;
+}
 
-export class ConfigHandler implements IConfigHandler {
+// Separately manages saving/reloading each profile
+class ProfileLifecycleManager {
   private savedConfig: ContinueConfig | undefined;
   private savedBrowserConfig?: BrowserSerializedContinueConfig;
+  private pendingConfigPromise?: Promise<ContinueConfig>;
+
+  constructor(private readonly profileLoader: IProfileLoader) {}
+
+  get profileId() {
+    return this.profileLoader.profileId;
+  }
+
+  get profileTitle() {
+    return this.profileLoader.profileTitle;
+  }
+
+  get profileDescription(): ProfileDescription {
+    return {
+      title: this.profileTitle,
+      id: this.profileId,
+    };
+  }
+
+  clearConfig() {
+    this.savedConfig = undefined;
+    this.savedBrowserConfig = undefined;
+    this.pendingConfigPromise = undefined;
+  }
+
+  // Clear saved config and reload
+  reloadConfig(): Promise<ContinueConfig> {
+    this.savedConfig = undefined;
+    this.savedBrowserConfig = undefined;
+    this.pendingConfigPromise = undefined;
+
+    return this.profileLoader.doLoadConfig();
+  }
+
+  async loadConfig(
+    additionalContextProviders: IContextProvider[],
+  ): Promise<ContinueConfig> {
+    // If we already have a config, return it
+    if (this.savedConfig) {
+      return this.savedConfig;
+    } else if (this.pendingConfigPromise) {
+      return this.pendingConfigPromise;
+    }
+
+    // Set pending config promise
+    this.pendingConfigPromise = new Promise(async (resolve, reject) => {
+      const newConfig = await this.profileLoader.doLoadConfig();
+
+      // Add registered context providers
+      newConfig.contextProviders = (newConfig.contextProviders ?? []).concat(
+        additionalContextProviders,
+      );
+
+      this.savedConfig = newConfig;
+      resolve(newConfig);
+    });
+
+    // Wait for the config promise to resolve
+    this.savedConfig = await this.pendingConfigPromise;
+    this.pendingConfigPromise = undefined;
+    return this.savedConfig;
+  }
+
+  async getSerializedConfig(
+    additionalContextProviders: IContextProvider[],
+  ): Promise<BrowserSerializedContinueConfig> {
+    if (!this.savedBrowserConfig) {
+      const continueConfig = await this.loadConfig(additionalContextProviders);
+      this.savedBrowserConfig = finalToBrowserConfig(continueConfig);
+    }
+    return this.savedBrowserConfig;
+  }
+}
+
+export class ConfigHandler {
+  private readonly globalContext = new GlobalContext();
   private additionalContextProviders: IContextProvider[] = [];
+  private profiles: ProfileLifecycleManager[];
+  private selectedProfileId: string;
 
   constructor(

----------------------------------------

File: core/config/IConfigHandler.ts
Status: removed
Changes: +0 -17
Diff:
@@ -1,17 +0,0 @@
-import {
-  BrowserSerializedContinueConfig,
-  ContinueConfig,
-  IContextProvider,
-  IdeSettings,
-  ILLM,
-} from "../index.js";
-
-export interface IConfigHandler {

----------------------------------------

File: core/config/default.ts
Status: modified
Changes: +50 -46
Diff:
@@ -32,39 +32,21 @@ export const FREE_TRIAL_MODELS: ModelDescription[] = [
   },
 ];
 
-export const defaultConfig: SerializedContinueConfig = {
-  models: [],
-  customCommands: [
-    {
-      name: "test",
-      prompt:
-        "{{{ input }}}\n\nWrite a comprehensive set of unit tests for the selected code. It should setup, run tests that check for correctness including important edge cases, and teardown. Ensure that the tests are complete and sophisticated. Give the tests just as chat output, don't edit any file.",
-      description: "Write unit tests for highlighted code",
-    },
-  ],
-  tabAutocompleteModel: {
-    title: "Starcoder2 3b",
-    provider: "ollama",
-    model: "starcoder2:3b",
-  },
-};
+export const defaultContextProvidersVsCode: ContextProviderWithParams[] = [
+  { name: "code", params: {} },
+  { name: "docs", params: {} },
+  { name: "diff", params: {} },
+  { name: "terminal", params: {} },
+  { name: "problems", params: {} },
+  { name: "folder", params: {} },
+  { name: "codebase", params: {} },
+];
 
-export const defaultConfigJetBrains: SerializedContinueConfig = {
-  models: FREE_TRIAL_MODELS,
-  customCommands: [
-    {
-      name: "test",
-      prompt:

----------------------------------------

File: core/config/load.ts
Status: modified
Changes: +94 -52
Diff:
@@ -36,6 +36,9 @@ import CustomLLMClass from "../llm/llms/CustomLLM.js";
 import FreeTrial from "../llm/llms/FreeTrial.js";
 import { llmFromDescription } from "../llm/llms/index.js";
 
+import { execSync } from "child_process";
+import CodebaseContextProvider from "../context/providers/CodebaseContextProvider.js";
+import ContinueProxyContextProvider from "../context/providers/ContinueProxyContextProvider.js";
 import { fetchwithRequestOptions } from "../util/fetchWithOptions.js";
 import { copyOf } from "../util/index.js";
 import mergeJson from "../util/merge.js";
@@ -46,7 +49,6 @@ import {
   getConfigJsonPathForRemote,
   getConfigTsPath,
   getContinueDotEnv,
-  migrate,
   readAllGlobalPromptFiles,
 } from "../util/paths.js";
 import {
@@ -60,7 +62,6 @@ import {
   getPromptFiles,
   slashCommandFromPromptFile,
 } from "./promptFile.js";
-const { execSync } = require("child_process");
 
 function resolveSerializedConfig(filepath: string): SerializedContinueConfig {
   let content = fs.readFileSync(filepath, "utf8");
@@ -95,32 +96,22 @@ function loadSerializedConfig(
   workspaceConfigs: ContinueRcJson[],
   ideSettings: IdeSettings,
   ideType: IdeType,
+  overrideConfigJson: SerializedContinueConfig | undefined,
 ): SerializedContinueConfig {
   const configPath = getConfigJsonPath(ideType);
-  let config: SerializedContinueConfig;
-  try {
-    config = resolveSerializedConfig(configPath);
-  } catch (e) {
-    throw new Error(`Failed to parse config.json: ${e}`);
+  let config: SerializedContinueConfig = overrideConfigJson!;
+  if (!config) {
+    try {
+      config = resolveSerializedConfig(configPath);
+    } catch (e) {
+      throw new Error(`Failed to parse config.json: ${e}`);
+    }
   }
 
   if (config.allowAnonymousTelemetry === undefined) {
     config.allowAnonymousTelemetry = true;
   }
 
-  migrate("codeContextProvider", () => {
-    const gpt = config.models.find(
-      (model) =>
-        model.model.startsWith("gpt-4") && model.provider === "free-trial",
-    );
-    if (gpt) {
-      gpt.systemMessage =
-        "You are an expert software developer. You give helpful and concise responses.";
-    }
-
-    fs.writeFileSync(configPath, JSON.stringify(config, undefined, 2), "utf8");
-  });
-
   if (ideSettings.remoteConfigServerUrl) {
     try {
       const remoteConfigJson = resolveSerializedConfig(
@@ -157,6 +148,7 @@ function loadSerializedConfig(
 async function serializedToIntermediateConfig(
   initial: SerializedContinueConfig,
   ide: IDE,
+  loadPromptFiles: boolean = true,
 ): Promise<Config> {
   const slashCommands: SlashCommand[] = [];
   for (const command of initial.slashCommands || []) {
@@ -172,25 +164,27 @@ async function serializedToIntermediateConfig(
   const workspaceDirs = await ide.getWorkspaceDirs();
   const promptFolder = initial.experimental?.promptPath;
 
-  let promptFiles: { path: string; content: string }[] = [];
-  promptFiles = (
-    await Promise.all(
-      workspaceDirs.map((dir) =>
-        getPromptFiles(
-          ide,
-          path.join(dir, promptFolder ?? DEFAULT_PROMPTS_FOLDER),
+  if (loadPromptFiles) {
+    let promptFiles: { path: string; content: string }[] = [];
+    promptFiles = (
+      await Promise.all(
+        workspaceDirs.map((dir) =>
+          getPromptFiles(
+            ide,
+            path.join(dir, promptFolder ?? DEFAULT_PROMPTS_FOLDER),
+          ),
         ),
-      ),

----------------------------------------

File: core/config/onboarding.ts
Status: modified
Changes: +0 -5
Diff:
@@ -10,11 +10,6 @@ export function setupApiKeysMode(
   return {
     ...config,
     models: config.models.filter((model) => model.provider !== "free-trial"),
-    tabAutocompleteModel: {
-      title: "Tab Autocomplete",
-      provider: "free-trial",
-      model: TRIAL_FIM_MODEL,
-    },
     embeddingsProvider: {

----------------------------------------

File: core/config/profile/ControlPlaneProfileLoader.ts
Status: added
Changes: +57 -0
Diff:
@@ -0,0 +1,57 @@
+import { ConfigJson } from "@continuedev/config-types";
+import { ControlPlaneClient } from "../../control-plane/client.js";
+import {
+  ContinueConfig,
+  IDE,
+  IdeSettings,
+  SerializedContinueConfig,
+} from "../../index.js";
+import { IProfileLoader } from "./IProfileLoader.js";
+import doLoadConfig from "./doLoadConfig.js";
+
+export default class ControlPlaneProfileLoader implements IProfileLoader {
+  private static RELOAD_INTERVAL = 1000 * 60 * 15; // every 15 minutes
+
+  readonly profileId: string;
+  profileTitle: string;
+
+  workspaceSettings: ConfigJson | undefined;

----------------------------------------

File: core/config/profile/IProfileLoader.ts
Status: added
Changes: +11 -0
Diff:
@@ -0,0 +1,11 @@
+// ProfileHandlers manage the loading of a config, allowing us to abstract over different ways of getting to a ContinueConfig
+
+import { ContinueConfig } from "../../index.js";
+
+// After we have the ContinueConfig, the ConfigHandler takes care of everything else (loading models, lifecycle, etc.)
+export interface IProfileLoader {
+  profileTitle: string;
+  profileId: string;
+  doLoadConfig(): Promise<ContinueConfig>;

----------------------------------------

File: core/config/profile/LocalProfileLoader.ts
Status: added
Changes: +29 -0
Diff:
@@ -0,0 +1,29 @@
+import { ControlPlaneClient } from "../../control-plane/client.js";
+import { ContinueConfig, IDE, IdeSettings } from "../../index.js";
+import doLoadConfig from "./doLoadConfig.js";
+import { IProfileLoader } from "./IProfileLoader.js";
+
+export default class LocalProfileLoader implements IProfileLoader {
+  static ID = "local";
+  profileId = LocalProfileLoader.ID;
+  profileTitle = "Local Config";

----------------------------------------

File: core/config/profile/doLoadConfig.ts
Status: added
Changes: +82 -0
Diff:
@@ -0,0 +1,82 @@
+import { ContinueProxyReranker } from "../../context/rerankers/ContinueProxyReranker.js";
+import { ControlPlaneClient } from "../../control-plane/client.js";
+import { TeamAnalytics } from "../../control-plane/TeamAnalytics.js";
+import {
+  ContinueRcJson,
+  IDE,
+  IdeSettings,
+  SerializedContinueConfig,
+} from "../../index.js";
+import ContinueProxyEmbeddingsProvider from "../../indexing/embeddings/ContinueProxyEmbeddingsProvider.js";
+import ContinueProxy from "../../llm/llms/stubs/ContinueProxy.js";
+import { Telemetry } from "../../util/posthog.js";
+import { loadFullConfigNode } from "../load.js";
+
+export default async function doLoadConfig(
+  ide: IDE,
+  ideSettingsPromise: Promise<IdeSettings>,
+  controlPlaneClient: ControlPlaneClient,
+  writeLog: (message: string) => Promise<void>,
+  overrideConfigJson: SerializedContinueConfig | undefined,
+) {
+  let workspaceConfigs: ContinueRcJson[] = [];
+  try {
+    workspaceConfigs = await ide.getWorkspaceConfigs();
+  } catch (e) {
+    console.warn("Failed to load workspace configs");

----------------------------------------

File: core/config/promptFile.ts
Status: modified
Changes: +5 -4
Diff:
@@ -3,9 +3,9 @@ import path from "path";
 import * as YAML from "yaml";
 import type { IDE, SlashCommand } from "..";
 import { walkDir } from "../indexing/walkDir";
-import { stripImages } from "../llm/countTokens.js";
-import { renderTemplatedString } from "../llm/llms/index.js";
-import { getBasename } from "../util/index.js";
+import { stripImages } from "../llm/images";
+import { renderTemplatedString } from "../llm/llms/index";
+import { getBasename } from "../util/index";

----------------------------------------

File: core/config/types.ts
Status: modified
Changes: +2 -1
Diff:
@@ -523,6 +523,7 @@ declare global {
     | "gpt-4-32k"
     | "gpt-4-turbo"
     | "gpt-4o"
+    | "gpt-4o-mini"
     | "gpt-4-turbo-preview"
     | "gpt-4-vision-preview"
     // Mistral
@@ -676,7 +677,7 @@ declare global {
   export interface TabAutocompleteOptions {

----------------------------------------

File: core/context/index.ts
Status: modified
Changes: +1 -0
Diff:
@@ -6,6 +6,7 @@ import type {
   IContextProvider,
   LoadSubmenuItemsArgs,
 } from "../index.js";
+
 export abstract class BaseContextProvider implements IContextProvider {
   options: { [key: string]: any };
 

----------------------------------------

File: core/context/providers/ContinueProxyContextProvider.ts
Status: added
Changes: +76 -0
Diff:
@@ -0,0 +1,76 @@
+import { CONTROL_PLANE_URL } from "../../control-plane/client.js";
+import {
+  ContextItem,
+  ContextProviderDescription,
+  ContextProviderExtras,
+  ContextSubmenuItem,
+  LoadSubmenuItemsArgs,
+} from "../../index.js";
+import { BaseContextProvider } from "../index.js";
+
+class ContinueProxyContextProvider extends BaseContextProvider {
+  static description: ContextProviderDescription = {
+    title: "continue-proxy",
+    displayTitle: "Continue Proxy",
+    description: "Retrieve a context item from a Continue for Teams add-on",
+    type: "submenu",
+  };
+
+  workOsAccessToken: string | undefined = undefined;
+
+  override get description(): ContextProviderDescription {
+    return {
+      title:
+        this.options.title || ContinueProxyContextProvider.description.title,

----------------------------------------

File: core/context/providers/DatabaseContextProvider.ts
Status: modified
Changes: +2 -2
Diff:
@@ -30,7 +30,7 @@ class DatabaseContextProvider extends BaseContextProvider {
 
     const [connectionName, table] = query.split(".");
 
-    const getDatabaseAdapter = await require("dbinfoz");
+    const { getDatabaseAdapter } = await import("dbinfoz");
 
     for (const connection of connections) {
       if (connection.name === connectionName) {
@@ -87,7 +87,7 @@ class DatabaseContextProvider extends BaseContextProvider {

----------------------------------------

File: core/context/providers/DocsContextProvider.ts
Status: modified
Changes: +130 -92
Diff:
@@ -1,91 +1,138 @@
-import fetch from "node-fetch";
+import { BaseContextProvider } from "../";
 import {
+  Chunk,
   ContextItem,
   ContextProviderDescription,
   ContextProviderExtras,
   ContextSubmenuItem,
   LoadSubmenuItemsArgs,
-} from "../../index.js";
-import { DocsService } from "../../indexing/docs/DocsService.js";
-import configs from "../../indexing/docs/preIndexedDocs.js";
-import TransformersJsEmbeddingsProvider from "../../indexing/embeddings/TransformersJsEmbeddingsProvider.js";
-import { BaseContextProvider } from "../index.js";
+} from "../..";
+import DocsService from "../../indexing/docs/DocsService";
+import preIndexedDocs from "../../indexing/docs/preIndexedDocs";
+import { Telemetry } from "../../util/posthog";
 
 class DocsContextProvider extends BaseContextProvider {
-  static DEFAULT_N_RETRIEVE = 30;
-  static DEFAULT_N_FINAL = 15;
+  static nRetrieve = 30;
+  static nFinal = 15;
   static description: ContextProviderDescription = {
     title: "docs",
     displayTitle: "Docs",
     description: "Type to search docs",
     type: "submenu",
   };
-  private docsService: DocsService;
 
   constructor(options: any) {
     super(options);
-    this.docsService = DocsService.getInstance();
   }
 
-  private async _getIconDataUrl(url: string): Promise<string | undefined> {
+  private async _rerankChunks(
+    chunks: Chunk[],
+    reranker: NonNullable<ContextProviderExtras["reranker"]>,
+    fullInput: ContextProviderExtras["fullInput"],
+  ) {
+    let chunksCopy = [...chunks];
+
     try {
-      const response = await fetch(url);
-      if (!response.headers.get("content-type")?.startsWith("image/")) {
-        console.log("Not an image: ", await response.text());
-        return undefined;
-      }
-      const buffer = await response.buffer();
-      const base64data = buffer.toString("base64");
-      return `data:${response.headers.get("content-type")};base64,${base64data}`;
+      const scores = await reranker.rerank(fullInput, chunksCopy);
+
+      chunksCopy.sort(
+        (a, b) => scores[chunksCopy.indexOf(b)] - scores[chunksCopy.indexOf(a)],
+      );
+
+      chunksCopy = chunksCopy.splice(
+        0,
+        this.options?.nFinal ?? DocsContextProvider.nFinal,
+      );
     } catch (e) {
-      console.log("E: ", e);
-      return undefined;
+      console.warn(`Failed to rerank docs results: ${e}`);
+
+      chunksCopy = chunksCopy.splice(
+        0,
+        this.options?.nFinal ?? DocsContextProvider.nFinal,
+      );
     }
+
+    return chunksCopy;
+  }
+
+  private _sortByPreIndexedDocs(
+    submenuItems: ContextSubmenuItem[],
+  ): ContextSubmenuItem[] {
+    // Sort submenuItems such that the objects with titles which don't occur in configs occur first, and alphabetized
+    return submenuItems.sort((a, b) => {
+      const aTitleInConfigs = a.metadata?.preIndexed ?? false;
+      const bTitleInConfigs = b.metadata?.preIndexed ?? false;
+
+      // Primary criterion: Items not in configs come first
+      if (!aTitleInConfigs && bTitleInConfigs) {
+        return -1;
+      } else if (aTitleInConfigs && !bTitleInConfigs) {
+        return 1;
+      } else {
+        // Secondary criterion: Alphabetical order when both items are in the same category
+        return a.title.toString().localeCompare(b.title.toString());
+      }
+    });
   }

----------------------------------------

File: core/context/providers/JiraIssuesContextProvider/JiraClient.ts
Status: modified
Changes: +2 -2
Diff:
@@ -1,6 +1,6 @@
 import { RequestOptions } from "../../../index.js";
-const { convert: adf2md } = require("adf-to-md");
-
+// @ts-ignore
+import adf2md from "adf-to-md";
 interface JiraClientOptions {
   domain: string;
   username: string;

----------------------------------------

File: core/context/providers/PostgresContextProvider.ts
Status: modified
Changes: +3 -1
Diff:
@@ -20,7 +20,9 @@ class PostgresContextProvider extends BaseContextProvider {
   static DEFAULT_SAMPLE_ROWS = 3;
 
   private async getPool() {
-    const pg = await require("pg");
+    // @ts-ignore
+    const pg = await import("pg");
+
     return new pg.Pool({
       host: this.options.host,

----------------------------------------

File: core/context/providers/index.ts
Status: modified
Changes: +3 -8
Diff:
@@ -2,6 +2,7 @@ import { ContextProviderName } from "../../index.js";
 import { BaseContextProvider } from "../index.js";
 import CodeContextProvider from "./CodeContextProvider.js";
 import CodebaseContextProvider from "./CodebaseContextProvider.js";
+import ContinueProxyContextProvider from "./ContinueProxyContextProvider.js";
 import CurrentFileContextProvider from "./CurrentFileContextProvider.js";
 import DatabaseContextProvider from "./DatabaseContextProvider.js";
 import DiffContextProvider from "./DiffContextProvider.js";
@@ -40,7 +41,6 @@ const Providers: (typeof BaseContextProvider)[] = [
   HttpContextProvider,
   SearchContextProvider,

----------------------------------------

File: core/context/rerankers/ContinueProxyReranker.ts
Status: added
Changes: +46 -0
Diff:
@@ -0,0 +1,46 @@
+import fetch from "node-fetch";
+import { CONTROL_PLANE_URL } from "../../control-plane/client.js";
+import { Chunk, Reranker } from "../../index.js";
+
+export class ContinueProxyReranker implements Reranker {
+  name = "continue-proxy";
+
+  private _workOsAccessToken: string | undefined = undefined;
+
+  get workOsAccessToken(): string | undefined {
+    return this._workOsAccessToken;
+  }
+
+  set workOsAccessToken(value: string | undefined) {

----------------------------------------

File: core/context/rerankers/index.ts
Status: modified
Changes: +4 -0
Diff:
@@ -1,12 +1,16 @@
 import { RerankerName } from "../../index.js";
 import { CohereReranker } from "./cohere.js";
+import { ContinueProxyReranker } from "./ContinueProxyReranker.js";
 import { FreeTrialReranker } from "./freeTrial.js";
 import { LLMReranker } from "./llm.js";
+import { HuggingFaceTEIReranker } from "./tei.js";
 import { VoyageReranker } from "./voyage.js";
 
 export const AllRerankers: { [key in RerankerName]: any } = {

----------------------------------------

File: core/context/rerankers/tei.ts
Status: added
Changes: +49 -0
Diff:
@@ -0,0 +1,49 @@
+import fetch from "node-fetch";
+import { Chunk, Reranker } from "../../index.js";
+
+export class HuggingFaceTEIReranker implements Reranker {
+  name = "huggingface-tei";
+
+  static defaultOptions = {
+    apiBase: "http://localhost:8080",
+    truncate: true,
+    truncation_direction: "Right"
+  };
+
+  constructor(
+    private readonly params: {
+      apiBase?: string;

----------------------------------------

File: core/context/rerankers/voyage.ts
Status: modified
Changes: +3 -0
Diff:
@@ -12,6 +12,9 @@ export class VoyageReranker implements Reranker {
   ) {}
 
   async rerank(query: string, chunks: Chunk[]): Promise<number[]> {
+    if (!query || chunks.length === 0) {
+      return [];
+    }
     const resp = await fetch("https://api.voyageai.com/v1/rerank", {
       method: "POST",
       headers: {

----------------------------------------

File: core/context/retrieval/pipelines/BaseRetrievalPipeline.ts
Status: modified
Changes: +43 -3
Diff:
@@ -4,9 +4,12 @@ import {
   EmbeddingsProvider,
   IDE,
   Reranker,
-} from "../../..";
-import { LanceDbIndex } from "../../../indexing/LanceDbIndex";
-import { retrieveFts } from "../fullTextSearch";
+} from "../../../index.js";
+import { chunkDocument } from "../../../indexing/chunk/chunk.js";
+import { LanceDbIndex } from "../../../indexing/LanceDbIndex.js";
+import { MAX_CHUNK_SIZE } from "../../../llm/constants.js";
+import { retrieveFts } from "../fullTextSearch.js";
+import { recentlyEditedFilesCache } from "../recentlyEditedFilesCache.js";
 
 export interface RetrievalPipelineOptions {
   ide: IDE;
@@ -32,6 +35,43 @@ export default class BaseRetrievalPipeline implements IRetrievalPipeline {
     );
   }
 

----------------------------------------

File: core/context/retrieval/pipelines/NoRerankerRetrievalPipeline.ts
Status: modified
Changes: +26 -14
Diff:
@@ -1,26 +1,38 @@
-import { Chunk } from "../../..";
-import { deduplicateChunks } from "../util";
-import BaseRetrievalPipeline from "./BaseRetrievalPipeline";
+import { Chunk } from "../../../index.js";
+import { deduplicateChunks } from "../util.js";
+import BaseRetrievalPipeline from "./BaseRetrievalPipeline.js";
 
 export default class NoRerankerRetrievalPipeline extends BaseRetrievalPipeline {
   async run(): Promise<Chunk[]> {
-    const { input } = this.options;
+    const { input, nFinal } = this.options;
+
+    // We give 1/4 weight to recently edited files, 1/4 to full text search,
+    // and the remaining 1/2 to embeddings
+    const recentlyEditedNFinal = nFinal * 0.25;
+    const ftsNFinal = nFinal * 0.25;

----------------------------------------

File: core/context/retrieval/pipelines/RerankerRetrievalPipeline.ts
Status: modified
Changes: +19 -20
Diff:
@@ -1,27 +1,30 @@
-import { Chunk } from "../../..";
-import { RETRIEVAL_PARAMS } from "../../../util/parameters";
-import { deduplicateChunks } from "../util";
-import BaseRetrievalPipeline from "./BaseRetrievalPipeline";
+import { Chunk } from "../../../index.js";
+import { RETRIEVAL_PARAMS } from "../../../util/parameters.js";
+import { recentlyEditedFilesCache } from "../recentlyEditedFilesCache.js";
+import { deduplicateChunks } from "../util.js";
+import BaseRetrievalPipeline from "./BaseRetrievalPipeline.js";
 
 export default class RerankerRetrievalPipeline extends BaseRetrievalPipeline {
   private async _retrieveInitial(): Promise<Chunk[]> {
     const { input, nRetrieve } = this.options;
 
-    // Get all retrieval results
     const retrievalResults: Chunk[] = [];
 
-    // Full-text search
-    const ftsResults = await this.retrieveFts(input, nRetrieve / 2);
-    retrievalResults.push(...ftsResults);
+    const ftsChunks = await this.retrieveFts(input, nRetrieve);

----------------------------------------

File: core/context/retrieval/recentlyEditedFilesCache.ts
Status: added
Changes: +15 -0
Diff:
@@ -0,0 +1,15 @@
+import QuickLRU from "quick-lru";
+import { ToWebviewOrCoreFromIdeProtocol } from "../../protocol/ide.js";
+
+// The cache key and value are both a filepath string
+export type RecentlyEditedFilesCacheKeyAndValue =
+  ToWebviewOrCoreFromIdeProtocol["didChangeActiveTextEditor"][0]["filepath"];
+
+const MAX_NUM_RECENTLY_EDITED_FILES = 100;
+

----------------------------------------

File: core/context/retrieval/retrieval.ts
Status: modified
Changes: +25 -15
Diff:
@@ -3,9 +3,8 @@ import {
   ContextItem,
   ContextProviderExtras,
 } from "../../index.js";
-
+import TransformersJsEmbeddingsProvider from "../../indexing/embeddings/TransformersJsEmbeddingsProvider.js";
 import { getRelativePath } from "../../util/index.js";
-import { RETRIEVAL_PARAMS } from "../../util/parameters.js";
 import { RetrievalPipelineOptions } from "./pipelines/BaseRetrievalPipeline.js";
 import NoRerankerRetrievalPipeline from "./pipelines/NoRerankerRetrievalPipeline.js";
 import RerankerRetrievalPipeline from "./pipelines/RerankerRetrievalPipeline.js";
@@ -20,29 +19,35 @@ export async function retrieveContextItemsFromEmbeddings(
   }
 
   // transformers.js not supported in JetBrains IDEs right now
-  if (
-    extras.embeddingsProvider.id === "all-MiniLM-L6-v2" &&
-    (await extras.ide.getIdeInfo()).ideType === "jetbrains"
-  ) {
+
+  const isJetBrainsAndTransformersJs =
+    extras.embeddingsProvider.id === TransformersJsEmbeddingsProvider.model &&
+    (await extras.ide.getIdeInfo()).ideType === "jetbrains";
+
+  if (isJetBrainsAndTransformersJs) {
     throw new Error(
-      "The transformers.js context provider is not currently supported in JetBrains. For now, you can use Ollama to set up local embeddings, or use our 'free-trial' embeddings provider. See here to learn more: https://docs.continue.dev/walkthroughs/codebase-embeddings#embeddings-providers",
+      "The 'transformers.js' context provider is not currently supported in JetBrains. " +
+        "For now, you can use Ollama to set up local embeddings, or use our 'free-trial' " +
+        "embeddings provider. See here to learn more: " +
+        "https://docs.continue.dev/walkthroughs/codebase-embeddings#embeddings-providers",

----------------------------------------

File: core/context/retrieval/util.ts
Status: modified
Changes: +2 -2
Diff:
@@ -1,5 +1,5 @@
-import { Chunk } from "../..";
-import { deduplicateArray } from "../../util";
+import { Chunk } from "../../index.js";
+import { deduplicateArray } from "../../util/index.js";
 
 export function deduplicateChunks(chunks: Chunk[]): Chunk[] {
   return deduplicateArray(chunks, (a, b) => {

----------------------------------------

File: core/continueServer/stubs/headers.ts
Status: modified
Changes: +2 -2
Diff:
@@ -1,5 +1,5 @@
-import { constants, getTimestamp } from "../../deploy/constants";
-import { Telemetry } from "../../util/posthog";
+import { constants, getTimestamp } from "../../deploy/constants.js";
+import { Telemetry } from "../../util/posthog.js";
 
 export async function getHeaders() {
   return {

----------------------------------------

File: core/control-plane/TeamAnalytics.ts
Status: added
Changes: +55 -0
Diff:
@@ -0,0 +1,55 @@
+import { Analytics } from "@continuedev/config-types";
+import os from "node:os";
+import ContinueProxyAnalyticsProvider from "./analytics/ContinueProxyAnalyticsProvider.js";
+import { IAnalyticsProvider } from "./analytics/IAnalyticsProvider.js";
+import LogStashAnalyticsProvider from "./analytics/LogStashAnalyticsProvider.js";
+import PostHogAnalyticsProvider from "./analytics/PostHogAnalyticsProvider.js";
+
+function createAnalyticsProvider(
+  config: Analytics,
+): IAnalyticsProvider | undefined {
+  // @ts-ignore
+  switch (config.provider) {
+    case "posthog":
+      return new PostHogAnalyticsProvider();
+    case "logstash":
+      return new LogStashAnalyticsProvider();
+    case "continue-proxy":

----------------------------------------

File: core/control-plane/analytics/ContinueProxyAnalyticsProvider.ts
Status: added
Changes: +32 -0
Diff:
@@ -0,0 +1,32 @@
+import { Analytics } from "@continuedev/config-types";
+import fetch from "node-fetch";
+import { CONTROL_PLANE_URL } from "../client.js";
+import { IAnalyticsProvider } from "./IAnalyticsProvider.js";
+
+export default class ContinueProxyAnalyticsProvider
+  implements IAnalyticsProvider
+{
+  uniqueId?: string;
+  addOnId?: string;

----------------------------------------

File: core/control-plane/analytics/IAnalyticsProvider.ts
Status: added
Changes: +11 -0
Diff:
@@ -0,0 +1,11 @@
+import { Analytics } from "@continuedev/config-types";
+
+export interface AnalyticsMetadata {
+  extensionVersion: string;
+}
+
+export interface IAnalyticsProvider {
+  capture(event: string, properties: { [key: string]: any }): Promise<void>;
+  setup(config: Analytics, uniqueId: string): Promise<void>;

----------------------------------------

File: core/control-plane/analytics/LogStashAnalyticsProvider.ts
Status: added
Changes: +42 -0
Diff:
@@ -0,0 +1,42 @@
+import { Analytics } from "@continuedev/config-types";
+import net from "node:net";
+import { IAnalyticsProvider } from "./IAnalyticsProvider.js";
+
+export default class LogStashAnalyticsProvider implements IAnalyticsProvider {
+  private host?: string;
+  private port?: number;
+  private uniqueId?: string;
+
+  async capture(
+    event: string,
+    properties: { [key: string]: any },
+  ): Promise<void> {

----------------------------------------

File: core/control-plane/analytics/PostHogAnalyticsProvider.ts
Status: added
Changes: +37 -0
Diff:
@@ -0,0 +1,37 @@
+import { Analytics } from "@continuedev/config-types";
+import { IAnalyticsProvider } from "./IAnalyticsProvider.js";
+
+export default class PostHogAnalyticsProvider implements IAnalyticsProvider {
+  client?: any;
+  uniqueId?: string;
+
+  async capture(
+    event: string,
+    properties: { [key: string]: any },
+  ): Promise<void> {

----------------------------------------

File: core/control-plane/auth/index.ts
Status: added
Changes: +20 -0
Diff:
@@ -0,0 +1,20 @@
+import { v4 as uuidv4 } from "uuid";
+
+const CLIENT_ID = "client_01J0FW6XN8N2XJAECF7NE0Y65J";
+// const CLIENT_ID = "client_01J0FW6XCPMJMQ3CG51RB4HBZQ"; // Staging
+
+export async function getAuthUrlForTokenPage(): Promise<string> {
+  const url = new URL("https://api.workos.com/user_management/authorize");
+  const params = {
+    response_type: "code",

----------------------------------------

File: core/control-plane/client.ts
Status: added
Changes: +97 -0
Diff:
@@ -0,0 +1,97 @@
+import { ConfigJson } from "@continuedev/config-types";
+import fetch, { RequestInit, Response } from "node-fetch";
+import { ModelDescription } from "../index.js";
+
+export interface ControlPlaneSessionInfo {
+  accessToken: string;
+  account: {
+    label: string;
+    id: string;
+  };
+}
+
+export interface ControlPlaneWorkspace {
+  id: string;
+  name: string;
+  settings: ConfigJson;
+}
+
+export interface ControlPlaneModelDescription extends ModelDescription {}
+
+export const CONTROL_PLANE_URL =
+  process.env.CONTROL_PLANE_ENV === "local"
+    ? "http://localhost:3001"
+    : "https://control-plane-api-service-i3dqylpbqa-uc.a.run.app";
+
+export class ControlPlaneClient {
+  private static URL = CONTROL_PLANE_URL;
+  private static ACCESS_TOKEN_VALID_FOR_MS = 1000 * 60 * 5; // 5 minutes
+
+  private lastAccessTokenRefresh = 0;
+

----------------------------------------

File: core/control-plane/schema.ts
Status: added
Changes: +128 -0
Diff:
@@ -0,0 +1,128 @@
+import { z } from "zod";
+
+const modelDescriptionSchema = z.object({
+  title: z.string(),
+  provider: z.enum([
+    "openai",
+    "anthropic",
+    "cohere",
+    "ollama",
+    "huggingface-tgi",
+    "huggingface-inference-api",
+    "replicate",
+    "gemini",
+    "mistral",
+    "bedrock",
+    "cloudflare",
+    "azure",
+  ]),
+  model: z.string(),
+  apiKey: z.string().optional(),
+  apiBase: z.string().optional(),
+  contextLength: z.number().optional(),
+  template: z
+    .enum([
+      "llama2",
+      "alpaca",
+      "zephyr",
+      "phi2",
+      "phind",
+      "anthropic",
+      "chatml",
+      "none",
+      "openchat",
+      "deepseek",
+      "xwin-coder",
+      "neural-chat",
+      "codellama-70b",
+      "llava",
+      "gemma",
+      "llama3",
+    ])
+    .optional(),

----------------------------------------

File: core/core.ts
Status: modified
Changes: +146 -59
Diff:
@@ -1,46 +1,44 @@
 import { v4 as uuidv4 } from "uuid";
-import type {
-  ContextItemId,
-  IDE,
-  IndexingProgressUpdate,
-  SiteIndexingConfig,
-} from ".";
-import { CompletionProvider } from "./autocomplete/completionProvider.js";
-import { ConfigHandler } from "./config/ConfigHandler.js";
-import { IConfigHandler } from "./config/IConfigHandler";
+import type { ContextItemId, IDE, IndexingProgressUpdate } from ".";
+import { CompletionProvider } from "./autocomplete/completionProvider";
+import { ConfigHandler } from "./config/ConfigHandler";
 import {
   setupApiKeysMode,
   setupFreeTrialMode,
   setupLocalAfterFreeTrial,
   setupLocalMode,
-} from "./config/onboarding.js";
-import { createNewPromptFile } from "./config/promptFile.js";
-import { addModel, addOpenAIKey, deleteModel } from "./config/util.js";
-import { ContinueServerClient } from "./continueServer/stubs/client.js";
-import { CodebaseIndexer, PauseToken } from "./indexing/CodebaseIndexer.js";
-import { DocsService } from "./indexing/docs/DocsService";
-import TransformersJsEmbeddingsProvider from "./indexing/embeddings/TransformersJsEmbeddingsProvider.js";
-import Ollama from "./llm/llms/Ollama.js";
+} from "./config/onboarding";
+import { createNewPromptFile } from "./config/promptFile";
+import { addModel, addOpenAIKey, deleteModel } from "./config/util";
+import { recentlyEditedFilesCache } from "./context/retrieval/recentlyEditedFilesCache";
+import { ContinueServerClient } from "./continueServer/stubs/client";
+import { getAuthUrlForTokenPage } from "./control-plane/auth/index";
+import { ControlPlaneClient } from "./control-plane/client";
+import { CodebaseIndexer, PauseToken } from "./indexing/CodebaseIndexer";
+import DocsService from "./indexing/docs/DocsService";
+import Ollama from "./llm/llms/Ollama";
 import type { FromCoreProtocol, ToCoreProtocol } from "./protocol";
-import { GlobalContext } from "./util/GlobalContext.js";
-import { logDevData } from "./util/devdata.js";
-import { DevDataSqliteDb } from "./util/devdataSqlite.js";
-import { fetchwithRequestOptions } from "./util/fetchWithOptions.js";
-import historyManager from "./util/history.js";
+import { GlobalContext } from "./util/GlobalContext";
+import { logDevData } from "./util/devdata";
+import { DevDataSqliteDb } from "./util/devdataSqlite";
+import { fetchwithRequestOptions } from "./util/fetchWithOptions";
+import historyManager from "./util/history";
 import type { IMessenger, Message } from "./util/messenger";
-import { editConfigJson } from "./util/paths.js";
-import { Telemetry } from "./util/posthog.js";
-import { streamDiffLines } from "./util/verticalEdit.js";
+import { editConfigJson } from "./util/paths";
+import { Telemetry } from "./util/posthog";
+import { streamDiffLines } from "./util/verticalEdit";
 
 export class Core {
   // implements IMessenger<ToCoreProtocol, FromCoreProtocol>
-  configHandler: IConfigHandler;
+  configHandler: ConfigHandler;
   codebaseIndexerPromise: Promise<CodebaseIndexer>;
   completionProvider: CompletionProvider;
   continueServerClientPromise: Promise<ContinueServerClient>;
   indexingState: IndexingProgressUpdate;
+  controlPlaneClient: ControlPlaneClient;
+  private docsService: DocsService;
   private globalContext = new GlobalContext();
-  private docsService = DocsService.getInstance();
+
   private readonly indexingPauseToken = new PauseToken(
     this.globalContext.get("indexingPaused") === true,
   );
@@ -64,6 +62,14 @@ export class Core {
     return this.messenger.invoke(messageType, data);
   }
 
+  send<T extends keyof FromCoreProtocol>(
+    messageType: T,
+    data: FromCoreProtocol[T][0],
+    messageId?: string,
+  ): string {
+    return this.messenger.send(messageType, data);
+  }
+
   // TODO: It shouldn't actually need an IDE type, because this can happen
   // through the messenger (it does in the case of any non-VS Code IDEs already)
   constructor(
@@ -72,16 +78,35 @@ export class Core {
     private readonly onWrite: (text: string) => Promise<void> = async () => {},
   ) {
     this.indexingState = { status: "loading", desc: "loading", progress: 0 };
+
     const ideSettingsPromise = messenger.request("getIdeSettings", undefined);
+    const sessionInfoPromise = messenger.request("getControlPlaneSessionInfo", {
+      silent: true,
+    });
+
+    this.controlPlaneClient = new ControlPlaneClient(sessionInfoPromise);
+
     this.configHandler = new ConfigHandler(
       this.ide,
       ideSettingsPromise,
       this.onWrite,
+      this.controlPlaneClient,
     );
+
+    this.docsService = DocsService.createSingleton(
+      this.configHandler,
+      this.ide,
+      this.messenger,
+    );
+
     this.configHandler.onConfigUpdate(
       (() => this.messenger.send("configUpdate", undefined)).bind(this),
     );
 
+    this.configHandler.onDidChangeAvailableProfiles((profiles) =>
+      this.messenger.send("didChangeAvailableProfiles", { profiles }),
+    );
+
     // Codebase Indexer and ContinueServerClient depend on IdeSettings
     let codebaseIndexerResolve: (_: any) => void | undefined;
     this.codebaseIndexerPromise = new Promise(
@@ -108,9 +133,21 @@ export class Core {
           continueServerClient,
         ),
       );
-      this.ide
-        .getWorkspaceDirs()
-        .then((dirs) => this.refreshCodebaseIndex(dirs));

----------------------------------------

File: core/diff/streamDiff.ts
Status: modified
Changes: +47 -22
Diff:
@@ -1,64 +1,89 @@
-import { DiffLine } from "../index.js";
+import { DiffLine, DiffLineType } from "../index.js";
 import { LineStream, matchLine } from "./util.js";
 
 /**
  * https://blog.jcoglan.com/2017/02/12/the-myers-diff-algorithm-part-1/
  * Invariants:
  * - new + same = newLines.length
- * - old + same = oldLines.length
+ * - old + same = oldLinesCopy.length
  * ^ (above two guarantee that all lines get represented)
  * - Lines are always output in order, at least among old and new separately
  */
 export async function* streamDiff(
   oldLines: string[],
   newLines: LineStream,
 ): AsyncGenerator<DiffLine> {
-  const mutatedOldLines = [...oldLines]; // be careful
+  const oldLinesCopy = [...oldLines];
 
   // If one indentation mistake is made, others are likely. So we are more permissive about matching
   let seenIndentationMistake = false;
 
   let newLineResult = await newLines.next();
-  while (oldLines.length > 0 && !newLineResult.done) {
-    const [matchIndex, isPerfectMatch, newLine] = matchLine(
+
+  while (oldLinesCopy.length > 0 && !newLineResult.done) {
+    const { matchIndex, isPerfectMatch, newLine } = matchLine(
       newLineResult.value,
-      oldLines,
+      oldLinesCopy,
       seenIndentationMistake,
     );
+
     if (!seenIndentationMistake && newLineResult.value !== newLine) {

----------------------------------------

File: core/diff/util.ts
Status: modified
Changes: +30 -8
Diff:
@@ -1,9 +1,19 @@
 import { distance } from "fastest-levenshtein";
 import { ChatMessage } from "../index.js";
-import { stripImages } from "../llm/countTokens.js";
+import { stripImages } from "../llm/images.js";
 
 export type LineStream = AsyncGenerator<string>;
 
+export type MatchLineResult = {
+  /**
+   * -1 if it's a new line, otherwise the index of the first match
+   * in the old lines.
+   */
+  matchIndex: number;
+  isPerfectMatch: boolean;
+  newLine: string;
+};
+
 function linesMatchPerfectly(lineA: string, lineB: string): boolean {
   return lineA === lineB && lineA !== "";
 }
@@ -18,6 +28,7 @@ function linesMatch(lineA: string, lineB: string, linesBetween = 0): boolean {
   }
 
   const d = distance(lineA, lineB);
+
   return (
     // Should be more unlikely for lines to fuzzy match if they are further away
     (d / Math.max(lineA.length, lineB.length) < 0.5 - linesBetween * 0.05 ||
@@ -27,42 +38,53 @@ function linesMatch(lineA: string, lineB: string, linesBetween = 0): boolean {

----------------------------------------

File: core/index.d.ts
Status: modified
Changes: +58 -9
Diff:
@@ -127,6 +127,7 @@ export interface ContextProviderDescription {
 export type FetchFunction = (url: string | URL, init?: any) => Promise<any>;
 
 export interface ContextProviderExtras {
+  config: ContinueConfig;
   fullInput: string;
   embeddingsProvider: EmbeddingsProvider;
   reranker: Reranker | undefined;
@@ -137,6 +138,7 @@ export interface ContextProviderExtras {
 }
 
 export interface LoadSubmenuItemsArgs {
+  config: ContinueConfig;
   ide: IDE;
   fetch: FetchFunction;
 }
@@ -160,21 +162,21 @@ export interface ContextSubmenuItem {
   id: string;
   title: string;
   description: string;
-  iconUrl?: string;
+  icon?: string;
   metadata?: any;
 }
 
 export interface SiteIndexingConfig {
-  startUrl: string;
-  rootUrl: string;
   title: string;
+  startUrl: string;
+  rootUrl?: string;
   maxDepth?: number;
   faviconUrl?: string;
 }
 
 export interface SiteIndexingConfig {
   startUrl: string;
-  rootUrl: string;
+  rootUrl?: string;
   title: string;
   maxDepth?: number;
 }
@@ -268,6 +270,7 @@ export interface ContextItem {
   description: string;
   editing?: boolean;
   editable?: boolean;
+  icon?: string;
 }
 
 export interface ContextItemWithId {
@@ -277,6 +280,7 @@ export interface ContextItemWithId {
   id: ContextItemId;
   editing?: boolean;
   editable?: boolean;
+  icon?: string;
 }
 
 export interface InputModifiers {
@@ -338,6 +342,15 @@ export interface LLMOptions {
   // GCP Options
   region?: string;
   projectId?: string;
+  capabilities?: ModelCapability;
+
+  // WatsonX options
+  watsonxUrl?: string;
+  watsonxApiKey?: string;
+  watsonxZenApiKeyBase64?: string; // Required if using watsonx software with ZenApiKey auth
+  watsonxUsername?: string;
+  watsonxPassword?: string;
+  watsonxProjectId?: string;
 }
 type RequireAtLeastOne<T, Keys extends keyof T = keyof T> = Pick<
   T,
@@ -374,8 +387,10 @@ export type CustomLLM = RequireAtLeastOne<

----------------------------------------

File: core/indexing/CodebaseIndexer.ts
Status: modified
Changes: +53 -4
Diff:
@@ -1,12 +1,12 @@
-import { IConfigHandler } from "../config/IConfigHandler.js";
+import { ConfigHandler } from "../config/ConfigHandler.js";
 import { IContinueServerClient } from "../continueServer/interface.js";
 import { IDE, IndexTag, IndexingProgressUpdate } from "../index.js";
 import { CodeSnippetsCodebaseIndex } from "./CodeSnippetsIndex.js";
 import { FullTextSearchCodebaseIndex } from "./FullTextSearch.js";
 import { LanceDbIndex } from "./LanceDbIndex.js";
 import { ChunkCodebaseIndex } from "./chunk/ChunkCodebaseIndex.js";
 import { getComputeDeleteAddRemove } from "./refreshIndex.js";
-import { CodebaseIndex } from "./types.js";
+import { CodebaseIndex, IndexResultType } from "./types.js";
 import { walkDir } from "./walkDir.js";
 
 export class PauseToken {
@@ -23,7 +23,7 @@ export class PauseToken {
 
 export class CodebaseIndexer {
   constructor(
-    private readonly configHandler: IConfigHandler,
+    private readonly configHandler: ConfigHandler,
     private readonly ide: IDE,
     private readonly pauseToken: PauseToken,
     private readonly continueServerClient: IContinueServerClient,
@@ -36,6 +36,7 @@ export class CodebaseIndexer {
       new ChunkCodebaseIndex(
         this.ide.readFile.bind(this.ide),
         this.continueServerClient,
+        config.embeddingsProvider.maxChunkSize,
       ), // Chunking must come first
       new LanceDbIndex(
         config.embeddingsProvider,
@@ -49,6 +50,40 @@ export class CodebaseIndexer {
     return indexes;
   }
 

----------------------------------------

File: core/indexing/LanceDbIndex.ts
Status: modified
Changes: +21 -13
Diff:
@@ -9,7 +9,6 @@ import {
   IndexTag,
   IndexingProgressUpdate,
 } from "../index.js";
-import { MAX_CHUNK_SIZE } from "../llm/constants.js";
 import { getBasename } from "../util/index.js";
 import { getLanceDbPath, migrate } from "../util/paths.js";
 import { chunkDocument } from "./chunk/chunk.js";
@@ -36,8 +35,6 @@ export class LanceDbIndex implements CodebaseIndex {
     return `vectordb::${this.embeddingsProvider.id}`;
   }
 
-  static MAX_CHUNK_SIZE = MAX_CHUNK_SIZE;
-
   constructor(
     private readonly embeddingsProvider: EmbeddingsProvider,
     private readonly readFile: (filepath: string) => Promise<string>,
@@ -64,10 +61,21 @@ export class LanceDbIndex implements CodebaseIndex {
       migrate(
         "lancedb_sqlite_artifact_id_column",

----------------------------------------

File: core/indexing/README.md
Status: modified
Changes: +1 -1
Diff:
@@ -18,7 +18,7 @@ The indexing process does the following:
 
 ## Existing `CodebaseIndex`es
 
-All indexes must be returned by `getIndexesToBuild` in [`indexCodebase.ts`](./indexCodebase.ts) if they are to be used.
+All indexes must be returned by `getIndexesToBuild` in [`CodebaseIndexer.ts`](./CodebaseIndexer.ts) if they are to be used.
 
 `CodeSnippetsCodebaseIndex`: uses tree-sitter queries to get a list of functions, classes, and other top-level code objects in each file
 `FullTextSearchCodebaseIndex`: creates a full-text search index using SQLite FTS5

----------------------------------------

File: core/indexing/chunk/ChunkCodebaseIndex.ts
Status: modified
Changes: +25 -18
Diff:
@@ -1,6 +1,5 @@
 import { IContinueServerClient } from "../../continueServer/interface.js";
 import { Chunk, IndexTag, IndexingProgressUpdate } from "../../index.js";
-import { MAX_CHUNK_SIZE } from "../../llm/constants.js";
 import { getBasename } from "../../util/index.js";
 import { DatabaseConnection, SqliteDb, tagToString } from "../refreshIndex.js";
 import {
@@ -19,6 +18,7 @@ export class ChunkCodebaseIndex implements CodebaseIndex {
   constructor(
     private readonly readFile: (filepath: string) => Promise<string>,
     private readonly continueServerClient: IContinueServerClient,
+    private readonly maxChunkSize: number,
   ) {
     this.readFile = readFile;
   }
@@ -105,13 +105,15 @@ export class ChunkCodebaseIndex implements CodebaseIndex {
       const item = results.compute[i];
 
       // Insert chunks
-      for await (const chunk of chunkDocument(
-        item.path,
-        contents[i],
-        MAX_CHUNK_SIZE,

----------------------------------------

File: core/indexing/chunk/basic.ts
Status: modified
Changes: +15 -9
Diff:
@@ -1,10 +1,10 @@
 import { ChunkWithoutID } from "../../index.js";
-import { countTokens } from "../../llm/countTokens.js";
+import { countTokensAsync } from "../../llm/countTokens.js";
 
-export function* basicChunker(
+export async function* basicChunker(
   contents: string,
   maxChunkSize: number,
-): Generator<ChunkWithoutID> {
+): AsyncGenerator<ChunkWithoutID> {
   if (contents.trim().length === 0) {
     return;
   }
@@ -14,18 +14,24 @@ export function* basicChunker(

----------------------------------------

File: core/indexing/chunk/chunk.ts
Status: modified
Changes: +35 -20
Diff:
@@ -1,10 +1,16 @@
 import { Chunk, ChunkWithoutID } from "../../index.js";
-import { MAX_CHUNK_SIZE } from "../../llm/constants.js";
-import { countTokens } from "../../llm/countTokens.js";
+import { countTokens, countTokensAsync } from "../../llm/countTokens.js";
 import { supportedLanguages } from "../../util/treeSitter.js";
 import { basicChunker } from "./basic.js";
 import { codeChunker } from "./code.js";
 
+export type ChunkDocumentParam = {
+  filepath: string;
+  contents: string;
+  maxChunkSize: number;
+  digest: string;
+};
+
 async function* chunkDocumentWithoutId(
   filepath: string,
   contents: string,
@@ -31,32 +37,41 @@ async function* chunkDocumentWithoutId(
   yield* basicChunker(contents, maxChunkSize);
 }
 
-export async function* chunkDocument(
-  filepath: string,
-  contents: string,

----------------------------------------

File: core/indexing/chunk/code.ts
Status: modified
Changes: +46 -24
Diff:
@@ -1,6 +1,6 @@
 import { SyntaxNode } from "web-tree-sitter";
 import { ChunkWithoutID } from "../../index.js";
-import { countTokens } from "../../llm/countTokens.js";
+import { countTokensAsync } from "../../llm/countTokens.js";
 import { getParserForFile } from "../../util/treeSitter.js";
 
 function collapsedReplacement(node: SyntaxNode): string {
@@ -22,14 +22,14 @@ function firstChild(
   return node.children.find((child) => child.type === grammarName) || null;
 }
 
-function collapseChildren(
+async function collapseChildren(
   node: SyntaxNode,
   code: string,
   blockTypes: string[],
   collapseTypes: string[],
   collapseBlockTypes: string[],
   maxChunkSize: number,
-): string {
+): Promise<string> {
   code = code.slice(0, node.endIndex);
   const block = firstChild(node, blockTypes);
   const collapsedChildren = [];
@@ -58,7 +58,7 @@ function collapseChildren(
   code = code.slice(node.startIndex);
   let removedChild = false;
   while (
-    countTokens(code.trim()) > maxChunkSize &&
+    (await countTokensAsync(code.trim())) > maxChunkSize &&
     collapsedChildren.length > 0
   ) {
     removedChild = true;
@@ -106,11 +106,11 @@ export const FUNCTION_DECLARATION_NODE_TYPEs = [
   "method_declaration",
 ];
 
-function constructClassDefinitionChunk(
+async function constructClassDefinitionChunk(
   node: SyntaxNode,
   code: string,
   maxChunkSize: number,
-): string {
+): Promise<string> {
   return collapseChildren(
     node,
     code,
@@ -121,11 +121,11 @@ function constructClassDefinitionChunk(

----------------------------------------

File: core/indexing/chunk/markdown.ts
Status: modified
Changes: +1 -1
Diff:
@@ -78,7 +78,7 @@ export async function* markdownChunker(
   if (hLevel > 4) {
     const header = findHeader(content.split("\n"));
 
-    for (const chunk of basicChunker(content, maxChunkSize)) {
+    for await (const chunk of basicChunker(content, maxChunkSize)) {
       yield {
         ...chunk,
         otherMetadata: {

----------------------------------------

File: core/indexing/docs/DocsService.ts
Status: modified
Changes: +687 -171
Diff:
@@ -1,22 +1,41 @@
 import { open, type Database } from "sqlite";
 import sqlite3 from "sqlite3";
+import lancedb, { Connection } from "vectordb";
+import { ConfigHandler } from "../../config/ConfigHandler.js";
+import DocsContextProvider from "../../context/providers/DocsContextProvider.js";
 import {
   Chunk,
+  ContinueConfig,
   EmbeddingsProvider,
+  IDE,
   IndexingProgressUpdate,
   SiteIndexingConfig,
 } from "../../index.js";
-import { getDocsSqlitePath, getLanceDbPath } from "../../util/paths.js";
-
+import { FromCoreProtocol, ToCoreProtocol } from "../../protocol/index.js";
+import { GlobalContext } from "../../util/GlobalContext.js";
+import { IMessenger } from "../../util/messenger.js";
+import {
+  editConfigJson,
+  getDocsSqlitePath,
+  getLanceDbPath,
+} from "../../util/paths.js";
+import { Telemetry } from "../../util/posthog.js";
+import TransformersJsEmbeddingsProvider from "../embeddings/TransformersJsEmbeddingsProvider.js";
 import { Article, chunkArticle, pageToArticle } from "./article.js";
 import { crawlPage } from "./crawl.js";
-import { downloadFromS3, SiteIndexingResults } from "./preIndexed.js";
-import { default as configs } from "./preIndexedDocs.js";
+import { runLanceMigrations, runSqliteMigrations } from "./migrations.js";
+import {
+  downloadFromS3,
+  getS3Filename,
+  S3Buckets,
+  SiteIndexingResults,
+} from "./preIndexed.js";
+import preIndexedDocs from "./preIndexedDocs.js";
 
 // Purposefully lowercase because lancedb converts
-interface LanceDbDocsRow {
+export interface LanceDbDocsRow {
   title: string;
-  baseurl: string;
+  starturl: string;
   // Chunk
   content: string;
   path: string;
@@ -26,188 +45,142 @@ interface LanceDbDocsRow {
   [key: string]: any;
 }
 
-export class DocsService {
-  private static instance: DocsService;
-  private static DOCS_TABLE_NAME = "docs";
-  private _sqliteTable: Database | undefined;
+export interface SqliteDocsRow {
+  title: string;
+  startUrl: string;
+  favicon: string;
+}
 
-  public static getInstance(): DocsService {
-    if (!DocsService.instance) {
-      DocsService.instance = new DocsService();
-    }
-    return DocsService.instance;
+export type AddParams = {
+  siteIndexingConfig: SiteIndexingConfig;
+  chunks: Chunk[];
+  embeddings: number[][];
+  favicon?: string;
+};
+
+export default class DocsService {
+  static lanceTableName = "docs";
+  static sqlitebTableName = "docs";
+  static preIndexedDocsEmbeddingsProvider =
+    new TransformersJsEmbeddingsProvider();
+
+  private static instance?: DocsService;
+  public isInitialized: Promise<void>;
+  public isSyncing: boolean = false;
+
+  private docsIndexingQueue = new Set<string>();
+  private globalContext = new GlobalContext();
+  private lanceTableNamesSet = new Set<string>();
+
+  private config!: ContinueConfig;
+  private sqliteDb?: Database;
+
+  // If we are instantiating a new DocsService from `getContextItems()`,
+  // we have access to the direct config object.
+  // When instantiating the DocsService from core, we have access
+  // to a ConfigHandler instance.
+  constructor(
+    configOrHandler: ConfigHandler,
+    private readonly ide: IDE,
+    private readonly messenger?: IMessenger<ToCoreProtocol, FromCoreProtocol>,
+  ) {
+    this.isInitialized = this.init(configOrHandler);
   }
 
-  private async getSqliteTable() {
-    if (!this._sqliteTable) {
-      this._sqliteTable = await open({
-        filename: getDocsSqlitePath(),
-        driver: sqlite3.Database,
-      });
-
-      this._sqliteTable.exec(`CREATE TABLE IF NOT EXISTS docs (
-          id INTEGER PRIMARY KEY AUTOINCREMENT,
-          title STRING NOT NULL,
-          baseUrl STRING NOT NULL UNIQUE
-      )`);
-    }
-
-    return this._sqliteTable;
+  static getSingleton() {
+    return DocsService.instance;
   }
 
-  private async getLanceDb() {
-    const lancedb = await import("vectordb");
-    const lance = await lancedb.connect(getLanceDbPath());
-    return lance;
+  static createSingleton(
+    configOrHandler: ConfigHandler,
+    ide: IDE,
+    messenger?: IMessenger<ToCoreProtocol, FromCoreProtocol>,
+  ) {
+    const docsService = new DocsService(configOrHandler, ide, messenger);
+    DocsService.instance = docsService;
+    return docsService;
   }
 
-  async retrieve(
-    baseUrl: string,
-    vector: number[],
-    nRetrieve: number,
-    embeddingsProviderId: string,
-    nested = false,
-  ): Promise<Chunk[]> {
-    const lance = await this.getLanceDb();
-    const db = await this.getSqliteTable();
-
-    const downloadDocs = async () => {
-      const config = configs.find((config) => config.startUrl === baseUrl);
-      if (config) {
-        await this.downloadPreIndexedDocs(embeddingsProviderId, config.title);
-        return await this.retrieve(
-          baseUrl,
-          vector,
-          nRetrieve,
-          embeddingsProviderId,
-          true,
-        );
-      }
-      return undefined;
-    };
-
-    const tableNames = await lance.tableNames();
-    if (!tableNames.includes(DocsService.DOCS_TABLE_NAME)) {
-      const downloaded = await downloadDocs();
-      if (downloaded) {
-        return downloaded;
-      }
-    }
-
-    const table = await lance.openTable(DocsService.DOCS_TABLE_NAME);
-    let docs: LanceDbDocsRow[] = await table
-      .search(vector)
-      .limit(nRetrieve)
-      .where(`baseurl = '${baseUrl}'`)
-      .execute();
+  async isJetBrainsAndPreIndexedDocsProvider(): Promise<boolean> {
+    const isJetBrains = await this.isJetBrains();
 
-    docs = docs.filter((doc) => doc.baseurl === baseUrl);
+    const isPreIndexedDocsProvider =
+      this.config.embeddingsProvider.id ===
+      DocsService.preIndexedDocsEmbeddingsProvider.id;
 
-    if ((!docs || docs.length === 0) && !nested) {
-      const downloaded = await downloadDocs();
-      if (downloaded) {
-        return downloaded;
-      }
-    }
+    return isJetBrains && isPreIndexedDocsProvider;
+  }
 
-    return docs.map((doc) => ({
-      digest: doc.path,
-      filepath: doc.path,
-      startLine: doc.startline,
-      endLine: doc.endline,
-      index: 0,
-      content: doc.content,
-      otherMetadata: {
-        title: doc.title,
-      },
-    }));
+  /*
+   * Currently, we generate and host embeddings for pre-indexed docs using transformers.js.
+   * However, we don't ship transformers.js with the JetBrains extension.
+   * So, we only include pre-indexed docs in the submenu for non-JetBrains IDEs.
+   */
+  async canUsePreindexedDocs() {
+    const isJetBrains = await this.isJetBrains();
+    return !isJetBrains;
   }
 
-  private async add(
-    title: string,
-    baseUrl: URL,
-    chunks: Chunk[],
-    embeddings: number[][],
-  ) {
-    const data: LanceDbDocsRow[] = chunks.map((chunk, i) => ({
-      title: chunk.otherMetadata?.title || title,
-      baseurl: baseUrl.toString(),
-      content: chunk.content,
-      path: chunk.filepath,
-      startline: chunk.startLine,
-      endline: chunk.endLine,
-      vector: embeddings[i],
-    }));
+  async delete(startUrl: string) {
+    await this.deleteFromLance(startUrl);
+    await this.deleteFromSqlite(startUrl);
+    this.deleteFromConfig(startUrl);
 
-    const lance = await this.getLanceDb();
-    const tableNames = await lance.tableNames();
-    if (!tableNames.includes(DocsService.DOCS_TABLE_NAME)) {
-      await lance.createTable(DocsService.DOCS_TABLE_NAME, data);
-    } else {
-      const table = await lance.openTable(DocsService.DOCS_TABLE_NAME);
-      await table.add(data);
+    if (this.messenger) {
+      this.messenger.send("refreshSubmenuItems", undefined);
     }
+  }
 
-    // Only after add it to SQLite
-    const db = await this.getSqliteTable();
-    await db.run(
-      "INSERT INTO docs (title, baseUrl) VALUES (?, ?)",
-      title,
-      baseUrl.toString(),
+  async has(startUrl: string): Promise<Promise<boolean>> {
+    const db = await this.getOrCreateSqliteDb();
+    const title = await db.get(
+      `SELECT title FROM ${DocsService.sqlitebTableName} WHERE startUrl = ?`,
+      startUrl,
     );
-  }
 
-  async list(): Promise<{ title: string; baseUrl: string }[]> {
-    const db = await this.getSqliteTable();
-    const docs = db.all("SELECT title, baseUrl FROM docs");
-    return docs;
+    return !!title;
   }
 
-  async delete(baseUrl: string) {
-    const db = await this.getSqliteTable();
-    await db.run("DELETE FROM docs WHERE baseUrl = ?", baseUrl);
-    const lance = await this.getLanceDb();
-    const tableNames = await lance.tableNames();
-    if (tableNames.includes(DocsService.DOCS_TABLE_NAME)) {
-      const table = await lance.openTable(DocsService.DOCS_TABLE_NAME);
-      await table.delete(`baseurl = '${baseUrl}'`);
+  async indexAllDocs(reIndex: boolean = false) {
+    if (!this.hasDocsContextProvider()) {
+      this.ide.infoPopup(
+        "No 'docs' provider configured under 'contextProviders' in config.json",
+      );
+      return;
     }
-  }
 
-  async has(baseUrl: string) {
-    const db = await this.getSqliteTable();
-    const doc = await db.get(
-      "SELECT title FROM docs WHERE baseUrl =?",
-      baseUrl,
-    );
-    return !!doc;
+    const docs = await this.list();
+
+    for (const doc of docs) {
+      const generator = this.indexAndAdd(doc, reIndex);
+      while (!(await generator.next()).done) {}
+    }
+
+    this.ide.infoPopup("Docs indexing completed");
   }
 
-  private async downloadPreIndexedDocs(
-    embeddingsProviderId: string,
-    title: string,
-  ) {
-    const data = await downloadFromS3(
-      "continue-indexed-docs",
-      `${embeddingsProviderId}/${title}`,
-      "us-west-1",
-    );
-    const results = JSON.parse(data) as SiteIndexingResults;
-    await this.add(
-      results.title,
-      new URL(results.url),
-      results.chunks,
-      results.chunks.map((c) => c.embedding),
+  async list() {
+    const db = await this.getOrCreateSqliteDb();
+    const docs = await db.all<SqliteDocsRow[]>(
+      `SELECT title, startUrl, favicon FROM ${DocsService.sqlitebTableName}`,
     );
+

----------------------------------------

File: core/indexing/docs/article.ts
Status: modified
Changes: +7 -4
Diff:
@@ -1,7 +1,6 @@
 import { Readability } from "@mozilla/readability";
 import { JSDOM } from "jsdom";
 import { Chunk } from "../../index.js";
-import { MAX_CHUNK_SIZE } from "../../llm/constants.js";
 import { cleanFragment, cleanHeader } from "../chunk/markdown.js";
 import { PageData } from "./crawl.js";
 
@@ -21,6 +20,7 @@ function breakdownArticleComponent(
   url: string,
   article: ArticleComponent,
   subpath: string,
+  max_chunk_size: number,
 ): Chunk[] {
   const chunks: Chunk[] = [];
 
@@ -32,7 +32,7 @@ function breakdownArticleComponent(

----------------------------------------

File: core/indexing/docs/crawl.ts
Status: modified
Changes: +9 -3
Diff:
@@ -16,7 +16,7 @@ const IGNORE_PATHS_ENDING_IN = [
   "changelog.html",
 ];
 
-const GITHUB_PATHS_TO_TRAVERSE = ["/blob/", "/tree/"];
+const markdownRegex = new RegExp(/\.(md|mdx)$/);
 
 async function getDefaultBranch(owner: string, repo: string): Promise<string> {
   const octokit = new Octokit({ auth: undefined });
@@ -53,7 +53,10 @@ async function crawlGithubRepo(baseUrl: URL) {
   );

----------------------------------------

File: core/indexing/docs/migrations.ts
Status: added
Changes: +70 -0
Diff:
@@ -0,0 +1,70 @@
+import { Table } from "vectordb";
+import { editConfigJson, migrate } from "../../util/paths.js";
+import { type Database } from "sqlite";
+import DocsService, { SqliteDocsRow } from "./DocsService.js";
+
+export async function runLanceMigrations(table: Table) {
+  await new Promise((resolve) =>
+    migrate(
+      "rename_baseurl_column_for_lance_docs",
+      async () => {
+        try {
+          const schema = await table.schema;
+
+          if (schema.fields.some((field: any) => field.name === "baseurl")) {
+            await table.alterColumns([{ path: "baseurl", rename: "starturl" }]);
+          }
+        } finally {
+          resolve(undefined);
+        }
+      },
+      () => resolve(undefined),
+    ),

----------------------------------------

File: core/indexing/docs/preIndexed.ts
Status: modified
Changes: +15 -4
Diff:
@@ -1,17 +1,28 @@
-import { Chunk } from "../../index.js";
+import { Chunk } from "../../";
+import request from "request";
 
-const request = require("request");
+export function getS3Filename(
+  embeddingsProviderId: string,
+  title: string,
+): string {
+  return `${embeddingsProviderId}/${title}`;

----------------------------------------

File: core/indexing/docs/preIndexedDocs.ts
Status: modified
Changes: +56 -52
Diff:
@@ -1,301 +1,305 @@
+/* eslint-disable @typescript-eslint/naming-convention */
 import { SiteIndexingConfig } from "../../index.js";
 
-const configs: SiteIndexingConfig[] = [
-  {
+const preIndexedDocs: Record<
+  SiteIndexingConfig["startUrl"],
+  SiteIndexingConfig
+> = {
+  "https://jinja.palletsprojects.com/en/3.1.x/": {
     title: "Jinja",
     startUrl: "https://jinja.palletsprojects.com/en/3.1.x/",
     rootUrl: "https://jinja.palletsprojects.com/en/3.1.x/",
     faviconUrl: "https://jinja.palletsprojects.com/favicon.ico",
   },
-  {
+  "https://react.dev/reference/": {
     title: "React",
     startUrl: "https://react.dev/reference/",
     rootUrl: "https://react.dev/reference/",
     faviconUrl: "https://react.dev/favicon.ico",
   },
-  {
+  "https://posthog.com/docs": {
     title: "PostHog",
     startUrl: "https://posthog.com/docs",
     rootUrl: "https://posthog.com/docs",
     faviconUrl: "https://posthog.com/favicon.ico",
   },
-  {
+  "https://expressjs.com/en/5x/api.html": {
     title: "Express",
     startUrl: "https://expressjs.com/en/5x/api.html",
     rootUrl: "https://expressjs.com/en/5x/",
     faviconUrl: "https://expressjs.com/favicon.ico",
   },
-  {
+  "https://platform.openai.com/docs/": {
     title: "OpenAI",
     startUrl: "https://platform.openai.com/docs/",
     rootUrl: "https://platform.openai.com/docs/",
     faviconUrl: "https://platform.openai.com/favicon.ico",
   },
-  {
+  "https://www.prisma.io/docs": {
     title: "Prisma",
     startUrl: "https://www.prisma.io/docs",
     rootUrl: "https://www.prisma.io/docs",
     faviconUrl: "https://www.prisma.io/favicon.ico",
   },
-  {
+  "https://boto3.amazonaws.com/v1/documentation/api/latest/index.html": {
     title: "Boto3",
     startUrl:
       "https://boto3.amazonaws.com/v1/documentation/api/latest/index.html",
     rootUrl: "https://boto3.amazonaws.com/v1/documentation/api/latest/",
     faviconUrl: "https://boto3.amazonaws.com/favicon.ico",
   },
-  {
+  "https://pytorch.org/docs/stable/": {
     title: "Pytorch",
     startUrl: "https://pytorch.org/docs/stable/",
     rootUrl: "https://pytorch.org/docs/stable/",
     faviconUrl: "https://pytorch.org/favicon.ico",
   },
-  {
+  "https://redis.io/docs/": {
     title: "Redis",
     startUrl: "https://redis.io/docs/",
     rootUrl: "https://redis.io/docs/",
     faviconUrl: "https://redis.io/favicon.ico",
   },
-  {
+  "https://axios-http.com/docs/intro": {
     title: "Axios",
     startUrl: "https://axios-http.com/docs/intro",
     rootUrl: "https://axios-http.com/docs",
     faviconUrl: "https://axios-http.com/favicon.ico",
   },
-  {
+  "https://redwoodjs.com/docs/introduction": {
     title: "Redwood JS",
     startUrl: "https://redwoodjs.com/docs/introduction",
     rootUrl: "https://redwoodjs.com/docs",
     faviconUrl: "https://redwoodjs.com/favicon.ico",
   },
-  {
+  "https://graphql.org/learn/": {
     title: "GraphQL",
     startUrl: "https://graphql.org/learn/",
     rootUrl: "https://graphql.org/learn/",
     faviconUrl: "https://graphql.org/favicon.ico",
   },
-  {
+  "https://www.typescriptlang.org/docs/": {
     title: "Typescript",
     startUrl: "https://www.typescriptlang.org/docs/",
     rootUrl: "https://www.typescriptlang.org/docs/",
     faviconUrl: "https://www.typescriptlang.org/favicon.ico",
   },
-  {
+  "https://jestjs.io/docs/getting-started": {
     title: "Jest",
     startUrl: "https://jestjs.io/docs/getting-started",
     rootUrl: "https://jestjs.io/docs",
     faviconUrl: "https://jestjs.io/favicon.ico",
   },
-  {
+  "https://tailwindcss.com/docs/installation": {
     title: "Tailwind CSS",
     startUrl: "https://tailwindcss.com/docs/installation",
     rootUrl: "https://tailwindcss.com/docs",
     faviconUrl: "https://tailwindcss.com/favicon.ico",
   },
-  {
+  "https://vuejs.org/guide/introduction.html": {
     title: "Vue.js",
     startUrl: "https://vuejs.org/guide/introduction.html",

----------------------------------------

File: core/indexing/embeddings/BaseEmbeddingsProvider.ts
Status: modified
Changes: +20 -1
Diff:
@@ -1,9 +1,12 @@
 import {
   EmbedOptions,
   EmbeddingsProvider,
+  EmbeddingsProviderName,
   FetchFunction,
 } from "../../index.js";
 
+import { MAX_CHUNK_SIZE } from "../../llm/constants.js";
+
 export interface IBaseEmbeddingsProvider extends EmbeddingsProvider {
   options: EmbedOptions;
   fetch: FetchFunction;
@@ -15,6 +18,11 @@ abstract class BaseEmbeddingsProvider implements IBaseEmbeddingsProvider {
   static maxBatchSize: IBaseEmbeddingsProvider["maxBatchSize"];
   static defaultOptions: IBaseEmbeddingsProvider["defaultOptions"];

----------------------------------------

File: core/indexing/embeddings/CohereEmbeddingsProvider.ts
Status: modified
Changes: +3 -1
Diff:
@@ -1,11 +1,13 @@
 import { Response } from "node-fetch";
-import { EmbedOptions } from "../../index.js";
+import { EmbeddingsProviderName, EmbedOptions } from "../../index.js";
 import { withExponentialBackoff } from "../../util/withExponentialBackoff.js";
 import BaseEmbeddingsProvider from "./BaseEmbeddingsProvider.js";
 
 class CohereEmbeddingsProvider extends BaseEmbeddingsProvider {
   static maxBatchSize = 96;
 

----------------------------------------

File: core/indexing/embeddings/ContinueProxyEmbeddingsProvider.ts
Status: added
Changes: +25 -0
Diff:
@@ -0,0 +1,25 @@
+import { CONTROL_PLANE_URL } from "../../control-plane/client.js";
+import { EmbeddingsProviderName, EmbedOptions } from "../../index.js";
+import OpenAIEmbeddingsProvider from "./OpenAIEmbeddingsProvider.js";
+
+class ContinueProxyEmbeddingsProvider extends OpenAIEmbeddingsProvider {
+  static providerName: EmbeddingsProviderName = "continue-proxy";
+  static defaultOptions: Partial<EmbedOptions> | undefined = {
+    apiBase: new URL("/model-proxy/v1", CONTROL_PLANE_URL).toString(),
+  };

----------------------------------------

File: core/indexing/embeddings/DeepInfraEmbeddingsProvider.ts
Status: modified
Changes: +2 -1
Diff:
@@ -1,8 +1,9 @@
-import { EmbedOptions } from "../../index.js";
+import { EmbeddingsProviderName, EmbedOptions } from "../../index.js";
 import { withExponentialBackoff } from "../../util/withExponentialBackoff.js";
 import BaseEmbeddingsProvider from "./BaseEmbeddingsProvider.js";
 
 class DeepInfraEmbeddingsProvider extends BaseEmbeddingsProvider {
+  static providerName: EmbeddingsProviderName = "deepinfra";
   static defaultOptions: Partial<EmbedOptions> | undefined = {
     model: "sentence-transformers/all-MiniLM-L6-v2",

----------------------------------------

File: core/indexing/embeddings/FreeTrialEmbeddingsProvider.ts
Status: modified
Changes: +6 -1
Diff:
@@ -1,11 +1,16 @@
 import { Response } from "node-fetch";
 import { getHeaders } from "../../continueServer/stubs/headers.js";
 import { constants } from "../../deploy/constants.js";
-import { EmbedOptions, FetchFunction } from "../../index.js";
+import {
+  EmbeddingsProviderName,
+  EmbedOptions,
+  FetchFunction,
+} from "../../index.js";

----------------------------------------

File: core/indexing/embeddings/GeminiEmbeddingsProvider.ts
Status: modified
Changes: +16 -19
Diff:
@@ -1,17 +1,13 @@
 import { Response } from "node-fetch";
+import { EmbeddingsProviderName } from "../../index.js";
 import { withExponentialBackoff } from "../../util/withExponentialBackoff.js";
-import BaseEmbeddingsProvider, {
-  IBaseEmbeddingsProvider,
-} from "./BaseEmbeddingsProvider.js";
-import {
-  EmbedContentRequest,
-  EmbedContentResponse,
-} from "@google/generative-ai";
+import BaseEmbeddingsProvider from "./BaseEmbeddingsProvider.js";
 
 /**
  * [View the Gemini Text Embedding docs.](https://ai.google.dev/gemini-api/docs/models/gemini#text-embedding-and-embedding)
  */
 class GeminiEmbeddingsProvider extends BaseEmbeddingsProvider {
+  static providerName: EmbeddingsProviderName = "gemini";
   static maxBatchSize = 2048;
 
   static defaultOptions = {
@@ -20,26 +16,26 @@ class GeminiEmbeddingsProvider extends BaseEmbeddingsProvider {
   };
 
   get urlPath(): string {
-    return `${this.options.model}:embedContent`;

----------------------------------------

File: core/indexing/embeddings/HuggingFaceTEIEmbeddingsProvider.ts
Status: modified
Changes: +20 -13
Diff:
@@ -1,10 +1,15 @@
-import fetch, { Response } from "node-fetch";
-import { EmbedOptions, FetchFunction } from "../..";
-import { withExponentialBackoff } from "../../util/withExponentialBackoff";
-import BaseEmbeddingsProvider from "./BaseEmbeddingsProvider";
+import { Response } from "node-fetch";
+import {
+  EmbeddingsProviderName,
+  EmbedOptions,
+  FetchFunction,
+} from "../../index.js";
+import { withExponentialBackoff } from "../../util/withExponentialBackoff.js";
+import BaseEmbeddingsProvider from "./BaseEmbeddingsProvider.js";
 
 class HuggingFaceTEIEmbeddingsProvider extends BaseEmbeddingsProvider {
-  private maxBatchSize = 32;
+  static providerName: EmbeddingsProviderName = "huggingface-tei";
+  maxBatchSize = 32;
 
   static defaultOptions: Partial<EmbedOptions> | undefined = {
     apiBase: "http://localhost:8080",
@@ -17,7 +22,7 @@ class HuggingFaceTEIEmbeddingsProvider extends BaseEmbeddingsProvider {
     if (!this.options.apiBase?.endsWith("/")) {
       this.options.apiBase += "/";
     }

----------------------------------------

File: core/indexing/embeddings/OllamaEmbeddingsProvider.ts
Status: modified
Changes: +16 -2
Diff:
@@ -1,4 +1,8 @@
-import { EmbedOptions, FetchFunction } from "../../index.js";
+import {
+  EmbeddingsProviderName,
+  EmbedOptions,
+  FetchFunction,
+} from "../../index.js";
 import { withExponentialBackoff } from "../../util/withExponentialBackoff.js";
 import BaseEmbeddingsProvider, {
   IBaseEmbeddingsProvider,
@@ -10,12 +14,21 @@ async function embedOne(
   customFetch: FetchFunction,
 ) {

----------------------------------------

File: core/indexing/embeddings/OpenAIEmbeddingsProvider.ts
Status: modified
Changes: +2 -1
Diff:
@@ -1,9 +1,10 @@
 import { Response } from "node-fetch";
-import { EmbedOptions } from "../../index.js";
+import { EmbeddingsProviderName, EmbedOptions } from "../../index.js";
 import { withExponentialBackoff } from "../../util/withExponentialBackoff.js";
 import BaseEmbeddingsProvider from "./BaseEmbeddingsProvider.js";
 
 class OpenAIEmbeddingsProvider extends BaseEmbeddingsProvider {
+  static providerName: EmbeddingsProviderName = "openai";
   // https://platform.openai.com/docs/api-reference/embeddings/create is 2048

----------------------------------------

File: core/indexing/embeddings/TransformersJsEmbeddingsProvider.ts
Status: modified
Changes: +12 -1
Diff:
@@ -1,4 +1,5 @@
 import path from "path";
+import { EmbeddingsProviderName } from "../../index.js";
 // @ts-ignore
 // prettier-ignore
 import { type PipelineType } from "../../vendor/modules/@xenova/transformers/src/transformers.js";
@@ -37,13 +38,23 @@ class EmbeddingsPipeline {
 }
 
 export class TransformersJsEmbeddingsProvider extends BaseEmbeddingsProvider {

----------------------------------------

File: core/indexing/embeddings/index.ts
Status: modified
Changes: +5 -1
Diff:
@@ -1,12 +1,14 @@
 import { EmbeddingsProviderName } from "../../index.js";
 import BaseEmbeddingsProvider from "./BaseEmbeddingsProvider.js";
 import CohereEmbeddingsProvider from "./CohereEmbeddingsProvider.js";
+import ContinueProxyEmbeddingsProvider from "./ContinueProxyEmbeddingsProvider.js";
+import DeepInfraEmbeddingsProvider from "./DeepInfraEmbeddingsProvider.js";
 import FreeTrialEmbeddingsProvider from "./FreeTrialEmbeddingsProvider.js";
+import GeminiEmbeddingsProvider from "./GeminiEmbeddingsProvider.js";
 import HuggingFaceTEIEmbeddingsProvider from "./HuggingFaceTEIEmbeddingsProvider.js";
 import OllamaEmbeddingsProvider from "./OllamaEmbeddingsProvider.js";

----------------------------------------

File: core/indexing/ignore.ts
Status: modified
Changes: +27 -23
Diff:
@@ -64,34 +64,38 @@ export const DEFAULT_IGNORE_FILETYPES = [
   ".gitkeep",
   ".continueignore",
   "config.json",
+  ".csv",
   // "*.prompt", // can be incredibly confusing for the LLM to have another set of instructions injected into the prompt
 ];
+
 export const defaultIgnoreFile = ignore().add(DEFAULT_IGNORE_FILETYPES);
 export const DEFAULT_IGNORE_DIRS = [
-  ".git",
-  ".vscode",
-  ".idea",
-  ".vs",
-  "venv",
-  ".venv",
-  "env",
-  ".env",
-  "node_modules",
-  "dist",

----------------------------------------

File: core/indexing/refreshIndex.ts
Status: modified
Changes: +125 -39
Diff:
@@ -44,6 +44,36 @@ export class SqliteDb {
             artifactId STRING NOT NULL
         )`,
     );
+    // Delete duplicate rows from tag_catalog
+    await db.exec(`
+    DELETE FROM tag_catalog
+    WHERE id NOT IN (
+      SELECT MIN(id)
+      FROM tag_catalog
+      GROUP BY dir, branch, artifactId, path, cacheKey
+    )
+  `);
+
+    // Delete duplicate rows from global_cache
+    await db.exec(`
+    DELETE FROM global_cache
+    WHERE id NOT IN (
+      SELECT MIN(id)
+      FROM global_cache
+      GROUP BY cacheKey, dir, branch, artifactId
+    )
+  `);
+
+    // Add unique constraints if they don't exist
+    await db.exec(
+      `CREATE UNIQUE INDEX IF NOT EXISTS idx_tag_catalog_unique 
+     ON tag_catalog(dir, branch, artifactId, path, cacheKey)`,
+    );
+
+    await db.exec(
+      `CREATE UNIQUE INDEX IF NOT EXISTS idx_global_cache_unique 
+     ON global_cache(cacheKey, dir, branch, artifactId)`,
+    );
   }
 
   private static indexSqlitePath = getIndexSqlitePath();
@@ -90,50 +120,66 @@ enum AddRemoveResultType {
   Remove = "remove",
   UpdateNewVersion = "updateNewVersion",
   UpdateOldVersion = "updateOldVersion",
+  UpdateLastUpdated = "updateLastUpdated",
+  Compute = "compute",
 }
 
 async function getAddRemoveForTag(
   tag: IndexTag,
   currentFiles: LastModifiedMap,
   readFile: (path: string) => Promise<string>,
-): Promise<[PathAndCacheKey[], PathAndCacheKey[], MarkCompleteCallback]> {
+): Promise<
+  [
+    PathAndCacheKey[],
+    PathAndCacheKey[],
+    PathAndCacheKey[],
+    MarkCompleteCallback,
+  ]
+> {
   const newLastUpdatedTimestamp = Date.now();
+  const files = { ...currentFiles };
 
   const saved = await getSavedItemsForTag(tag);
 
   const add: PathAndCacheKey[] = [];
   const updateNewVersion: PathAndCacheKey[] = [];
   const updateOldVersion: PathAndCacheKey[] = [];
   const remove: PathAndCacheKey[] = [];
+  const updateLastUpdated: PathAndCacheKey[] = [];
 
   for (const item of saved) {
     const { lastUpdated, ...pathAndCacheKey } = item;
 
-    if (currentFiles[item.path] === undefined) {
+    if (files[item.path] === undefined) {
       // Was indexed, but no longer exists. Remove
       remove.push(pathAndCacheKey);
     } else {
       // Exists in old and new, so determine whether it was updated
-      if (lastUpdated < currentFiles[item.path]) {
+      if (lastUpdated < files[item.path]) {
         // Change was made after last update
-        updateNewVersion.push({
-          path: pathAndCacheKey.path,
-          cacheKey: calculateHash(await readFile(pathAndCacheKey.path)),
-        });
-        updateOldVersion.push(pathAndCacheKey);
+        const newHash = calculateHash(await readFile(pathAndCacheKey.path));
+        if (pathAndCacheKey.cacheKey !== newHash) {
+          updateNewVersion.push({
+            path: pathAndCacheKey.path,
+            cacheKey: newHash,
+          });
+          updateOldVersion.push(pathAndCacheKey);
+        } else {

----------------------------------------

File: core/indexing/types.ts
Status: modified
Changes: +1 -0
Diff:
@@ -5,6 +5,7 @@ export enum IndexResultType {
   Delete = "del",
   AddTag = "addTag",
   RemoveTag = "removeTag",
+  UpdateLastUpdated = "updateLastUpdated"
 }
 
 export type MarkCompleteCallback = (

----------------------------------------

File: core/indexing/walkDir.ts
Status: modified
Changes: +132 -325
Diff:
@@ -1,333 +1,162 @@
-import { EventEmitter } from "events";
-import { Minimatch } from "minimatch";
+import ignore, { Ignore } from "ignore";
 import path from "node:path";
-import { FileType, IDE } from "..";
-import { DEFAULT_IGNORE_DIRS, DEFAULT_IGNORE_FILETYPES } from "./ignore";
+import { FileType, IDE } from "../index.d.js";
+import {
+  DEFAULT_IGNORE_DIRS,
+  DEFAULT_IGNORE_FILETYPES,
+  defaultIgnoreDir,
+  defaultIgnoreFile,
+} from "./ignore.js";
 
 export interface WalkerOptions {
-  isSymbolicLink?: boolean;
-  path?: string;
   ignoreFiles?: string[];
-  parent?: Walker | null;
-  includeEmpty?: boolean;
-  follow?: boolean;
-  exact?: boolean;
   onlyDirs?: boolean;
   returnRelativePaths?: boolean;
   additionalIgnoreRules?: string[];
 }
 
 type Entry = [string, FileType];
 
-class Walker extends EventEmitter {
-  isSymbolicLink: boolean;
-  path: string;
-  basename: string;
-  ignoreFiles: string[];
-  ignoreRules: { [key: string]: Minimatch[] };
-  parent: Walker | null;
-  includeEmpty: boolean;
-  root: string;
-  follow: boolean;
-  result: Set<string>;
-  entries: Entry[] | null;
-  sawError: boolean;
-  exact: boolean | undefined;
-  onlyDirs: boolean | undefined;
-  constructor(
-    opts: WalkerOptions = {},
-    protected readonly ide: IDE,
-  ) {
-    super(opts as any);
-    this.isSymbolicLink = opts.isSymbolicLink || false;
-    this.path = opts.path || process.cwd();
-    this.basename = path.basename(this.path);
-    this.ignoreFiles = [...(opts.ignoreFiles || [".ignore"]), ".defaultignore"];
-    this.ignoreRules = {};
-    this.parent = opts.parent || null;
-    this.includeEmpty = !!opts.includeEmpty;
-    this.root = this.parent ? this.parent.root : this.path;
-    this.follow = !!opts.follow;
-    this.result = this.parent ? this.parent.result : new Set();
-    this.entries = null;
-    this.sawError = false;
-    this.exact = opts.exact;
-    this.onlyDirs = opts.onlyDirs;
-
-    if (opts.additionalIgnoreRules) {
-      this.addIgnoreRules(opts.additionalIgnoreRules);
-    }
-  }
-
-  sort(a: string, b: string): number {
-    return a.localeCompare(b, "en");
-  }
+// helper struct used for the DFS walk
+type WalkableEntry = {
+  relPath: string;
+  absPath: string;
+  type: FileType;
+  entry: Entry;
+};
 
-  emit(ev: string, data: any): boolean {
-    let ret = false;
-    if (!(this.sawError && ev === "error")) {
-      if (ev === "error") {
-        this.sawError = true;
-      } else if (ev === "done" && !this.parent) {
-        data = (Array.from(data) as any)
-          .map((e: string) => (/^@/.test(e) ? `./${e}` : e))
-          .sort(this.sort);
-        this.result = new Set(data);
-      }
+// helper struct used for the DFS walk
+type WalkContext = {
+  walkableEntry: WalkableEntry;
+  ignore: Ignore;
+};
 
-      if (ev === "error" && this.parent) {
-        ret = this.parent.emit("error", data);
-      } else {
-        ret = super.emit(ev, data);
+class DFSWalker {
+  private readonly path: string;
+  private readonly ide: IDE;
+  private readonly options: WalkerOptions;
+  private readonly ignoreFileNames: Set<string>;
+
+  constructor(path: string, ide: IDE, options: WalkerOptions) {
+    this.path = path;
+    this.ide = ide;
+    this.options = options;
+    this.ignoreFileNames = new Set<string>(options.ignoreFiles);
+  }
+
+  // walk is a depth-first search implementation
+  public async *walk(): AsyncGenerator<string> {
+    const root: WalkContext = {
+      walkableEntry: {
+        relPath: "",
+        absPath: this.path,
+        type: 2 as FileType.Directory,
+        entry: ["", 2 as FileType.Directory],
+      },
+      ignore: ignore().add(defaultIgnoreDir).add(defaultIgnoreFile),
+    };
+    const stack = [root];
+    for (let cur = stack.pop(); cur; cur = stack.pop()) {
+      const walkableEntries = await this.listDirForWalking(cur.walkableEntry);
+      const ignore = await this.getIgnoreToApplyInDir(
+        cur.ignore,
+        walkableEntries,
+      );
+      for (const w of walkableEntries) {
+        if (!this.shouldInclude(w, ignore)) {
+          continue;
+        }
+        if (this.entryIsDirectory(w.entry)) {
+          stack.push({
+            walkableEntry: w,
+            ignore: ignore,
+          });
+          if (this.options.onlyDirs) {
+            // when onlyDirs is enabled the walker will only return directory names
+            yield w.relPath;
+          }
+        } else {
+          yield w.relPath;
+        }
       }
     }
-    return ret;
-  }
-
-  start(): this {
-    this.ide
-      .listDir(this.path)
-      .then((entries) => {
-        this.onReaddir(entries);
-      })
-      .catch((err) => {
-        this.emit("error", err);
-      });
-    return this;
   }
 
-  isIgnoreFile(e: Entry): boolean {
-    const p = e[0];
-    return p !== "." && p !== ".." && this.ignoreFiles.indexOf(p) !== -1;

----------------------------------------

File: core/jest.config.js
Status: modified
Changes: +4 -5
Diff:
@@ -1,15 +1,13 @@
 import path from "path";
 import { fileURLToPath } from "url";
 
-process.env.NODE_OPTIONS = "--experimental-vm-modules";
-
 export default {
   transform: {
-    "\\.[jt]sx?$": ["ts-jest", { useESM: true }],
+    "^.+\\.(ts|js)$": ["ts-jest", { useESM: true, useIsolatedModules: true }],

----------------------------------------

File: core/jest.global-setup.ts
Status: modified
Changes: +0 -1
Diff:
@@ -1,4 +1,3 @@
-// jest.global-setup.js
 import path from "path";
 
 export default async function () {

----------------------------------------

File: core/jest.setup-after-env.ts
Status: added
Changes: +16 -0
Diff:
@@ -0,0 +1,16 @@
+// https://github.com/mswjs/msw/issues/1576#issuecomment-1482643055
+import { TextEncoder, TextDecoder } from "util";
+import fetch, { Request, Response } from "node-fetch";
+import { jest } from "@jest/globals";
+
+if (process.env.DEBUG === "jest") {
+  jest.setTimeout(5 * 60 * 1000);
+}
+

----------------------------------------

File: core/llm/asyncEncoder.ts
Status: added
Changes: +47 -0
Diff:
@@ -0,0 +1,47 @@
+import llamaTokenizer from "./llamaTokenizer.js";
+import { Tiktoken, encodingForModel as _encodingForModel } from "js-tiktoken";
+import workerpool from "workerpool";
+import * as path from "path";
+
+export interface AsyncEncoder {
+  encode(text: string): Promise<number[]>;
+  decode(tokens: number[]): string;
+}
+
+export class LlamaAsyncEncoder implements AsyncEncoder {
+  private workerPool: workerpool.Pool;
+
+  constructor() {
+    this.workerPool = workerpool.pool(path.join(__dirname, "/llamaTokenizerWorkerPool.mjs"));

----------------------------------------

File: core/llm/autodetect.ts
Status: modified
Changes: +4 -1
Diff:
@@ -1,4 +1,4 @@
-import { ModelProvider, TemplateType } from "../index.js";
+import { ModelCapability, ModelProvider, TemplateType } from "../index.js";
 import {
   anthropicTemplateMessages,
   chatmlTemplateMessages,
@@ -61,6 +61,7 @@ const MODEL_SUPPORTS_IMAGES: string[] = [
   "llava",
   "gpt-4-turbo",
   "gpt-4o",

----------------------------------------

File: core/llm/constants.ts
Status: modified
Changes: +1 -0
Diff:
@@ -20,6 +20,7 @@ const CONTEXT_LENGTH_FOR_MODEL: { [name: string]: number } = {
   "gpt-4-32k": GPT_4_CTX_LEN,
   "gpt-4-turbo-preview": GPT_4_CTX_LEN,
   "gpt-4o": GPT_4_CTX_LEN,
+  "gpt-4o-mini": GPT_4_CTX_LEN,
   "gpt-4-vision": GPT_4_CTX_LEN,
   "gpt-4-0125-preview": GPT_4_CTX_LEN,
   "gpt-4-1106-preview": GPT_4_CTX_LEN,

----------------------------------------

File: core/llm/countTokens.ts
Status: modified
Changes: +38 -16
Diff:
@@ -1,29 +1,42 @@
 import { Tiktoken, encodingForModel as _encodingForModel } from "js-tiktoken";
 import { ChatMessage, MessageContent, MessagePart } from "../index.js";
+import {
+  AsyncEncoder,
+  GPTAsyncEncoder,
+  LlamaAsyncEncoder,
+} from "./asyncEncoder.js";
 import { autodetectTemplateType } from "./autodetect.js";
 import { TOKEN_BUFFER_FOR_SAFETY } from "./constants.js";
+import { stripImages } from "./images.js";
 import llamaTokenizer from "./llamaTokenizer.js";
-
 interface Encoding {
   encode: Tiktoken["encode"];
   decode: Tiktoken["decode"];
 }
 
 class LlamaEncoding implements Encoding {
-  encode(
-    text: string,
-    allowedSpecial?: string[] | "all" | undefined,
-    disallowedSpecial?: string[] | "all" | undefined,
-  ): number[] {
+  encode(text: string): number[] {
     return llamaTokenizer.encode(text);
   }
+
   decode(tokens: number[]): string {
     return llamaTokenizer.decode(tokens);
   }
 }
 

----------------------------------------

File: core/llm/images.ts
Status: added
Changes: +11 -0
Diff:
@@ -0,0 +1,11 @@
+import { MessageContent } from "../index.js";
+
+export function stripImages(content: MessageContent): string {
+    if (Array.isArray(content)) {
+      return content
+        .filter((part) => part.type === "text")
+        .map((part) => part.text)
+        .join("\n");
+    }

----------------------------------------

File: core/llm/index.ts
Status: modified
Changes: +38 -10
Diff:
@@ -1,3 +1,4 @@
+import { findLlmInfo } from "@continuedev/llm-info";
 import Handlebars from "handlebars";
 import {
   ChatMessage,
@@ -6,6 +7,7 @@ import {
   ILLM,
   LLMFullCompletionOptions,
   LLMOptions,
+  ModelCapability,
   ModelName,
   ModelProvider,
   PromptLog,
@@ -35,9 +37,9 @@ import {
   compileChatMessages,
   countTokens,
   pruneRawPromptFromTop,
-  stripImages,
 } from "./countTokens.js";
 import CompletionOptionsForModels from "./templates/options.js";
+import { stripImages } from "./images.js";
 
 export abstract class BaseLLM implements ILLM {
   static providerName: ModelProvider;
@@ -52,7 +54,7 @@ export abstract class BaseLLM implements ILLM {
   }
 
   supportsImages(): boolean {
-    return modelSupportsImages(this.providerName, this.model, this.title);
+    return modelSupportsImages(this.providerName, this.model, this.title, this.capabilities);
   }
 
   supportsCompletions(): boolean {
@@ -93,6 +95,7 @@ export abstract class BaseLLM implements ILLM {
   llmRequestHook?: (model: string, prompt: string) => any;
   apiKey?: string;
   apiBase?: string;
+  capabilities?: ModelCapability
 
   engine?: string;

----------------------------------------

File: core/llm/llamaTokenizer.mjs
Status: added
Changes: +486 -0

----------------------------------------

File: core/llm/llamaTokenizerWorkerPool.mjs
Status: added
Changes: +10 -0
Diff:
@@ -0,0 +1,10 @@
+import workerpool from "workerpool";
+import llamaTokenizer from "./llamaTokenizer.mjs";
+
+function encode(segment) {
+    return llamaTokenizer.encode(segment);
+}
+
+workerpool.worker({
+    encode,

----------------------------------------

File: core/llm/llms/Anthropic.ts
Status: modified
Changes: +1 -1
Diff:
@@ -4,7 +4,7 @@ import {
   LLMOptions,
   ModelProvider,
 } from "../../index.js";
-import { stripImages } from "../countTokens.js";
+import { stripImages } from "../images.js";
 import { BaseLLM } from "../index.js";
 import { streamSse } from "../stream.js";
 

----------------------------------------

File: core/llm/llms/Azure.ts
Status: added
Changes: +8 -0
Diff:
@@ -0,0 +1,8 @@
+import { ModelProvider } from "../../index.js";
+import OpenAI from "./OpenAI.js";
+
+class Azure extends OpenAI {
+  static providerName: ModelProvider = "azure";
+}
+
+export default Azure;

----------------------------------------

File: core/llm/llms/Bedrock.ts
Status: modified
Changes: +60 -139
Diff:
@@ -1,6 +1,6 @@
 import {
   BedrockRuntimeClient,
-  InvokeModelWithResponseStreamCommand,
+  ConverseStreamCommand,
 } from "@aws-sdk/client-bedrock-runtime";
 import { fromIni } from "@aws-sdk/credential-providers";
 import {
@@ -10,15 +10,15 @@ import {
   MessageContent,
   ModelProvider,
 } from "../../index.js";
-import { stripImages } from "../countTokens.js";
+import { stripImages } from "../images.js";
 import { BaseLLM } from "../index.js";
 
 class Bedrock extends BaseLLM {
   private static PROFILE_NAME: string = "bedrock";
   static providerName: ModelProvider = "bedrock";
   static defaultOptions: Partial<LLMOptions> = {
     region: "us-east-1",
-    model: "claude-3-sonnet-20240229",
+    model: "anthropic.claude-3-sonnet-20240229-v1:0",
     contextLength: 200_000,
   };
 
@@ -52,163 +52,84 @@ class Bedrock extends BaseLLM {
         sessionToken: credentials.sessionToken || "",
       },
     });
-    const toolkit = this._getToolkit(options.model);
-    const command = toolkit.generateCommand(messages, options);
+
+    const input = this._generateConverseInput(messages, options);
+    const command = new ConverseStreamCommand(input);
     const response = await client.send(command);
-    if (response.body) {
-      for await (const value of response.body) {
-        const text = toolkit.unwrapResponseChunk(value);
-        if (text) {
-          yield { role: "assistant", content: text };
+
+    if (response.stream) {
+      for await (const chunk of response.stream) {
+        if (chunk.contentBlockDelta?.delta?.text) {
+          yield {
+            role: "assistant",
+            content: chunk.contentBlockDelta.delta.text,
+          };
         }
       }
     }
   }
 
-  private async _getCredentials() {
-    try {
-      return await fromIni({
-        profile: Bedrock.PROFILE_NAME,
-      })();
-    } catch (e) {
-      console.warn(
-        `AWS profile with name ${Bedrock.PROFILE_NAME} not found in ~/.aws/credentials, using default profile`,
-      );
-      return await fromIni()();
-    }
-  }
-
-  private _getToolkit(model: string): BedrockModelToolkit {
-    if (model.includes("claude-3")) {
-      return new AnthropicClaude3Toolkit(this);
-    } else if (model.includes("llama")) {
-      return new Llama3Toolkit(this);
-    } else {
-      throw new Error(
-        `Model ${model} is currently not supported in Continue for Bedrock`,
-      );
-    }
-  }
-}
-
-interface BedrockModelToolkit {
-  generateCommand(

----------------------------------------

File: core/llm/llms/Cloudflare.ts
Status: modified
Changes: +1 -2
Diff:
@@ -1,6 +1,6 @@
 import { BaseLLM } from "../index.js";
 import { ChatMessage, CompletionOptions, ModelProvider } from "../../index.js";
-import { stripImages } from "../countTokens.js";
+import { stripImages } from "../images.js";
 import { streamSse } from "../stream.js";
 
 export default class Cloudflare extends BaseLLM {
@@ -38,7 +38,6 @@ export default class Cloudflare extends BaseLLM {
     });

----------------------------------------

File: core/llm/llms/Cohere.ts
Status: modified
Changes: +1 -1
Diff:
@@ -5,7 +5,7 @@ import {
   LLMOptions,
   ModelProvider,
 } from "../../index.js";
-import { stripImages } from "../countTokens.js";
+import { stripImages } from "../images.js";
 import { streamJSON } from "../stream.js";
 
 class Cohere extends BaseLLM {

----------------------------------------

File: core/llm/llms/Deepseek.ts
Status: modified
Changes: +37 -1
Diff:
@@ -1,4 +1,5 @@
-import { LLMOptions, ModelProvider } from "../../index.js";
+import { CompletionOptions, LLMOptions, ModelProvider } from "../../index.js";
+import { streamSse } from "../stream.js";
 import { osModelsEditPrompt } from "../templates/edit.js";
 import OpenAI from "./OpenAI.js";
 
@@ -13,6 +14,41 @@ class Deepseek extends OpenAI {
     useLegacyCompletionsEndpoint: false,
   };
   protected maxStopWords: number | undefined = 16;
+
+  supportsFim(): boolean {
+    return true;
+  }
+

----------------------------------------

File: core/llm/llms/Flowise.ts
Status: modified
Changes: +1 -1
Diff:
@@ -5,7 +5,7 @@ import {
   LLMOptions,
   ModelProvider,
 } from "../../index.js";
-import { stripImages } from "../countTokens.js";
+import { stripImages } from "../images.js";
 import { BaseLLM } from "../index.js";
 
 interface IFlowiseApiOptions {

----------------------------------------

File: core/llm/llms/FreeTrial.ts
Status: modified
Changes: +2 -1
Diff:
@@ -165,7 +165,8 @@ class FreeTrial extends BaseLLM {
     return [
       "codestral-latest",
       "claude-3-5-sonnet-20240620",
-      "llama3-70b",
+      "llama3.1-405b",
+      "llama3.1-70b",
       "gpt-4o",
       "gpt-3.5-turbo",
       "claude-3-haiku-20240307",

----------------------------------------

File: core/llm/llms/Gemini.ts
Status: modified
Changes: +2 -2
Diff:
@@ -5,7 +5,7 @@ import {
   MessagePart,
   ModelProvider,
 } from "../../index.js";
-import { stripImages } from "../countTokens.js";
+import { stripImages } from "../images.js";
 import { BaseLLM } from "../index.js";
 import { streamResponse } from "../stream.js";
 
@@ -202,7 +202,7 @@ class Gemini extends BaseLLM {

----------------------------------------

File: core/llm/llms/Groq.ts
Status: modified
Changes: +3 -0
Diff:
@@ -14,6 +14,9 @@ class Groq extends OpenAI {
     gemma: "gemma-7b-it",
     "llama3-8b": "llama3-8b-8192",
     "llama3-70b": "llama3-70b-8192",
+    "llama3.1-8b": "llama-3.1-8b-instant",
+    "llama3.1-70b": "llama-3.1-70b-versatile",
+    "llama3.1-405b": "llama-3.1-405b-reasoning",
   };
   protected _convertModelName(model: string): string {
     return Groq.modelConversion[model] ?? model;

----------------------------------------

File: core/llm/llms/HuggingFaceInferenceAPI.ts
Status: modified
Changes: +1 -2
Diff:
@@ -1,4 +1,3 @@
-import { stopAtStopTokens } from "../../autocomplete/charStream.js";
 import { CompletionOptions, ModelProvider } from "../../index.js";
 import { BaseLLM } from "../index.js";
 import { streamSse } from "../stream.js";
@@ -50,7 +49,7 @@ class HuggingFaceInferenceAPI extends BaseLLM {
       }
     }
 
-    for await (const text of stopAtStopTokens(stream(), options.stop ?? [])) {

----------------------------------------

File: core/llm/llms/Mistral.ts
Status: modified
Changes: +6 -3
Diff:
@@ -14,8 +14,11 @@ class Mistral extends OpenAI {
 
   constructor(options: LLMOptions) {
     super(options);
-    if (options.model.includes("codestral")) {
-      this.apiBase = "https://codestral.mistral.ai/v1/";
+    if (
+      options.model.includes("codestral") &&
+      !options.model.includes("mamba")
+    ) {

----------------------------------------

File: core/llm/llms/Msty.ts
Status: modified
Changes: +2 -2
Diff:
@@ -1,5 +1,5 @@
-import Ollama from "./Ollama";
-import {LLMOptions, ModelProvider} from "../../index";
+import { LLMOptions, ModelProvider } from "../../index.js";
+import Ollama from "./Ollama.js";
 
 class Msty extends Ollama {
   static providerName: ModelProvider = "msty";

----------------------------------------

File: core/llm/llms/Ollama.ts
Status: modified
Changes: +8 -1
Diff:
@@ -4,7 +4,7 @@ import {
   LLMOptions,
   ModelProvider,
 } from "../../index.js";
-import { stripImages } from "../countTokens.js";
+import { stripImages } from "../images.js";
 import { BaseLLM } from "../index.js";
 import { streamResponse } from "../stream.js";
 
@@ -88,6 +88,9 @@ class Ollama extends BaseLLM {

----------------------------------------

File: core/llm/llms/OpenAI.ts
Status: modified
Changes: +2 -1
Diff:
@@ -4,7 +4,7 @@ import {
   LLMOptions,
   ModelProvider,
 } from "../../index.js";
-import { stripImages } from "../countTokens.js";
+import { stripImages } from "../images.js";
 import { BaseLLM } from "../index.js";
 import { streamSse } from "../stream.js";
 
@@ -36,6 +36,7 @@ const CHAT_ONLY_MODELS = [

----------------------------------------

File: core/llm/llms/Replicate.ts
Status: modified
Changes: +3 -0
Diff:
@@ -18,6 +18,9 @@ class Replicate extends BaseLLM {
     "llama2-13b": "meta/llama-2-13b-chat" as any,
     "llama3-8b": "meta/meta-llama-3-8b-instruct" as any,
     "llama3-70b": "meta/meta-llama-3-70b-instruct" as any,
+    "llama3.1-8b": "meta/meta-llama-3.1-8b-instruct" as any,
+    "llama3.1-70b": "meta/meta-llama-3.1-70b-instruct" as any,
+    "llama3.1-405b": "meta/meta-llama-3.1-405b-instruct" as any,
     "zephyr-7b":
       "nateraw/zephyr-7b-beta:b79f33de5c6c4e34087d44eaea4a9d98ce5d3f3a09522f7328eea0685003a931",
     "mistral-7b":

----------------------------------------

File: core/llm/llms/Together.ts
Status: modified
Changes: +3 -0
Diff:
@@ -19,6 +19,9 @@ class Together extends OpenAI {
     "codellama-70b": "codellama/CodeLlama-70b-Instruct-hf",
     "llama3-8b": "meta-llama/Llama-3-8b-chat-hf",
     "llama3-70b": "meta-llama/Llama-3-70b-chat-hf",
+    "llama3.1-8b": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
+    "llama3.1-70b": "meta-llama/Meta-Llama-3.1-70B-Instruct-Turbo",
+    "llama3.1-405b": "meta-llama/Meta-Llama-3.1-405B-Instruct-Turbo",
     "llama2-7b": "togethercomputer/llama-2-7b-chat",
     "llama2-13b": "togethercomputer/llama-2-13b-chat",
     "llama2-70b": "togethercomputer/llama-2-70b-chat",

----------------------------------------

File: core/llm/llms/WatsonX.ts
Status: added
Changes: +249 -0
Diff:
@@ -0,0 +1,249 @@
+import {
+  ChatMessage,
+  CompletionOptions,
+  LLMOptions,
+  ModelProvider,
+} from "../../index.js";
+import { stripImages } from "../images.js";
+import { BaseLLM } from "../index.js";
+const watsonxConfig = {
+  accessToken: {
+    expiration: 0,
+    token: "",
+  },
+};
+class WatsonX extends BaseLLM {
+  protected maxStopWords: number | undefined = undefined;
+
+  constructor(options: LLMOptions) {
+    super(options);
+  }
+  async getBearerToken(): Promise<{ token: string; expiration: number }> {
+    if (this.watsonxUrl != null && this.watsonxUrl.includes("cloud.ibm.com")) {
+      // watsonx SaaS
+      const wxToken = await (
+        await fetch(
+          `https://iam.cloud.ibm.com/identity/token?apikey=${this.watsonxApiKey}&grant_type=urn:ibm:params:oauth:grant-type:apikey`,
+          {
+            method: "POST",
+            headers: {
+              "Content-Type": "application/x-www-form-urlencoded",
+              Accept: "application/json",
+            },
+          },
+        )
+      ).json();
+      return {
+        token: wxToken["access_token"],
+        expiration: wxToken["expiration"],
+      };
+    } else {
+      // watsonx Software
+      if (
+        this.watsonxZenApiKeyBase64 &&
+        this.watsonxZenApiKeyBase64 !== "YOUR_WATSONX_ZENAPIKEY"
+      ) {
+        // Using ZenApiKey auth
+        return {
+          token: this.watsonxZenApiKeyBase64,
+          expiration: -1,
+        };
+      } else {
+        // Using username/password auth
+
+        const wxToken = await (
+          await fetch(`${this.watsonxUrl}/icp4d-api/v1/authorize`, {
+            method: "POST",
+            headers: {
+              "Content-Type": "application/json",
+              Accept: "application/json",
+            },
+            body: JSON.stringify({
+              username: this.watsonxUsername,
+              password: this.watsonxPassword,
+            }),
+          })
+        ).json();
+        const wxTokenExpiry = await (
+          await fetch(`${this.watsonxUrl}/usermgmt/v1/user/tokenExpiry`, {
+            method: "GET",
+            headers: {
+              Accept: "application/json",
+              Authorization: `Bearer ${wxToken["token"]}`,
+            },
+          })
+        ).json();
+        return {
+          token: wxToken["token"],
+          expiration: wxTokenExpiry["exp"],
+        };
+      }
+    }
+  }

----------------------------------------

File: core/llm/llms/index.ts
Status: modified
Changes: +4 -0
Diff:
@@ -10,6 +10,7 @@ import {
 import { DEFAULT_MAX_TOKENS } from "../constants.js";
 import { BaseLLM } from "../index.js";
 import Anthropic from "./Anthropic.js";
+import Azure from "./Azure.js";
 import Bedrock from "./Bedrock.js";
 import Cloudflare from "./Cloudflare.js";
 import Cohere from "./Cohere.js";
@@ -32,6 +33,7 @@ import OpenAI from "./OpenAI.js";
 import Replicate from "./Replicate.js";

----------------------------------------

File: core/llm/llms/stubs/ContinueProxy.ts
Status: modified
Changes: +20 -2
Diff:
@@ -1,12 +1,30 @@
-import type { LLMOptions, ModelProvider } from "../../..";
+import { CONTROL_PLANE_URL } from "../../../control-plane/client.js";
+import type { LLMOptions, ModelProvider } from "../../../index.js";
 import OpenAI from "../OpenAI.js";
 
 class ContinueProxy extends OpenAI {
+  private _workOsAccessToken: string | undefined = undefined;
+
+  get workOsAccessToken(): string | undefined {
+    return this._workOsAccessToken;

----------------------------------------

File: core/llm/templates/chat.ts
Status: modified
Changes: +1 -1
Diff:
@@ -1,5 +1,5 @@
 import { ChatMessage } from "../../index.js";
-import { stripImages } from "../countTokens.js";
+import { stripImages } from "../images.js";
 
 function templateFactory(
   systemMessage: (msg: ChatMessage) => string,

----------------------------------------

File: core/llm/templates/edit.ts
Status: modified
Changes: +2 -2
Diff:
@@ -95,7 +95,7 @@ ${otherData.codeToEdit}
 ${suffixTag}
 \`\`\`
 
-Please rewrite the entire code block above in order to satisfy the following request: "${otherData.userInput}".${suffixExplanation}`,
+Please rewrite the entire code block above in order to satisfy the following request: "${otherData.userInput}". You should rewrite the entire code block without leaving placeholders, even if the code is the same as before.${suffixExplanation}`,
       },
       {
         role: "assistant",
@@ -115,7 +115,7 @@ ${otherData.codeToEdit}

----------------------------------------

File: core/package-lock.json
Status: modified
Changes: +2362 -3390

----------------------------------------

File: core/package.json
Status: modified
Changes: +20 -9
Diff:
@@ -1,15 +1,15 @@
 {
   "name": "@continuedev/core",
   "version": "1.0.13",
-  "description": "The Continue Core contains functionality that can be shared across web, VS Code, or Node.js server. It is written in TypeScript and contains much of the functionality that was previously inside of the legacy Continue Python Server.",
+  "description": "The Continue Core contains functionality that can be shared across web, VS Code, or Node.js",
   "scripts": {
-    "test": "jest",
+    "test": "cross-env NODE_OPTIONS=--experimental-vm-modules jest",
     "build:npm": "tsc -p ./tsconfig.npm.json",
     "lint": "eslint . --ext ts",
     "lint:fix": "eslint . --ext ts --fix"
   },
   "type": "module",
-  "author": "Nate Sesti and Ty Dunn",
+  "author": "Continue Dev, Inc",
   "license": "Apache-2.0",
   "devDependencies": {
     "@babel/preset-env": "^7.24.7",
@@ -18,24 +18,32 @@
     "@types/follow-redirects": "^1.14.4",
     "@types/jest": "^29.5.12",
     "@types/jquery": "^3.5.29",
+    "@types/jsdom": "^21.1.6",
+    "@types/mozilla-readability": "^0.2.1",

----------------------------------------

File: core/protocol/core.ts
Status: modified
Changes: +15 -4
Diff:
@@ -1,3 +1,6 @@
+/* eslint-disable @typescript-eslint/naming-convention */
+import type { AutocompleteInput } from "../autocomplete/completionProvider.js";
+import { ProfileDescription } from "../config/ConfigHandler.js";
 import type {
   BrowserSerializedContinueConfig,
   ChatMessage,
@@ -13,8 +16,7 @@ import type {
   SerializedContinueConfig,
   SessionInfo,
   SiteIndexingConfig,
-} from "..";
-import type { AutocompleteInput } from "../autocomplete/completionProvider";
+} from "../index.js";
 
 export type ProtocolGeneratorType<T> = AsyncGenerator<{
   done?: boolean;

----------------------------------------

File: core/protocol/coreWebview.ts
Status: modified
Changes: +7 -2
Diff:
@@ -1,5 +1,10 @@
+import { ProfileDescription } from "../config/ConfigHandler.js";
 import { ToCoreFromIdeOrWebviewProtocol } from "./core.js";
 import { ToWebviewFromIdeOrCoreProtocol } from "./webview.js";
 
-export type ToCoreFromWebviewProtocol = ToCoreFromIdeOrWebviewProtocol;
-export type ToWebviewFromCoreProtocol = ToWebviewFromIdeOrCoreProtocol;
+export type ToCoreFromWebviewProtocol = ToCoreFromIdeOrWebviewProtocol & {
+  didChangeSelectedProfile: [{ id: string }, void];
+};

----------------------------------------

File: core/protocol/ide.ts
Status: modified
Changes: +15 -1
Diff:
@@ -1,3 +1,4 @@
+import { ControlPlaneSessionInfo } from "../control-plane/client.js";
 import type {
   ContinueRcJson,
   DiffLine,
@@ -10,7 +11,7 @@ import type {
   Range,
   RangeInFile,
   Thread,
-} from "..";
+} from "../index.js";

----------------------------------------

File: core/protocol/ideWebview.ts
Status: modified
Changes: +2 -2
Diff:
@@ -1,5 +1,5 @@
-import type { ContextSubmenuItem } from "..";
-import type { RangeInFileWithContents } from "../commands/util";
+import type { RangeInFileWithContents } from "../commands/util.js";
+import type { ContextSubmenuItem } from "../index.js";
 import { ToIdeFromWebviewOrCoreProtocol } from "./ide.js";
 import { ToWebviewFromIdeOrCoreProtocol } from "./webview.js";
 

----------------------------------------

File: core/protocol/index.ts
Status: modified
Changes: +8 -5
Diff:
@@ -2,6 +2,7 @@ import {
   ToCoreFromWebviewProtocol,
   ToWebviewFromCoreProtocol,
 } from "./coreWebview.js";
+import { ToWebviewOrCoreFromIdeProtocol } from "./ide.js";
 import { ToCoreFromIdeProtocol, ToIdeFromCoreProtocol } from "./ideCore.js";
 import {
   ToIdeFromWebviewProtocol,
@@ -13,17 +14,19 @@ export type IProtocol = Record<string, [any, any]>;
 // IDE
 export type ToIdeProtocol = ToIdeFromWebviewProtocol & ToIdeFromCoreProtocol;

----------------------------------------

File: core/protocol/passThrough.ts
Status: modified
Changes: +7 -1
Diff:
@@ -18,13 +18,14 @@ export const WEBVIEW_TO_CORE_PASS_THROUGH: (keyof ToCoreFromWebviewProtocol)[] =
     "config/addModel",
     "config/newPromptFile",
     "config/ideSettingsUpdate",
-    "config/getBrowserSerialized",
+    "config/getSerializedProfileInfo",
     "config/deleteModel",
     "config/reload",
     "context/getContextItems",
     "context/loadSubmenuItems",
     "context/addDocs",

----------------------------------------

File: core/protocol/webview.ts
Status: modified
Changes: +2 -1
Diff:
@@ -1,10 +1,11 @@
-import type { ContextItemWithId, IndexingProgressUpdate } from "..";
+import type { ContextItemWithId, IndexingProgressUpdate } from "../index.js";
 
 export type ToWebviewFromIdeOrCoreProtocol = {
   configUpdate: [undefined, void];
   getDefaultModelTitle: [undefined, string];
   indexProgress: [IndexingProgressUpdate, void];
   refreshSubmenuItems: [undefined, void];
+  isContinueInputFocused: [undefined, boolean];

----------------------------------------

File: core/test/baseLLM.test.ts
Status: modified
Changes: +1 -1
Diff:
@@ -1,4 +1,4 @@
-import { ChatMessage, LLMOptions, ModelProvider } from "../index";
+import { ChatMessage, LLMOptions, ModelProvider } from "../index.js";
 import { BaseLLM } from "../llm/index.js";
 
 class DummyLLM extends BaseLLM {

----------------------------------------

File: core/test/context/retrieval/RetrievalPipeline.test.ts
Status: modified
Changes: +1 -2
Diff:
@@ -1,10 +1,9 @@
-import { IRetrievalPipeline } from "../../../context/retrieval/pipelines/BaseRetrievalPipeline";
+import { IRetrievalPipeline } from "../../../context/retrieval/pipelines/BaseRetrievalPipeline.js";
 
 function testRetrievalPipeline(pipeline: IRetrievalPipeline) {
   test("should successfully run");
 }
 
-
 describe.skip("RetrievalPipeline", () => {

----------------------------------------

File: core/test/diff.test.ts
Status: removed
Changes: +0 -150
Diff:
@@ -1,150 +0,0 @@
-import { streamDiff } from "../diff/streamDiff.js";
-
-const oldCode = [
-  `A
-B`,
-  `A
-B
-C`,
-  `A
-B
-C
-A
-B
-B
-A`,
-  `function mergeSortAlgorithm() {
-    // TODO: implement
-}`,
-  `function mergeSortAlgorithm() {
-    // TODO: implement
-}`,
-];
-
-const newCode = [
-  `C
-D`,
-  `D
-E
-C
-F
-C`,
-  `C
-B
-A
-B
-A
-C`,
-  `function mergeSortAlgorithm(arr: number[]): number[] {
-  if (arr.length <= 1) {
-    return arr;
-  }
-
-  const middle = Math.floor(arr.length / 2);
-  const left = arr.slice(0, middle);
-  const right = arr.slice(middle);
-
-  return merge(mergeSortAlgorithm(left), mergeSortAlgorithm(right));
-}
-

----------------------------------------

File: core/test/indexing/CodebaseIndexer.skip.ts
Status: modified
Changes: +12 -8
Diff:
@@ -1,22 +1,25 @@
 import fs from "node:fs";
 import path from "node:path";
-import { ConfigHandler } from "../../config/ConfigHandler";
-import { ContinueServerClient } from "../../continueServer/stubs/client";
-import { CodebaseIndexer, PauseToken } from "../../indexing/CodebaseIndexer";
-import { LanceDbIndex } from "../../indexing/LanceDbIndex";
-import TransformersJsEmbeddingsProvider from "../../indexing/embeddings/TransformersJsEmbeddingsProvider";
-import FileSystemIde from "../../util/filesystem";
+import { ConfigHandler } from "../../config/ConfigHandler.js";
+import { ContinueServerClient } from "../../continueServer/stubs/client.js";
+import { CodebaseIndexer, PauseToken } from "../../indexing/CodebaseIndexer.js";
+import { LanceDbIndex } from "../../indexing/LanceDbIndex.js";
+import TransformersJsEmbeddingsProvider from "../../indexing/embeddings/TransformersJsEmbeddingsProvider.js";

----------------------------------------

File: core/test/indexing/DocsService.skip.ts
Status: added
Changes: +183 -0
Diff:
@@ -0,0 +1,183 @@
+/**
+ * @jest-environment jsdom
+ */
+import * as fs from "fs";
+import * as path from "path";
+import { ConfigHandler } from "../../config/ConfigHandler.js";
+import { ControlPlaneClient } from "../../control-plane/client.js";
+import { SiteIndexingConfig } from "../../index.js";
+import DocsService from "../../indexing/docs/DocsService.js";
+import preIndexedDocs from "../../indexing/docs/preIndexedDocs.js";
+import FreeTrialEmbeddingsProvider from "../../indexing/embeddings/FreeTrialEmbeddingsProvider.js";
+import FileSystemIde from "../../util/filesystem.js";
+import { editConfigJson, getConfigJsonPath } from "../../util/paths.js";
+
+describe.skip("DocsService Integration Tests", () => {
+  let ide: FileSystemIde;
+  let configHandler: ConfigHandler;
+  let docsService: DocsService;
+
+  const mockSiteConfig: SiteIndexingConfig = {
+    startUrl: "https://amplified.dev/",
+    title: "Test repo",
+    faviconUrl: "https://github.com/favicon.ico",
+  };
+
+  async function clearConfigDir() {
+    const configFolder = path.dirname(getConfigJsonPath());
+    if (fs.existsSync(configFolder)) {
+      fs.rmSync(configFolder, { recursive: true, force: true });
+    }
+  }
+
+  /**
+   * We need to reload config explicitly to handle the scenario where the
+   * config file update listeners are not called before we attempt to
+   * use the new config
+   */
+  async function getReloadedConfig() {
+    await configHandler.reloadConfig();
+    const latestConfig = await configHandler.loadConfig();
+
+    return latestConfig;
+  }
+
+  beforeEach(async () => {
+    await clearConfigDir();
+
+    ide = new FileSystemIde(process.cwd());
+
+    configHandler = new ConfigHandler(
+      ide,
+      Promise.resolve({
+        remoteConfigSyncPeriod: 60,
+        userToken: "",
+        enableControlServerBeta: false,
+        pauseCodebaseIndexOnStart: false,
+        ideSettings: {} as any,
+        enableDebugLogs: false,
+        remoteConfigServerUrl: "",
+      }),

----------------------------------------

File: core/test/indexing/chunk/code.test.ts
Status: modified
Changes: +3 -3
Diff:
@@ -1,5 +1,5 @@
-import { ChunkWithoutID } from "../../..";
-import { codeChunker } from "../../../indexing/chunk/code";
+import { ChunkWithoutID } from "../../../index.js";
+import { codeChunker } from "../../../indexing/chunk/code.js";
 
 async function genToArr<T>(generator: AsyncGenerator<T>): Promise<T[]> {
   const result: T[] = [];
@@ -15,7 +15,7 @@ async function genToStrs(
   return (await genToArr(generator)).map((chunk) => chunk.content);

----------------------------------------

File: core/test/indexing/crawl.skip.ts
Status: added
Changes: +51 -0
Diff:
@@ -0,0 +1,51 @@
+import { crawlPage, PageData } from "../../indexing/docs/crawl";
+
+describe("crawlPage - GitHub repository", () => {
+  const repoUrl = new URL(
+    "https://github.com/Patrick-Erichsen/test-github-repo-for-crawling",
+  );
+  const maxDepth = 3;
+  let crawlResults: PageData[];
+
+  beforeAll(async () => {
+    crawlResults = [];
+    for await (const page of crawlPage(repoUrl, maxDepth)) {
+      crawlResults.push(page);
+    }
+  }, 30000);
+

----------------------------------------

File: core/test/streamDiff.test.ts
Status: added
Changes: +180 -0
Diff:
@@ -0,0 +1,180 @@
+import { streamDiff } from "../diff/streamDiff.js";
+import { DiffLine, DiffLineType } from "../index.js";
+// @ts-ignore no typings available
+import { changed, diff as myersDiff } from "myers-diff";
+
+// "modification" is an extra type used to represent an "old" + "new" diff line
+type MyersDiffTypes = Extract<DiffLineType, "new" | "old"> | "modification";
+
+async function* generateLines(lines: string[]): AsyncGenerator<string> {
+  for (const line of lines) {
+    yield line;
+  }
+}
+
+async function collectDiffs(
+  oldLines: string[],
+  newLines: string[],
+): Promise<{ streamDiffs: DiffLine[]; myersDiffs: any }> {
+  const streamDiffs: DiffLine[] = [];
+
+  for await (const diffLine of streamDiff(oldLines, generateLines(newLines))) {
+    streamDiffs.push(diffLine);
+  }
+
+  const myersDiffs = myersDiff(oldLines.join("\n"), newLines.join("\n"));
+
+  return { streamDiffs, myersDiffs };
+}
+
+function getMyersDiffType(diff: any): MyersDiffTypes | undefined {
+  if (changed(diff.rhs) && !changed(diff.lhs)) {
+    return "new";
+  }
+
+  if (!changed(diff.rhs) && changed(diff.lhs)) {
+    return "old";
+  }
+
+  if (changed(diff.rhs) && changed(diff.lhs)) {
+    return "modification";
+  }
+
+  return undefined;
+}
+
+// We use a longer `)` string here to not get
+// caught by the fuzzy matcher
+describe("streamDiff(", () => {
+  test("no changes", async () => {
+    const oldLines = ["first item", "second arg", "third param"];
+    const newLines = ["first item", "second arg", "third param"];
+
+    const { streamDiffs, myersDiffs } = await collectDiffs(oldLines, newLines);
+
+    expect(streamDiffs).toEqual([
+      { type: "same", line: "first item" },
+      { type: "same", line: "second arg" },
+      { type: "same", line: "third param" },
+    ]);

----------------------------------------

File: core/test/streamTransforms/stopAtStopTokens.test.ts
Status: modified
Changes: +1 -1
Diff:
@@ -1,4 +1,4 @@
-import { stopAtStopTokens } from "../../autocomplete/charStream";
+import { stopAtStopTokens } from "../../autocomplete/charStream.js";
 
 describe("stopAtStopTokens", () => {
   async function* createMockStream(chunks: string[]): AsyncGenerator<string> {

----------------------------------------

File: core/test/util/dedentAndGetCommonWhitespace.test.ts
Status: modified
Changes: +1 -1
Diff:
@@ -1,5 +1,5 @@
 // File generated by Continue
-import { dedentAndGetCommonWhitespace } from "../../util";
+import { dedentAndGetCommonWhitespace } from "../../util/index.js";
 
 describe("dedentAndGetCommonWhitespace", () => {
   let originalString: string;

----------------------------------------

File: core/test/util/deduplicateArray.test.ts
Status: modified
Changes: +1 -1
Diff:
@@ -1,4 +1,4 @@
-import { deduplicateArray } from "../../util";
+import { deduplicateArray } from "../../util/index.js";
 
 describe("deduplicateArray", () => {
   it("should return an empty array when given an empty array", () => {

----------------------------------------

File: core/test/util/getLastNPathParts.test.ts
Status: modified
Changes: +1 -1
Diff:
@@ -1,5 +1,5 @@
 // File generated by Continue
-import { getLastNPathParts } from "../../util";
+import { getLastNPathParts } from "../../util/index.js";
 
 describe("getLastNPathParts", () => {
   const SEP_REGEX = /[\\/]+/;

----------------------------------------

File: core/test/util/lcs.test.ts
Status: modified
Changes: +1 -1
Diff:
@@ -1,5 +1,5 @@
 // This file is generated by Continue
-import { longestCommonSubsequence } from "../../util/lcs";
+import { longestCommonSubsequence } from "../../util/lcs.js";
 
 describe("longestCommonSubsequence", () => {
   beforeAll(() => {

----------------------------------------

File: core/test/util/merge.test.ts
Status: modified
Changes: +1 -1
Diff:
@@ -1,5 +1,5 @@
 // File generated by Continue
-import { mergeJson } from "../../util/merge";
+import { mergeJson } from "../../util/merge.js";
 
 describe("mergeJson", () => {
   it("should merge two simple JSON objects", () => {

----------------------------------------

File: core/test/util/ranges/getRangeInString.test.ts
Status: modified
Changes: +1 -1
Diff:
@@ -1,6 +1,6 @@
 // This file is generated by Continue
 
-import { getRangeInString } from "../../../util/ranges";
+import { getRangeInString } from "../../../util/ranges.js";
 
 describe.skip("getRangeInString", () => {
   let content: string;

----------------------------------------

File: core/test/util/ranges/intersection.test.ts
Status: modified
Changes: +1 -1
Diff:
@@ -1,6 +1,6 @@
 // This file is generated by Continue
 
-import { intersection } from "../../../util/ranges";
+import { intersection } from "../../../util/ranges.js";
 
 interface Position {
   line: number;

----------------------------------------

File: core/test/util/ranges/maxMinPosition.test.ts
Status: modified
Changes: +1 -1
Diff:
@@ -1,4 +1,4 @@
-import { maxPosition, minPosition } from "../../../util/ranges";
+import { maxPosition, minPosition } from "../../../util/ranges.js";
 
 // This file is generated by Continue
 interface Position {

----------------------------------------

File: core/test/util/ranges/union.test.ts
Status: modified
Changes: +1 -1
Diff:
@@ -1,4 +1,4 @@
-import { union } from "../../../util/ranges";
+import { union } from "../../../util/ranges.js";
 
 // This file is generated by Continue
 interface Position {

----------------------------------------

File: core/test/walkDir.test.ts
Status: modified
Changes: +73 -6
Diff:
@@ -1,12 +1,13 @@
 import path from "path";
-import { walkDir, WalkerOptions } from "../indexing/walkDir";
-import FileSystemIde from "../util/filesystem";
+import { walkDir, WalkerOptions } from "../indexing/walkDir.js";
+import FileSystemIde from "../util/filesystem.js";
 import {
   addToTestDir,
   setUpTestDir,
   tearDownTestDir,
   TEST_DIR,
-} from "./testUtils/testDir";
+} from "./testUtils/testDir.js";
+
 const ide = new FileSystemIde(TEST_DIR);
 
 async function walkTestDir(
@@ -23,6 +24,13 @@ async function expectPaths(
   toNotExist: string[],
   options?: WalkerOptions,
 ) {
+  // Convert to Windows paths
+  const pathSep = await ide.pathSep();
+  if (pathSep === "\\") {
+    toExist = toExist.map((p) => p.replace(/\//g, "\\"));
+    toNotExist = toNotExist.map((p) => p.replace(/\//g, "\\"));
+  }
+
   const result = await walkTestDir(options);
 
   for (const p of toExist) {
@@ -103,12 +111,41 @@ describe("walkDir", () => {
     );
   });
 
+  test("should use gitignore in parent directory for subdirectory", async () => {
+    const files = [
+      "a.txt",
+      "b.py",
+      "d/",
+      "d/e.txt",
+      "d/f.py",

----------------------------------------

File: core/tsconfig.json
Status: modified
Changes: +1 -1
Diff:
@@ -10,7 +10,7 @@
     "strict": true,
     "forceConsistentCasingInFileNames": true,
     "module": "ESNext",
-    "moduleResolution": "Node",
+    "moduleResolution": "Bundler",
     "resolveJsonModule": true,
     "isolatedModules": true,
     "noEmit": true,

----------------------------------------

File: core/util/GlobalContext.ts
Status: modified
Changes: +9 -0
Diff:
@@ -1,9 +1,18 @@
 import fs from "node:fs";
 import { getGlobalContextFilePath } from "./paths.js";
+import { EmbeddingsProvider } from "../index.js";
 
 export type GlobalContextType = {
   indexingPaused: boolean;
   selectedTabAutocompleteModel: string;
+  lastSelectedProfileForWorkspace: { [workspaceIdentifier: string]: string };
+  /**

----------------------------------------

File: core/util/ca.ts
Status: modified
Changes: +5 -2
Diff:
@@ -1,16 +1,19 @@
 import { globalAgent } from "https";
+// @ts-ignore
 import { systemCertsAsync } from "system-ca";
 
 export async function setupCa() {
   try {
     switch (process.platform) {
       case "darwin":
         // https://www.npmjs.com/package/mac-ca#usage

----------------------------------------

File: core/util/filesystem.ts
Status: modified
Changes: +5 -2
Diff:
@@ -37,6 +37,9 @@ class FileSystemIde implements IDE {
       remoteConfigServerUrl: undefined,
       remoteConfigSyncPeriod: 60,
       userToken: "",
+      enableControlServerBeta: false,
+      pauseCodebaseIndexOnStart: false,
+      enableDebugLogs: false,
     };
   }
   async getGitHubAuthToken(): Promise<string | undefined> {

----------------------------------------

File: core/util/messageIde.ts
Status: modified
Changes: +1 -1
Diff:
@@ -55,7 +55,7 @@ export class MessageIde implements IDE {
   }
 
   infoPopup(message: string): Promise<void> {
-    return this.request("errorPopup", { message });
+    return this.request("infoPopup", { message });
   }
 
   errorPopup(message: string): Promise<void> {

----------------------------------------

File: core/util/messenger.ts
Status: modified
Changes: +1 -1
Diff:
@@ -1,5 +1,5 @@
 import { v4 as uuidv4 } from "uuid";
-import type { IProtocol } from "../protocol";
+import type { IProtocol } from "../protocol/index.js";
 
 export interface Message<T = any> {
   messageType: string;

----------------------------------------

File: core/util/parameters.ts
Status: modified
Changes: +1 -1
Diff:
@@ -3,7 +3,7 @@ import { TabAutocompleteOptions } from "../index.js";
 export const DEFAULT_AUTOCOMPLETE_OPTS: TabAutocompleteOptions = {
   disable: false,
   useCopyBuffer: false,
-  useSuffix: true,
+  useFileSuffix: true,
   maxPromptTokens: 1024,
   prefixPercentage: 0.85,
   maxSuffixPercentage: 0.25,

----------------------------------------

File: core/util/paths.ts
Status: modified
Changes: +30 -4
Diff:
@@ -139,6 +139,24 @@ export function getTsConfigPath(): string {
   return tsConfigPath;
 }
 
+export function getContinueRcPath(): string {
+  // Disable indexing of the config folder to prevent infinite loops
+  const continuercPath = path.join(getContinueGlobalPath(), ".continuerc.json");
+  if (!fs.existsSync(continuercPath)) {
+    fs.writeFileSync(
+      continuercPath,
+      JSON.stringify(
+        {
+          disableIndexing: true,
+        },
+        null,
+        2,
+      ),
+    );
+  }
+  return continuercPath;
+}

----------------------------------------

File: core/util/posthog.ts
Status: modified
Changes: +10 -1
Diff:
@@ -1,4 +1,5 @@
 import os from "node:os";
+import { TeamAnalytics } from "../control-plane/TeamAnalytics.js";
 
 export class Telemetry {
   // Set to undefined whenever telemetry is disabled
@@ -7,7 +8,11 @@ export class Telemetry {
   static os: string | undefined = undefined;
   static extensionVersion: string | undefined = undefined;
 

----------------------------------------

File: core/util/reverseMessageIde.ts
Status: modified
Changes: +3 -3
Diff:
@@ -1,6 +1,6 @@
-import { IDE } from "..";
-import { ToIdeFromWebviewOrCoreProtocol } from "../protocol/ide";
-import { Message } from "./messenger";
+import { IDE } from "../index.js";
+import { ToIdeFromWebviewOrCoreProtocol } from "../protocol/ide.js";
+import { Message } from "./messenger.js";
 
 export class ReverseMessageIde {
   private on<T extends keyof ToIdeFromWebviewOrCoreProtocol>(

----------------------------------------

File: core/util/verticalEdit.ts
Status: modified
Changes: +8 -4
Diff:
@@ -60,10 +60,14 @@ export async function* streamDiffLines(
   language: string | undefined,
   onlyOneInsertion?: boolean,
 ): AsyncGenerator<DiffLine> {
-  Telemetry.capture("inlineEdit", {
-    model: llm.model,
-    provider: llm.providerName,
-  });
+  Telemetry.capture(
+    "inlineEdit",

----------------------------------------

File: docs/docs/customization/context-providers.md
Status: modified
Changes: +35 -9
Diff:
@@ -16,6 +16,14 @@ As an example, say you are working on solving a new GitHub Issue. You type '@iss
 
 To use any of the built-in context providers, open `~/.continue/config.json` and add it to the `contextProviders` list.
 
+### Files
+
+Type '@file' to reference any file in your current workspace.
+
+```json
+{ "name": "file" }
+```
+
 ### Code
 
 Type '@code' to reference specific functions or classes from throughout your project.
@@ -50,6 +58,28 @@ Type `@docs` to index and retrieve snippets from any documentation site. You can
 
 Continue also pre-indexes a number of common sites, listed [here](https://github.com/continuedev/continue/blob/main/core/indexing/docs/preIndexedDocs.ts). The embeddings for these sites are hosted by us, but downloaded for local use after the first time. All other indexing occurs entirely locally.
 
+#### Adding a Documentation Site via Configuration
+
+To add a documentation site via configuration, update the `config.json` file as follows:
+
+```json
+{
+  "name": "docs",
+  "params": {
+    "sites": [
+      {
+        "title": "ExampleDocs",
+        "startUrl": "https://exampledocs.com/docs",
+        "rootUrl": "https://exampledocs.com",

----------------------------------------

File: docs/docs/customization/overview.md
Status: modified
Changes: +1 -1
Diff:
@@ -10,7 +10,7 @@ Continue can be deeply customized by editing `config.json` and `config.ts` on yo
 
 Currently, you can customize the following:
 
-- [Models](../setup/select-model.md) and [providers](../setup/select-provider.md)
+- [Models](../setup/select-model.md) and [Model Providers](../setup/model-providers.md)
 - [Context Providers](./context-providers.md)
 - [Slash Commands](./slash-commands.md)
 - [Other configuration options](../reference/config.mdx)

----------------------------------------

File: docs/docs/customization/slash-commands.md
Status: modified
Changes: +2 -2
Diff:
@@ -44,11 +44,11 @@ Type "/share" to generate a shareable markdown transcript of your current chat h
 {
   "name": "share",
   "description": "Export the current chat session to markdown",
-  "params": { "ouputDir": "~/.continue/session-transcripts" }
+  "params": { "outputDir": "~/.continue/session-transcripts" }
 }
 ```
 
-Use the `ouputDir` parameter to specify where you want to the markdown file to be saved.

----------------------------------------

File: docs/docs/features/codebase-embeddings.md
Status: renamed
Changes: +18 -1
Diff:
@@ -231,7 +231,7 @@ export function modifyConfig(config: Config): Config {
 
 The reranker plays a crucial role in refining the results retrieved from your codebase. It processes the initial set of results obtained through embeddings-based retrieval, improving their relevance and accuracy for your queries.
 
-Continue offers several reranking options: `cohere`, `voyage`, `llm`, and `free-trial`, which can be configured in `config.json`.
+Continue offers several reranking options: `cohere`, `voyage`, `llm`, `hugginface-tei`, and `free-trial`, which can be configured in `config.json`.
 
 ### Voyage AI
 
@@ -282,6 +282,23 @@ If you only have access to a single LLM, then you can use it as a reranker. This
 

----------------------------------------

File: docs/docs/features/prompt-files.md
Status: renamed
Changes: +7 -1
Diff:
@@ -31,6 +31,12 @@ Write unit tests for the above selected code, following each of these instructio
 
 Now to use this prompt, you can highlight code and use cmd/ctrl+L to select it in the Continue sidebar. Then, type "/" to see the list of slash commands and choose the one called "test". Press enter and the LLM will respond given the instructions from your prompt file.
 
+## Examples library
+
+To assist you in getting started, we've curated a small library of `.prompt` files. You can access this collection here: <https://github.com/continuedev/prompt-file-examples>
+
+We encourage community contributions to this repository, so please consider opening up a pull request with your own prompts!
+

----------------------------------------

File: docs/docs/features/quick-actions.md
Status: renamed
Changes: +5 -6
Diff:
@@ -1,13 +1,13 @@
 ---
 title: Quick Actions (experimental, VS Code only)
-description: Quick Actions automate repetitive tasks and streamline your development workflow
+description: Quick Actions streamline your development workflow by allowing quick edits on selected classes or functions
 keywords: [experimental, automate, configuration]
 toc_max_heading_level: 5
 ---
 
-# Quick Actions (experimental, VS Code only)

----------------------------------------

File: docs/docs/features/tab-autocomplete.md
Status: renamed
Changes: +1 -1
Diff:
@@ -94,7 +94,7 @@ This object allows you to customize the behavior of tab-autocomplete. The availa
 - `disable`: Disable autocomplete (can also be done from IDE settings)
 - `template`: An optional template string to be used for autocomplete. It will be rendered with the Mustache templating language, and is passed the 'prefix' and 'suffix' variables. (String)
 - `useCopyBuffer`: Determines whether the copy buffer will be considered when constructing the prompt. (Boolean)
-- `useSuffix`: Determines whether to use the file suffix in the prompt. (Boolean)
+- `useFileSuffix`: Determines whether to use the file suffix in the prompt. (Boolean)
 - `maxPromptTokens`: The maximum number of prompt tokens to use. A smaller number will yield faster completions, but less context. (Number)
 - `prefixPercentage`: The percentage of the input that should be dedicated to the prefix. (Number)
 - `maxSuffixPercentage`: The maximum percentage of the prompt that can be dedicated to the suffix. (Number)

----------------------------------------

File: docs/docs/reference/Model Providers/assets/Watsonx1.gif
Status: added
Changes: +0 -0

----------------------------------------

File: docs/docs/reference/Model Providers/azure.md
Status: modified
Changes: +9 -1
Diff:
@@ -15,7 +15,7 @@ You can configure Azure OpenAI service through the UI, or you can configure it m
 ```json title="~/.continue/config.json"
 "models": [{
     "title": "Azure OpenAI",
-    "provider": "azure",
+    "provider": "openai",
     "model": "<YOUR_MODEL>",
     "apiBase": "<YOUR_DEPLOYMENT_BASE>",
     "engine": "<YOUR_ENGINE>",
@@ -24,3 +24,11 @@ You can configure Azure OpenAI service through the UI, or you can configure it m

----------------------------------------

File: docs/docs/reference/Model Providers/deepseek.md
Status: added
Changes: +16 -0
Diff:
@@ -0,0 +1,16 @@
+# DeepSeek
+
+To setup DeepSeek, obtain an API key from [here](https://www.deepseek.com/) and add the following to your `config.json` file:
+
+```json title="~/.continue/config.json"
+{
+  "models": [
+    {
+      "title": "Deepseek",

----------------------------------------

File: docs/docs/reference/Model Providers/freetrial.md
Status: modified
Changes: +1 -1
Diff:
@@ -69,7 +69,7 @@ Groq provides lightning fast inference for open-source LLMs like Llama3, up to t
 
 ### ‚è© Other options
 
-The above were only a few examples, but Continue can be used with any LLM or provider. You can find [a full list of providers here](../../setup/select-provider.md).
+The above were only a few examples, but Continue can be used with any LLM or provider. You can find [a full list of model providers here](../../setup/model-providers.md).
 
 ## Sign in
 

----------------------------------------

File: docs/docs/reference/Model Providers/mistral.md
Status: modified
Changes: +2 -2
Diff:
@@ -7,8 +7,8 @@ The [Mistral](https://mistral.ai) API provides hosted access to their models, in
   "models": [
     {
       "provider": "mistral",
-      "title": "Mistral Small",
-      "model": "mistral-small",
+      "title": "Codestral",
+      "model": "codestral-latest",
       "apiKey": "<API_KEY>"
     }

----------------------------------------

File: docs/docs/reference/Model Providers/watsonx.md
Status: added
Changes: +15 -0
Diff:
@@ -0,0 +1,15 @@
+# WatsonX
+
+Watsonx, developed by IBM, offers a variety of pre-trained AI foundation models that can be used for natural language processing (NLP), computer vision, and speech recognition tasks.
+
+## Setup
+
+To access the Watsonx models, create an instance in the [IBM cloud](https://cloud.ibm.com) which supports watsonx studio. Then to create a project refer [this](https://www.ibm.com/docs/en/watsonx/saas?topic=projects-creating-project).
+
+You can set it up in two different ways :

----------------------------------------

File: docs/docs/setup/configuration.md
Status: modified
Changes: +29 -6
Diff:
@@ -130,14 +130,14 @@ In `config.json`, you'll find the `models` property, a list of the models that y
 ```json
 "models": [
     {
-        "title": "GPT-4",
+        "title": "GPT-4o",
         "provider": "free-trial",
-        "model": "gpt-4"
+        "model": "gpt-4o"
     },
     {
-        "title": "GPT-3.5-Turbo",
+        "title": "GPT-4o Mini",
         "provider": "free-trial",
-        "model": "gpt-3.5-turbo"
+        "model": "gpt-4o-mini"
     }
 ]
 ```
@@ -267,7 +267,7 @@ function modifyConfig(config: Config): Config {
 }

----------------------------------------

File: docs/docs/setup/model-providers.md
Status: renamed
Changes: +24 -6
Diff:
@@ -1,12 +1,29 @@
 ---
-title: Select providers
-description: Configure LLM providers
-keywords: [openai, anthropic, gemini, ollama, ggml]
+title: Model Providers
+description: Configure and integrate various LLM (Large Language Model) providers for chat, autocomplete, and embedding models, whether self-hosted, remote, or via SaaS.
+keywords:
+  [
+    large language models,
+    LLM providers,
+    open-source LLM,
+    commercial LLM,
+    self-hosted LLM,
+    remote LLM,
+    SaaS LLM,
+    AI model configuration,

----------------------------------------

File: docs/docs/setup/overview.md
Status: modified
Changes: +1 -1
Diff:
@@ -9,5 +9,5 @@ You will need to decide which models and providers you use for [chat](select-mod
 Learn more:
 
 - [Configuration](configuration.md)
-- [Select providers](select-provider.md)
+- [Model Providers](model-providers.md)
 - [Select models](select-model.md)

----------------------------------------

File: docs/docs/setup/select-model.md
Status: modified
Changes: +10 -10
Diff:
@@ -21,10 +21,10 @@ _We currently recommend the following open-source models:_
 - Unlimited GPU: `llama3-70b`
 - Limited GPU: `llama3-8B`
 
-#### DeepSeek Coder from DeepSeek
+#### DeepSeek Coder v2 from DeepSeek
 
-- Unlimited GPU: `deepseek-coder-33b`
-- Limited GPU: `deepseek-coder-6.7b`
+- Unlimited GPU: `deepseek-coder-v2:236b`
+- Limited GPU: `deepseek-coder-v2:16b`
 
 _You can also use other open-source chat models by adding them to your `config.json`._
 
@@ -38,7 +38,7 @@ _You can also use other open-source chat models by adding them to your `config.j
 #### GPT-4o from OpenAI
 
 - Unlimited budget: `gpt-4o`
-- Limited budget: `gpt-3.5-turbo-0125`
+- Limited budget: `gpt-4o-mini`

----------------------------------------

File: docs/docs/troubleshooting.md
Status: modified
Changes: +8 -8
Diff:
@@ -67,11 +67,11 @@ If your keyboard shortcuts are not resolving, you may have other commands that a
 - [VSCode keyboard shortcuts docs](https://code.visualstudio.com/docs/getstarted/keybindings)
 - [IntelliJ keyboard shortcut docs](https://www.jetbrains.com/help/idea/configuring-keyboard-and-mouse-shortcuts.html)
 
-# FAQs
+## FAQs
 
-## Networking Issues
+### Networking Issues
 
-### Configure Certificates
+#### Configure Certificates
 
 If you're seeing a `fetch failed` error and your network requires custom certificates, you will need to configure them in `config.json`. In each of the objects in the `"models"` array, add `requestOptions.caBundlePath` like this:

----------------------------------------

File: docs/docs/walkthroughs/codellama.md
Status: removed
Changes: +0 -103
Diff:
@@ -1,103 +0,0 @@
----
-title: Using Code Llama with Continue
-description: How to use Code Llama with Continue
-keywords: [code llama, meta, togetherai, ollama, replciate, fastchat, msty]
----
-
-# Using Code Llama with Continue
-
-With Continue, you can use Code Llama as a drop-in replacement for GPT-4, either by running locally with Ollama, Msty, or GGML or through Replicate.
-
-If you haven't already installed Continue, you can do that [here](https://marketplace.visualstudio.com/items?itemName=Continue.continue). For more general information on customizing Continue, read [our customization docs](../customization/overview.md).
-
-## TogetherAI
-
-1. Create an account [here](https://api.together.xyz/signup)
-2. Copy your API key that appears on the welcome screen
-3. Update your Continue config file like this:
-
-```json title="~/.continue/config.json"
-{
-  "models": [
-    {
-      "title": "Code Llama",
-      "provider": "together",
-      "model": "togethercomputer/CodeLlama-13b-Instruct",
-      "apiKey": "<API_KEY>"
-    }
-  ]
-}
-```
-
-## Ollama
-

----------------------------------------

File: docs/docs/walkthroughs/llama3.1.md
Status: added
Changes: +94 -0
Diff:
@@ -0,0 +1,94 @@
+---
+title: Using Llama 3.1 with Continue
+description: How to use Llama 3.1 with Continue
+keywords: [llama, meta, togetherai, ollama, replicate]
+---
+
+# Using Llama 3.1 with Continue
+
+Continue makes it easy to code with the latest open-source models, including the entire Llama 3.1 family of models.
+
+If you haven't already installed Continue, you can do that [here for VS Code](https://marketplace.visualstudio.com/items?itemName=Continue.continue) or [here for JetBrains](https://plugins.jetbrains.com/plugin/22707-continue). For more general information on customizing Continue, read [our customization docs](../customization/overview.md).
+
+Below we share some of the easiest ways to get up and running, depending on your use-case.
+
+## Ollama
+
+Ollama is the fastest way to get up and running with local language models. We recommend trying Llama 3.1 8b, which is impressive for its size and will perform well on most hardware.
+
+1. Download Ollama [here](https://ollama.ai/) (it should walk you through the rest of these steps)
+2. Open a terminal and run `ollama run llama3.1-8b`
+3. Change your Continue config file like this:
+
+```json title="~/.continue/config.json"
+{
+  "models": [
+    {
+      "title": "Llama 3.1 8b",
+      "provider": "ollama",
+      "model": "llama3.1-8b"
+    }

----------------------------------------

File: docs/docs/walkthroughs/set-up-codestral.md
Status: modified
Changes: +2 -2
Diff:
@@ -39,7 +39,7 @@ keywords: [codestral, mistral, model setup]
 
 5. If you run into any issues or have any questions, please join our Discord and post in the `#help` channel [here](https://discord.gg/EfJEfdFnDQ)
 
-## Trobleshooting
+## Troubleshooting
 
 ### Temporary workaround for JetBrains
 
@@ -68,4 +68,4 @@ Mistral AI recently changed the API endpoint to `codestral.mistral.ai` instead o

----------------------------------------

File: docs/docusaurus.config.js
Status: modified
Changes: +20 -0
Diff:
@@ -185,6 +185,26 @@ const config = {
             from: "/model-setup/configuration",
             to: "/setup/configuration",
           },
+          {
+            from: "/setup/select-provider",
+            to: "/setup/model-providers",
+          },
+          {
+            from: "/walkthroughs/codebase-embeddings",

----------------------------------------

File: docs/package.json
Status: modified
Changes: +1 -0
Diff:
@@ -1,6 +1,7 @@
 {
   "name": "continue-docs",
   "version": "0.0.0",
+  "author": "Continue Dev, Inc",
   "private": true,
   "scripts": {
     "docusaurus": "docusaurus",

----------------------------------------

File: docs/sidebars.js
Status: modified
Changes: +13 -7
Diff:
@@ -25,7 +25,7 @@ const sidebars = {
       items: [
         "setup/overview",
         "setup/configuration",
-        "setup/select-provider",
+        "setup/model-providers",
         "setup/select-model",
       ],
     },
@@ -42,17 +42,23 @@ const sidebars = {
     },
     {
       type: "category",

----------------------------------------

File: docs/static/schemas/config.json
Status: modified
Changes: +265 -19
Diff:
@@ -187,7 +187,8 @@
             "cloudflare",
             "deepseek",
             "azure",
-            "msty"
+            "msty",
+            "watsonx"
           ],
           "markdownEnumDescriptions": [
             "### OpenAI\nUse gpt-4, gpt-3.5-turbo, or any other OpenAI model. See [here](https://openai.com/product#made-for-developers) to obtain an API key.\n\n> [Reference](https://docs.continue.dev/reference/Model%20Providers/openai)",
@@ -211,7 +212,8 @@
             "### Cloudflare Workers AI\n\n[Reference](https://developers.cloudflare.com/workers-ai/)",
             "### Deepseek\n Deepseek's API provides the best pricing for their state-of-the-art Deepseek Coder models. To get started, obtain an API key from [their console](https://platform.deepseek.com/api_keys)",
             "### Azure OpenAI\n Azure OpenAI lets you securely run OpenAI's models on Azure. To get started, follow the steps [here](https://docs.continue.dev/reference/Model%20Providers/azure)",
-            "### Msty\nMsty is the simplest way to get started with online or local LLMs on all desktop platforms - Windows, Mac, and Linux. No fussing around, one-click and you are up and running. To get started, follow these steps:\n1. Download from [Msty.app](https://msty.app/), open the application, and click 'Setup Local AI'.\n2. Go to the Local AI Module page and download a model of your choice.\n3. Once the model has finished downloading, you can start asking questions through Continue.\n> [Reference](https://continue.dev/docs/reference/Model%20Providers/Msty)"
+            "### Msty\nMsty is the simplest way to get started with online or local LLMs on all desktop platforms - Windows, Mac, and Linux. No fussing around, one-click and you are up and running. To get started, follow these steps:\n1. Download from [Msty.app](https://msty.app/), open the application, and click 'Setup Local AI'.\n2. Go to the Local AI Module page and download a model of your choice.\n3. Once the model has finished downloading, you can start asking questions through Continue.\n> [Reference](https://continue.dev/docs/reference/Model%20Providers/Msty)",
+            "### WatsonX\nWatsonx, developed by IBM, offers a variety of pre-trained AI foundation models that can be used for natural language processing (NLP), computer vision, and speech recognition tasks."
           ],
           "type": "string"
         },
@@ -321,6 +323,16 @@
           "title": "Engine",
           "description": "Azure OpenAI engine",
           "type": "string"
+        },
+        "capabilities": {
+          "type": "object",
+          "description": "We will attempt to automatically detect the capabilities of the model based on its title and provider, but this may not always be accurate. You can override the model's capabilities here.",
+          "properties": {
+            "uploadImage": {
+              "type": "boolean",
+              "description": "Indicates whether the model can upload images."
+            }
+          }
         }
       },
       "required": ["title", "provider", "model"],
@@ -481,6 +493,7 @@
                       "gpt-3.5-turbo",
                       "gpt-3.5-turbo-16k",
                       "gpt-4o",
+                      "gpt-4o-mini",
                       "gpt-4",
                       "gpt-3.5-turbo-0613",
                       "gpt-4-32k",
@@ -512,6 +525,9 @@
                 "anyOf": [
                   {
                     "enum": [
+                      "llama3.1-8b",
+                      "llama3.1-70b",
+                      "llama3.1-405b",
                       "llama3-8b",
                       "llama3-70b",
                       "codellama-7b",
@@ -545,7 +561,8 @@
                 "enum": [
                   "gpt-4o",
                   "codestral-latest",
-                  "llama3-70b",
+                  "llama3.1-70b",
+                  "llama3.1-405b",
                   "gpt-3.5-turbo",
                   "phind-codellama-34b",
                   "gemini-pro",
@@ -581,6 +598,7 @@
                       "gpt-3.5-turbo",
                       "gpt-3.5-turbo-16k",
                       "gpt-4o",
+                      "gpt-4o-mini",
                       "gpt-4",
                       "gpt-3.5-turbo-0613",
                       "gpt-4-32k",
@@ -596,6 +614,9 @@
                       "codellama-70b",
                       "llama3-8b",
                       "llama3-70b",
+                      "llama3.1-8b",
+                      "llama3.1-70b",
+                      "llama3.1-405b",
                       "phind-codellama-34b",
                       "wizardcoder-7b",
                       "wizardcoder-13b",
@@ -746,6 +767,9 @@
                       "llama2-13b",
                       "llama3-8b",
                       "llama3-70b",
+                      "llama3.1-8b",
+                      "llama3.1-70b",
+                      "llama3.1-405b",
                       "codellama-7b",
                       "codellama-13b",
                       "codellama-34b",
@@ -810,6 +834,9 @@
                       "codellama-70b",
                       "llama3-8b",
                       "llama3-70b",
+                      "llama3.1-8b",
+                      "llama3.1-70b",
+                      "llama3.1-405b",
                       "phind-codellama-34b",
                       "wizardcoder-7b",
                       "wizardcoder-13b",
@@ -858,6 +885,9 @@
                       "codellama-70b",
                       "llama3-8b",
                       "llama3-70b",
+                      "llama3.1-8b",
+                      "llama3.1-70b",
+                      "llama3.1-405b",
                       "phi-2",
                       "phind-codellama-34b",
                       "wizardcoder-7b",
@@ -899,6 +929,7 @@
               "model": {
                 "enum": [
                   "codestral-latest",
+                  "codestral-mamba-latest",
                   "open-mistral-7b",
                   "open-mixtral-8x7b",
                   "open-mixtral-8x22b",
@@ -944,6 +975,9 @@
                   "gemma",
                   "llama3-8b",
                   "llama3-70b",
+                  "llama3.1-8b",
+                  "llama3.1-70b",
+                  "llama3.1-405b",
                   "AUTODETECT"
                 ]
               }
@@ -1094,6 +1128,7 @@
                       "gpt-3.5-turbo",
                       "gpt-3.5-turbo-16k",
                       "gpt-4o",
+                      "gpt-4o-mini",
                       "gpt-4",
                       "gpt-3.5-turbo-0613",
                       "gpt-4-32k",
@@ -1109,6 +1144,9 @@
                       "codellama-70b",
                       "llama3-8b",
                       "llama3-70b",
+                      "llama3.1-8b",
+                      "llama3.1-70b",
+                      "llama3.1-405b",
                       "phind-codellama-34b",
                       "wizardcoder-7b",
                       "wizardcoder-13b",
@@ -1149,6 +1187,48 @@
               }
             }
           }
+        },
+        {

----------------------------------------

File: eval/.gitignore
Status: added
Changes: +1 -0
Diff:
@@ -0,0 +1 @@
+repos
\ No newline at end of file

----------------------------------------

File: extensions/intellij/CHANGELOG.md
Status: modified
Changes: +16 -0
Diff:
@@ -5,6 +5,22 @@ adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html),
 and is generated by [Changie](https://github.com/miniscruff/changie).
 
 
+## 0.0.54 - 2024-07-13
+### Added
+* Partial autocomplete acceptance
+* Autocomplete status bar spinner
+### Fixed
+* Fixed duplicate completion bug and others

----------------------------------------

File: extensions/intellij/README.md
Status: modified
Changes: +1 -1
Diff:
@@ -46,6 +46,6 @@ Learn more about the models and providers [here](https://continue.dev/docs/setup
 
 ## License
 
-[Apache 2.0 ¬© 2023 Continue Dev, Inc.](./LICENSE)
+[Apache 2.0 ¬© 2023-2024 Continue Dev, Inc.](./LICENSE)
 
 <!-- Plugin description end -->

----------------------------------------

File: extensions/intellij/gradle.properties
Status: modified
Changes: +1 -1
Diff:
@@ -4,7 +4,7 @@ pluginGroup = com.github.continuedev.continueintellijextension
 pluginName = continue-intellij-extension
 pluginRepositoryUrl = https://github.com/continuedev/continue
 # SemVer format -> https://semver.org
-pluginVersion = 0.0.53
+pluginVersion = 0.0.57
 
 # Supported build number ranges and IntelliJ Platform versions -> https://plugins.jetbrains.com/docs/intellij/build-number-ranges.html
 pluginSinceBuild = 223

----------------------------------------

File: extensions/intellij/src/main/kotlin/com/github/continuedev/continueintellijextension/activities/ContinuePluginStartupActivity.kt
Status: modified
Changes: +30 -0
Diff:
@@ -1,5 +1,8 @@
 package com.github.continuedev.continueintellijextension.activities
 
+import com.github.continuedev.continueintellijextension.auth.AuthListener
+import com.github.continuedev.continueintellijextension.auth.ContinueAuthService
+import com.github.continuedev.continueintellijextension.auth.ControlPlaneSessionInfo
 import com.github.continuedev.continueintellijextension.constants.getContinueGlobalPath
 import com.github.continuedev.continueintellijextension.`continue`.*
 import com.github.continuedev.continueintellijextension.listeners.ContinuePluginSelectionListener
@@ -25,6 +28,7 @@ import java.nio.file.Files
 import java.nio.file.Paths
 import javax.swing.*
 import com.intellij.ide.plugins.PluginManager
+import com.intellij.openapi.components.service
 import com.intellij.openapi.extensions.PluginId
 

----------------------------------------

File: extensions/intellij/src/main/kotlin/com/github/continuedev/continueintellijextension/auth/AuthListener.kt
Status: added
Changes: +12 -0
Diff:
@@ -0,0 +1,12 @@
+package com.github.continuedev.continueintellijextension.auth
+import com.intellij.util.messages.Topic
+
+interface AuthListener {
+    fun startAuthFlow()
+
+    fun handleUpdatedSessionInfo(sessionInfo: ControlPlaneSessionInfo?)
+
+    companion object {

----------------------------------------

File: extensions/intellij/src/main/kotlin/com/github/continuedev/continueintellijextension/auth/ContinueAuthDialog.kt
Status: added
Changes: +34 -0
Diff:
@@ -0,0 +1,34 @@
+package com.github.continuedev.continueintellijextension.auth
+
+import com.intellij.openapi.ui.DialogWrapper
+import com.intellij.ui.components.JBLabel
+import com.intellij.ui.components.JBTextField
+import javax.swing.JComponent
+import javax.swing.JPanel
+import java.awt.BorderLayout
+
+class ContinueAuthDialog(private val onTokenEntered: (String) -> Unit) : DialogWrapper(true) {

----------------------------------------

File: extensions/intellij/src/main/kotlin/com/github/continuedev/continueintellijextension/auth/ContinueAuthService.kt
Status: added
Changes: +223 -0
Diff:
@@ -0,0 +1,223 @@
+package com.github.continuedev.continueintellijextension.auth
+
+import com.github.continuedev.continueintellijextension.services.ContinuePluginService
+import com.google.gson.Gson
+import com.intellij.credentialStore.Credentials
+import com.intellij.ide.passwordSafe.PasswordSafe
+import com.intellij.ide.util.PropertiesComponent
+import com.intellij.openapi.application.ApplicationManager
+import com.intellij.openapi.components.Service
+import com.intellij.openapi.components.service
+import com.intellij.openapi.project.Project
+import com.intellij.remoteServer.util.CloudConfigurationUtil.createCredentialAttributes
+import java.awt.Desktop
+import kotlinx.coroutines.Dispatchers
+import kotlinx.coroutines.launch
+import kotlinx.coroutines.withContext
+import okhttp3.MediaType.Companion.toMediaType
+import okhttp3.OkHttpClient
+import okhttp3.Request
+import okhttp3.RequestBody.Companion.toRequestBody
+import java.net.URL
+
+@Service
+class ContinueAuthService {
+    companion object {
+        fun getInstance(): ContinueAuthService = service<ContinueAuthService>()
+        private const val CREDENTIALS_USER = "ContinueAuthUser"
+        private const val ACCESS_TOKEN_KEY = "ContinueAccessToken"
+        private const val REFRESH_TOKEN_KEY = "ContinueRefreshToken"
+        private const val ACCOUNT_ID_KEY = "ContinueAccountId"
+        private const val ACCOUNT_LABEL_KEY = "ContinueAccountLabel"
+        private const val CONTROL_PLANE_URL = "https://control-plane-api-service-i3dqylpbqa-uc.a.run.app"
+//        private const val CONTROL_PLANE_URL = "http://localhost:3001"
+    }
+
+    init {
+        setupRefreshTokenInterval()
+    }
+
+    fun startAuthFlow(project: Project) {
+        // Open login page
+        openSignInPage(project)
+
+        // Open a dialog where the user should paste their sign-in token
+        ApplicationManager.getApplication().invokeLater {
+            val dialog = ContinueAuthDialog() { token ->
+                // Store the token
+                updateRefreshToken(token)
+            }
+            dialog.show()
+        }
+    }
+
+    fun signOut() {
+        // Clear the stored tokens
+        setAccessToken("")
+        setRefreshToken("")
+        setAccountId("")
+        setAccountLabel("")
+    }
+
+    private fun updateRefreshToken(token: String) {
+        // Launch a coroutine to call the suspend function
+        kotlinx.coroutines.GlobalScope.launch {
+            try {
+                val response = refreshToken(token)
+                val accessToken = response["accessToken"] as? String
+                val refreshToken = response["refreshToken"] as? String
+                val user = response["user"] as? Map<*, *>
+                val firstName = user?.get("firstName") as? String
+                val lastName = user?.get("lastName") as? String
+                val label = "$firstName $lastName"
+                val id = user?.get("id") as? String

----------------------------------------

File: extensions/intellij/src/main/kotlin/com/github/continuedev/continueintellijextension/autocomplete/AutocompleteActionGroup.kt
Status: added
Changes: +29 -0
Diff:
@@ -0,0 +1,29 @@
+package com.github.continuedev.continueintellijextension.autocomplete
+
+import com.github.continuedev.continueintellijextension.services.ContinueExtensionSettings
+import com.intellij.openapi.actionSystem.ActionUpdateThread
+import com.intellij.openapi.actionSystem.AnActionEvent
+import com.intellij.openapi.actionSystem.DefaultActionGroup
+import com.intellij.openapi.components.service
+
+class AutocompleteActionGroup : DefaultActionGroup() {

----------------------------------------

File: extensions/intellij/src/main/kotlin/com/github/continuedev/continueintellijextension/autocomplete/AutocompleteEditorListener.kt
Status: modified
Changes: +13 -2
Diff:
@@ -12,10 +12,15 @@ import com.intellij.openapi.util.TextRange
 class AutocompleteCaretListener: CaretListener {
     override fun caretPositionChanged(event: CaretEvent) {
         val caret = event.caret ?: return
-        val oldPosition = event.oldPosition
         val offset = caret.offset
         val editor = caret.editor
         val autocompleteService = editor.project?.service<AutocompleteService>() ?: return
+
+        if (autocompleteService.lastChangeWasPartialAccept) {
+            autocompleteService.lastChangeWasPartialAccept = false

----------------------------------------

File: extensions/intellij/src/main/kotlin/com/github/continuedev/continueintellijextension/autocomplete/AutocompleteService.kt
Status: modified
Changes: +74 -5
Diff:
@@ -14,18 +14,29 @@ import com.intellij.openapi.editor.Editor
 import com.intellij.openapi.editor.InlayProperties
 import com.intellij.openapi.fileEditor.FileDocumentManager
 import com.intellij.openapi.project.Project
+import com.intellij.openapi.wm.WindowManager
 
 data class PendingCompletion (
-    val editor: Editor,
-    val offset: Int,
-    val completionId: String,
-    val text: String?
+        val editor: Editor,
+        var offset: Int,
+        val completionId: String,
+        var text: String?
 )
 
 @Service(Service.Level.PROJECT)
 class AutocompleteService(private val project: Project) {
     var pendingCompletion: PendingCompletion? = null;
     private val autocompleteLookupListener = project.service<AutocompleteLookupListener>()
+    private var widget: AutocompleteSpinnerWidget? = null
+
+    // To avoid triggering another completion on partial acceptance,
+    // we need to keep track of whether the last change was a partial accept
+    var lastChangeWasPartialAccept = false
+
+    init {
+        val statusBar = WindowManager.getInstance().getStatusBar(project)
+        widget = statusBar.getWidget("AutocompleteSpinnerWidget") as? AutocompleteSpinnerWidget
+    }
 
     fun triggerCompletion(editor: Editor) {
         val settings =
@@ -42,6 +53,7 @@ class AutocompleteService(private val project: Project) {
         val completionId = uuid()
         val offset = editor.caretModel.primaryCaret.offset
         pendingCompletion = PendingCompletion(editor, offset, completionId, null)
+        widget?.setLoading(true)
 
         // Request a completion from the core
         val virtualFile = FileDocumentManager.getInstance().getFile(editor.document)
@@ -63,11 +75,13 @@ class AutocompleteService(private val project: Project) {
         val lineLength = lineEnd - lineStart

----------------------------------------

File: extensions/intellij/src/main/kotlin/com/github/continuedev/continueintellijextension/autocomplete/AutocompleteSpinnerWidgetFactory.kt
Status: added
Changes: +111 -0
Diff:
@@ -0,0 +1,111 @@
+package com.github.continuedev.continueintellijextension.autocomplete
+
+import com.github.continuedev.continueintellijextension.services.ContinueExtensionSettings
+import com.intellij.openapi.Disposable
+import com.intellij.openapi.components.service
+import com.intellij.openapi.project.Project
+import com.intellij.openapi.util.Disposer
+import com.intellij.openapi.wm.StatusBar
+import com.intellij.openapi.wm.StatusBarWidget
+import com.intellij.openapi.util.IconLoader
+import com.intellij.openapi.wm.StatusBarWidgetFactory
+import com.intellij.openapi.wm.WindowManager
+import com.intellij.openapi.wm.impl.status.EditorBasedWidget
+import com.intellij.ui.AnimatedIcon
+import com.intellij.util.Consumer
+import java.awt.event.MouseEvent
+import javax.swing.Icon
+import javax.swing.JLabel
+
+class AutocompleteSpinnerWidget(project: Project): EditorBasedWidget(project), StatusBarWidget.IconPresentation, Disposable {
+    private val iconLabel = JLabel()
+    private var isLoading = false
+
+    private val animatedIcon = AnimatedIcon(
+            100,
+            IconLoader.getIcon("/icons/AnimationLoadingIcon/AnimationLoading1(RiderLight).svg", javaClass),
+            IconLoader.getIcon("/icons/AnimationLoadingIcon/AnimationLoading2(RiderLight).svg", javaClass),
+            IconLoader.getIcon("/icons/AnimationLoadingIcon/AnimationLoading3(RiderLight).svg", javaClass),
+            IconLoader.getIcon("/icons/AnimationLoadingIcon/AnimationLoading4(RiderLight).svg", javaClass),
+            IconLoader.getIcon("/icons/AnimationLoadingIcon/AnimationLoading5(RiderLight).svg", javaClass),
+            IconLoader.getIcon("/icons/AnimationLoadingIcon/AnimationLoading6(RiderLight).svg", javaClass),
+            IconLoader.getIcon("/icons/AnimationLoadingIcon/AnimationLoading7(RiderLight).svg", javaClass),
+            IconLoader.getIcon("/icons/AnimationLoadingIcon/AnimationLoading8(RiderLight).svg", javaClass),
+    )
+
+    init {

----------------------------------------

File: extensions/intellij/src/main/kotlin/com/github/continuedev/continueintellijextension/autocomplete/ContinueCustomElementRenderer.kt
Status: modified
Changes: +2 -1
Diff:
@@ -19,7 +19,8 @@ class ContinueCustomElementRenderer (
         val text: String,
 ) : EditorCustomElementRenderer {
     override fun calcWidthInPixels(inlay: Inlay<*>): Int {
-        return (inlay.editor as EditorImpl).getFontMetrics(Font.PLAIN).stringWidth(this.text)
+        val width = (inlay.editor as EditorImpl).getFontMetrics(Font.PLAIN).stringWidth(this.text)
+        return width
     }
 
     private fun font(editor: Editor): Font {

----------------------------------------

File: extensions/intellij/src/main/kotlin/com/github/continuedev/continueintellijextension/autocomplete/ContinueMultilineCustomElementRenderer.kt
Status: modified
Changes: +6 -5
Diff:
@@ -7,9 +7,8 @@ import com.intellij.openapi.editor.colors.EditorFontType
 import com.intellij.openapi.editor.impl.EditorImpl
 import com.intellij.openapi.editor.impl.FontInfo
 import com.intellij.openapi.editor.markup.TextAttributes
-import com.intellij.ui.Gray
 import com.intellij.ui.JBColor
-import java.awt.Color
+import com.intellij.util.ui.UIUtil
 import java.awt.Font
 import java.awt.Graphics
 import java.awt.Rectangle
@@ -39,7 +38,7 @@ class ContinueMultilineCustomElementRenderer (
     protected val font: Font

----------------------------------------

File: extensions/intellij/src/main/kotlin/com/github/continuedev/continueintellijextension/autocomplete/DisableTabAutocompleteAction.kt
Status: added
Changes: +12 -0
Diff:
@@ -0,0 +1,12 @@
+package com.github.continuedev.continueintellijextension.autocomplete
+
+import com.github.continuedev.continueintellijextension.services.ContinueExtensionSettings
+import com.intellij.openapi.actionSystem.AnAction
+import com.intellij.openapi.actionSystem.AnActionEvent
+import com.intellij.openapi.components.service
+class DisableTabAutocompleteAction : AnAction() {
+    override fun actionPerformed(e: AnActionEvent) {
+        val continueSettingsService = service<ContinueExtensionSettings>()

----------------------------------------

File: extensions/intellij/src/main/kotlin/com/github/continuedev/continueintellijextension/autocomplete/EnableTabAutocompleteAction.kt
Status: added
Changes: +12 -0
Diff:
@@ -0,0 +1,12 @@
+package com.github.continuedev.continueintellijextension.autocomplete
+
+import com.github.continuedev.continueintellijextension.services.ContinueExtensionSettings
+import com.intellij.openapi.actionSystem.AnAction
+import com.intellij.openapi.actionSystem.AnActionEvent
+import com.intellij.openapi.components.service
+class EnableTabAutocompleteAction : AnAction() {
+    override fun actionPerformed(e: AnActionEvent) {
+        val continueSettingsService = service<ContinueExtensionSettings>()

----------------------------------------

File: extensions/intellij/src/main/kotlin/com/github/continuedev/continueintellijextension/autocomplete/PartialAcceptAutocompleteAction.kt
Status: modified
Changes: +1 -2
Diff:
@@ -11,8 +11,7 @@ import com.intellij.openapi.editor.actionSystem.EditorActionHandler
 class PartialAcceptAutocompleteAction: EditorAction(object : EditorActionHandler() {
     override fun doExecute(editor: Editor, caret: Caret?, dataContext: DataContext?) {
         ApplicationManager.getApplication().runWriteAction {
-            // TODO
-//            editor.project?.service<AutocompleteService>()?.accept()
+            editor.project?.service<AutocompleteService>()?.partialAccept()
         }
     }
 

----------------------------------------

File: extensions/intellij/src/main/kotlin/com/github/continuedev/continueintellijextension/continue/CoreMessenger.kt
Status: modified
Changes: +5 -2
Diff:
@@ -147,14 +147,17 @@ class CoreMessenger(private val project: Project, esbuildPath: String, continueC
         "applyToFile",
         "getGitHubAuthToken",
         "setGitHubAuthToken",
-        "pathSep"
+        "pathSep",
+        "getControlPlaneSessionInfo",
+        "logoutOfControlPlane"
     )
 

----------------------------------------

File: extensions/intellij/src/main/kotlin/com/github/continuedev/continueintellijextension/continue/IdeProtocolClient.kt
Status: modified
Changes: +22 -1
Diff:
@@ -1,6 +1,8 @@
 package com.github.continuedev.continueintellijextension.`continue`
 
 import com.github.continuedev.continueintellijextension.*
+import com.github.continuedev.continueintellijextension.auth.AuthListener
+import com.github.continuedev.continueintellijextension.auth.ContinueAuthService
 import com.github.continuedev.continueintellijextension.constants.*
 import com.github.continuedev.continueintellijextension.services.ContinueExtensionSettings
 import com.github.continuedev.continueintellijextension.services.ContinuePluginService
@@ -232,9 +234,28 @@ class IdeProtocolClient (
                         respond(mapOf(
                             "remoteConfigServerUrl" to settings.continueState.remoteConfigServerUrl,
                             "remoteConfigSyncPeriod" to settings.continueState.remoteConfigSyncPeriod,

----------------------------------------

File: extensions/intellij/src/main/kotlin/com/github/continuedev/continueintellijextension/editor/InlineEditAction.kt
Status: modified
Changes: +2 -2
Diff:
@@ -64,9 +64,9 @@ class InlineEditAction : AnAction(), DumbAware {
         // Get list of model titles
         val continuePluginService = project.service<ContinuePluginService>()
         val modelTitles = mutableListOf<String>()
-        continuePluginService.coreMessenger?.request("config/getBrowserSerialized", null, null) { response ->
+        continuePluginService.coreMessenger?.request("config/getSerializedProfileInfo", null, null) { response ->
             val config = response as Map<String, Any>
-            val models = config["models"] as List<Map<String, Any>>
+            val models = (config["config"] as Map<String, Any>)["models"] as List<Map<String, Any>>
             modelTitles.addAll(models.map { it["title"] as String })

----------------------------------------

File: extensions/intellij/src/main/kotlin/com/github/continuedev/continueintellijextension/services/ContinueExtensionSettingsService.kt
Status: modified
Changes: +10 -11
Diff:
@@ -1,27 +1,21 @@
 package com.github.continuedev.continueintellijextension.services
 
 import com.intellij.openapi.application.ApplicationManager
-import com.intellij.openapi.components.PersistentStateComponent
-import com.intellij.openapi.components.ServiceManager
-import com.intellij.openapi.components.State
-import com.intellij.openapi.components.Storage
+import com.intellij.openapi.components.*
 import com.intellij.openapi.options.Configurable
 import com.intellij.openapi.project.DumbAware
 import com.intellij.util.messages.Topic
 import java.awt.GridBagConstraints
 import java.awt.GridBagLayout
-import javax.swing.JCheckBox
-import javax.swing.JComponent
-import javax.swing.JLabel
-import javax.swing.JPanel
-import javax.swing.JTextField
+import javax.swing.*
 
 class ContinueSettingsComponent: DumbAware {
     val panel: JPanel = JPanel(GridBagLayout())
     val remoteConfigServerUrl: JTextField = JTextField()
     val remoteConfigSyncPeriod: JTextField = JTextField()
     val userToken: JTextField = JTextField()
     val enableTabAutocomplete: JCheckBox = JCheckBox("Enable Tab Autocomplete")

----------------------------------------

File: extensions/intellij/src/main/kotlin/com/github/continuedev/continueintellijextension/toolWindow/ContinueBrowser.kt
Status: modified
Changes: +5 -2
Diff:
@@ -46,7 +46,7 @@ class ContinueBrowser(val project: Project, url: String, useOsr: Boolean = false
         "config/addOpenAiKey",
         "config/addModel",
         "config/ideSettingsUpdate",
-        "config/getBrowserSerialized",
+        "config/getSerializedProfileInfo",
         "config/deleteModel",
         "config/newPromptFile",
         "config/reload",
@@ -68,7 +68,10 @@ class ContinueBrowser(val project: Project, url: String, useOsr: Boolean = false

----------------------------------------

File: extensions/intellij/src/main/resources/META-INF/plugin.xml
Status: modified
Changes: +9 -4
Diff:
@@ -22,6 +22,8 @@
         <projectService
                 id="AutocompleteLookupListener"
                 serviceImplementation="com.github.continuedev.continueintellijextension.autocomplete.AutocompleteLookupListener"/>
+        <statusBarWidgetFactory implementation="com.github.continuedev.continueintellijextension.autocomplete.AutocompleteSpinnerWidgetFactory"
+                                id="AutocompleteSpinnerWidget"/>
     </extensions>
 
     <resource-bundle>messages.MyBundle</resource-bundle>
@@ -108,10 +110,6 @@
                 text="Start New Continue Session"

----------------------------------------

File: extensions/intellij/src/main/resources/config_schema.json
Status: modified
Changes: +265 -19
Diff:
@@ -187,7 +187,8 @@
             "cloudflare",
             "deepseek",
             "azure",
-            "msty"
+            "msty",
+            "watsonx"
           ],
           "markdownEnumDescriptions": [
             "### OpenAI\nUse gpt-4, gpt-3.5-turbo, or any other OpenAI model. See [here](https://openai.com/product#made-for-developers) to obtain an API key.\n\n> [Reference](https://docs.continue.dev/reference/Model%20Providers/openai)",
@@ -211,7 +212,8 @@
             "### Cloudflare Workers AI\n\n[Reference](https://developers.cloudflare.com/workers-ai/)",
             "### Deepseek\n Deepseek's API provides the best pricing for their state-of-the-art Deepseek Coder models. To get started, obtain an API key from [their console](https://platform.deepseek.com/api_keys)",
             "### Azure OpenAI\n Azure OpenAI lets you securely run OpenAI's models on Azure. To get started, follow the steps [here](https://docs.continue.dev/reference/Model%20Providers/azure)",
-            "### Msty\nMsty is the simplest way to get started with online or local LLMs on all desktop platforms - Windows, Mac, and Linux. No fussing around, one-click and you are up and running. To get started, follow these steps:\n1. Download from [Msty.app](https://msty.app/), open the application, and click 'Setup Local AI'.\n2. Go to the Local AI Module page and download a model of your choice.\n3. Once the model has finished downloading, you can start asking questions through Continue.\n> [Reference](https://continue.dev/docs/reference/Model%20Providers/Msty)"
+            "### Msty\nMsty is the simplest way to get started with online or local LLMs on all desktop platforms - Windows, Mac, and Linux. No fussing around, one-click and you are up and running. To get started, follow these steps:\n1. Download from [Msty.app](https://msty.app/), open the application, and click 'Setup Local AI'.\n2. Go to the Local AI Module page and download a model of your choice.\n3. Once the model has finished downloading, you can start asking questions through Continue.\n> [Reference](https://continue.dev/docs/reference/Model%20Providers/Msty)",
+            "### WatsonX\nWatsonx, developed by IBM, offers a variety of pre-trained AI foundation models that can be used for natural language processing (NLP), computer vision, and speech recognition tasks."
           ],
           "type": "string"
         },
@@ -321,6 +323,16 @@
           "title": "Engine",
           "description": "Azure OpenAI engine",
           "type": "string"
+        },
+        "capabilities": {
+          "type": "object",
+          "description": "We will attempt to automatically detect the capabilities of the model based on its title and provider, but this may not always be accurate. You can override the model's capabilities here.",
+          "properties": {
+            "uploadImage": {
+              "type": "boolean",
+              "description": "Indicates whether the model can upload images."
+            }
+          }
         }
       },
       "required": ["title", "provider", "model"],
@@ -481,6 +493,7 @@
                       "gpt-3.5-turbo",
                       "gpt-3.5-turbo-16k",
                       "gpt-4o",
+                      "gpt-4o-mini",
                       "gpt-4",
                       "gpt-3.5-turbo-0613",
                       "gpt-4-32k",
@@ -512,6 +525,9 @@
                 "anyOf": [
                   {
                     "enum": [
+                      "llama3.1-8b",
+                      "llama3.1-70b",
+                      "llama3.1-405b",
                       "llama3-8b",
                       "llama3-70b",
                       "codellama-7b",
@@ -545,7 +561,8 @@
                 "enum": [
                   "gpt-4o",
                   "codestral-latest",
-                  "llama3-70b",
+                  "llama3.1-70b",
+                  "llama3.1-405b",
                   "gpt-3.5-turbo",
                   "phind-codellama-34b",
                   "gemini-pro",
@@ -581,6 +598,7 @@
                       "gpt-3.5-turbo",
                       "gpt-3.5-turbo-16k",
                       "gpt-4o",
+                      "gpt-4o-mini",
                       "gpt-4",
                       "gpt-3.5-turbo-0613",
                       "gpt-4-32k",
@@ -596,6 +614,9 @@
                       "codellama-70b",
                       "llama3-8b",
                       "llama3-70b",
+                      "llama3.1-8b",
+                      "llama3.1-70b",
+                      "llama3.1-405b",
                       "phind-codellama-34b",
                       "wizardcoder-7b",
                       "wizardcoder-13b",
@@ -746,6 +767,9 @@
                       "llama2-13b",
                       "llama3-8b",
                       "llama3-70b",
+                      "llama3.1-8b",
+                      "llama3.1-70b",
+                      "llama3.1-405b",
                       "codellama-7b",
                       "codellama-13b",
                       "codellama-34b",
@@ -810,6 +834,9 @@
                       "codellama-70b",
                       "llama3-8b",
                       "llama3-70b",
+                      "llama3.1-8b",
+                      "llama3.1-70b",
+                      "llama3.1-405b",
                       "phind-codellama-34b",
                       "wizardcoder-7b",
                       "wizardcoder-13b",
@@ -858,6 +885,9 @@
                       "codellama-70b",
                       "llama3-8b",
                       "llama3-70b",
+                      "llama3.1-8b",
+                      "llama3.1-70b",
+                      "llama3.1-405b",
                       "phi-2",
                       "phind-codellama-34b",
                       "wizardcoder-7b",
@@ -899,6 +929,7 @@
               "model": {
                 "enum": [
                   "codestral-latest",
+                  "codestral-mamba-latest",
                   "open-mistral-7b",
                   "open-mixtral-8x7b",
                   "open-mixtral-8x22b",
@@ -944,6 +975,9 @@
                   "gemma",
                   "llama3-8b",
                   "llama3-70b",
+                  "llama3.1-8b",
+                  "llama3.1-70b",
+                  "llama3.1-405b",
                   "AUTODETECT"
                 ]
               }
@@ -1094,6 +1128,7 @@
                       "gpt-3.5-turbo",
                       "gpt-3.5-turbo-16k",
                       "gpt-4o",
+                      "gpt-4o-mini",
                       "gpt-4",
                       "gpt-3.5-turbo-0613",
                       "gpt-4-32k",
@@ -1109,6 +1144,9 @@
                       "codellama-70b",
                       "llama3-8b",
                       "llama3-70b",
+                      "llama3.1-8b",
+                      "llama3.1-70b",
+                      "llama3.1-405b",
                       "phind-codellama-34b",
                       "wizardcoder-7b",
                       "wizardcoder-13b",
@@ -1149,6 +1187,48 @@
               }
             }
           }
+        },
+        {

----------------------------------------

File: extensions/intellij/src/main/resources/webview/continue-dev-square.png
Status: removed
Changes: +0 -0

----------------------------------------

File: extensions/intellij/src/main/resources/webview/continue.gif
Status: removed
Changes: +0 -0

----------------------------------------

File: extensions/intellij/src/main/resources/webview/play_button.png
Status: removed
Changes: +0 -0

----------------------------------------

File: extensions/vscode/CHANGELOG.md
Status: modified
Changes: +18 -0
Diff:
@@ -5,6 +5,24 @@ adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html),
 and is generated by [Changie](https://github.com/miniscruff/changie).
 
 
+## 0.8.45 - 2024-08-05
+### Added
+* Support for Llama 3.1 and gpt-4o-mini
+* Support for WatsonX+Granite models
+### Changed
+* Significant improvements to indexing performance

----------------------------------------

File: extensions/vscode/README.md
Status: modified
Changes: +1 -1
Diff:
@@ -50,4 +50,4 @@ Learn more about the models and providers [here](https://continue.dev/docs/setup
 
 ## License
 
-[Apache 2.0 ¬© 2023 Continue Dev, Inc.](./LICENSE)
+[Apache 2.0 ¬© 2023-2024 Continue Dev, Inc.](./LICENSE)

----------------------------------------

File: extensions/vscode/config_schema.json
Status: modified
Changes: +265 -19
Diff:
@@ -187,7 +187,8 @@
             "cloudflare",
             "deepseek",
             "azure",
-            "msty"
+            "msty",
+            "watsonx"
           ],
           "markdownEnumDescriptions": [
             "### OpenAI\nUse gpt-4, gpt-3.5-turbo, or any other OpenAI model. See [here](https://openai.com/product#made-for-developers) to obtain an API key.\n\n> [Reference](https://docs.continue.dev/reference/Model%20Providers/openai)",
@@ -211,7 +212,8 @@
             "### Cloudflare Workers AI\n\n[Reference](https://developers.cloudflare.com/workers-ai/)",
             "### Deepseek\n Deepseek's API provides the best pricing for their state-of-the-art Deepseek Coder models. To get started, obtain an API key from [their console](https://platform.deepseek.com/api_keys)",
             "### Azure OpenAI\n Azure OpenAI lets you securely run OpenAI's models on Azure. To get started, follow the steps [here](https://docs.continue.dev/reference/Model%20Providers/azure)",
-            "### Msty\nMsty is the simplest way to get started with online or local LLMs on all desktop platforms - Windows, Mac, and Linux. No fussing around, one-click and you are up and running. To get started, follow these steps:\n1. Download from [Msty.app](https://msty.app/), open the application, and click 'Setup Local AI'.\n2. Go to the Local AI Module page and download a model of your choice.\n3. Once the model has finished downloading, you can start asking questions through Continue.\n> [Reference](https://continue.dev/docs/reference/Model%20Providers/Msty)"
+            "### Msty\nMsty is the simplest way to get started with online or local LLMs on all desktop platforms - Windows, Mac, and Linux. No fussing around, one-click and you are up and running. To get started, follow these steps:\n1. Download from [Msty.app](https://msty.app/), open the application, and click 'Setup Local AI'.\n2. Go to the Local AI Module page and download a model of your choice.\n3. Once the model has finished downloading, you can start asking questions through Continue.\n> [Reference](https://continue.dev/docs/reference/Model%20Providers/Msty)",
+            "### WatsonX\nWatsonx, developed by IBM, offers a variety of pre-trained AI foundation models that can be used for natural language processing (NLP), computer vision, and speech recognition tasks."
           ],
           "type": "string"
         },
@@ -321,6 +323,16 @@
           "title": "Engine",
           "description": "Azure OpenAI engine",
           "type": "string"
+        },
+        "capabilities": {
+          "type": "object",
+          "description": "We will attempt to automatically detect the capabilities of the model based on its title and provider, but this may not always be accurate. You can override the model's capabilities here.",
+          "properties": {
+            "uploadImage": {
+              "type": "boolean",
+              "description": "Indicates whether the model can upload images."
+            }
+          }
         }
       },
       "required": ["title", "provider", "model"],
@@ -481,6 +493,7 @@
                       "gpt-3.5-turbo",
                       "gpt-3.5-turbo-16k",
                       "gpt-4o",
+                      "gpt-4o-mini",
                       "gpt-4",
                       "gpt-3.5-turbo-0613",
                       "gpt-4-32k",
@@ -512,6 +525,9 @@
                 "anyOf": [
                   {
                     "enum": [
+                      "llama3.1-8b",
+                      "llama3.1-70b",
+                      "llama3.1-405b",
                       "llama3-8b",
                       "llama3-70b",
                       "codellama-7b",
@@ -545,7 +561,8 @@
                 "enum": [
                   "gpt-4o",
                   "codestral-latest",
-                  "llama3-70b",
+                  "llama3.1-70b",
+                  "llama3.1-405b",
                   "gpt-3.5-turbo",
                   "phind-codellama-34b",
                   "gemini-pro",
@@ -581,6 +598,7 @@
                       "gpt-3.5-turbo",
                       "gpt-3.5-turbo-16k",
                       "gpt-4o",
+                      "gpt-4o-mini",
                       "gpt-4",
                       "gpt-3.5-turbo-0613",
                       "gpt-4-32k",
@@ -596,6 +614,9 @@
                       "codellama-70b",
                       "llama3-8b",
                       "llama3-70b",
+                      "llama3.1-8b",
+                      "llama3.1-70b",
+                      "llama3.1-405b",
                       "phind-codellama-34b",
                       "wizardcoder-7b",
                       "wizardcoder-13b",
@@ -746,6 +767,9 @@
                       "llama2-13b",
                       "llama3-8b",
                       "llama3-70b",
+                      "llama3.1-8b",
+                      "llama3.1-70b",
+                      "llama3.1-405b",
                       "codellama-7b",
                       "codellama-13b",
                       "codellama-34b",
@@ -810,6 +834,9 @@
                       "codellama-70b",
                       "llama3-8b",
                       "llama3-70b",
+                      "llama3.1-8b",
+                      "llama3.1-70b",
+                      "llama3.1-405b",
                       "phind-codellama-34b",
                       "wizardcoder-7b",
                       "wizardcoder-13b",
@@ -858,6 +885,9 @@
                       "codellama-70b",
                       "llama3-8b",
                       "llama3-70b",
+                      "llama3.1-8b",
+                      "llama3.1-70b",
+                      "llama3.1-405b",
                       "phi-2",
                       "phind-codellama-34b",
                       "wizardcoder-7b",
@@ -899,6 +929,7 @@
               "model": {
                 "enum": [
                   "codestral-latest",
+                  "codestral-mamba-latest",
                   "open-mistral-7b",
                   "open-mixtral-8x7b",
                   "open-mixtral-8x22b",
@@ -944,6 +975,9 @@
                   "gemma",
                   "llama3-8b",
                   "llama3-70b",
+                  "llama3.1-8b",
+                  "llama3.1-70b",
+                  "llama3.1-405b",
                   "AUTODETECT"
                 ]
               }
@@ -1094,6 +1128,7 @@
                       "gpt-3.5-turbo",
                       "gpt-3.5-turbo-16k",
                       "gpt-4o",
+                      "gpt-4o-mini",
                       "gpt-4",
                       "gpt-3.5-turbo-0613",
                       "gpt-4-32k",
@@ -1109,6 +1144,9 @@
                       "codellama-70b",
                       "llama3-8b",
                       "llama3-70b",
+                      "llama3.1-8b",
+                      "llama3.1-70b",
+                      "llama3.1-405b",
                       "phind-codellama-34b",
                       "wizardcoder-7b",
                       "wizardcoder-13b",
@@ -1149,6 +1187,48 @@
               }
             }
           }
+        },
+        {

----------------------------------------

File: extensions/vscode/continue_rc_schema.json
Status: modified
Changes: +303 -19
Diff:
@@ -190,7 +190,8 @@
             "cloudflare",
             "deepseek",
             "azure",
-            "msty"
+            "msty",
+            "watsonx"
           ],
           "markdownEnumDescriptions": [
             "### OpenAI\nUse gpt-4, gpt-3.5-turbo, or any other OpenAI model. See [here](https://openai.com/product#made-for-developers) to obtain an API key.\n\n> [Reference](https://docs.continue.dev/reference/Model%20Providers/openai)",
@@ -214,7 +215,8 @@
             "### Cloudflare Workers AI\n\n[Reference](https://developers.cloudflare.com/workers-ai/)",
             "### Deepseek\n Deepseek's API provides the best pricing for their state-of-the-art Deepseek Coder models. To get started, obtain an API key from [their console](https://platform.deepseek.com/api_keys)",
             "### Azure OpenAI\n Azure OpenAI lets you securely run OpenAI's models on Azure. To get started, follow the steps [here](https://docs.continue.dev/reference/Model%20Providers/azure)",
-            "### Msty\nMsty is the simplest way to get started with online or local LLMs on all desktop platforms - Windows, Mac, and Linux. No fussing around, one-click and you are up and running. To get started, follow these steps:\n1. Download from [Msty.app](https://msty.app/), open the application, and click 'Setup Local AI'.\n2. Go to the Local AI Module page and download a model of your choice.\n3. Once the model has finished downloading, you can start asking questions through Continue.\n> [Reference](https://continue.dev/docs/reference/Model%20Providers/Msty)"
+            "### Msty\nMsty is the simplest way to get started with online or local LLMs on all desktop platforms - Windows, Mac, and Linux. No fussing around, one-click and you are up and running. To get started, follow these steps:\n1. Download from [Msty.app](https://msty.app/), open the application, and click 'Setup Local AI'.\n2. Go to the Local AI Module page and download a model of your choice.\n3. Once the model has finished downloading, you can start asking questions through Continue.\n> [Reference](https://continue.dev/docs/reference/Model%20Providers/Msty)",
+            "### WatsonX\nWatsonx, developed by IBM, offers a variety of pre-trained AI foundation models that can be used for natural language processing (NLP), computer vision, and speech recognition tasks."
           ],
           "type": "string"
         },
@@ -327,6 +329,16 @@
           "title": "Engine",
           "description": "Azure OpenAI engine",
           "type": "string"
+        },
+        "capabilities": {
+          "type": "object",
+          "description": "We will attempt to automatically detect the capabilities of the model based on its title and provider, but this may not always be accurate. You can override the model's capabilities here.",
+          "properties": {
+            "uploadImage": {
+              "type": "boolean",
+              "description": "Indicates whether the model can upload images."
+            }
+          }
         }
       },
       "required": [
@@ -516,6 +528,7 @@
                       "gpt-3.5-turbo",
                       "gpt-3.5-turbo-16k",
                       "gpt-4o",
+                      "gpt-4o-mini",
                       "gpt-4",
                       "gpt-3.5-turbo-0613",
                       "gpt-4-32k",
@@ -551,6 +564,9 @@
                 "anyOf": [
                   {
                     "enum": [
+                      "llama3.1-8b",
+                      "llama3.1-70b",
+                      "llama3.1-405b",
                       "llama3-8b",
                       "llama3-70b",
                       "codellama-7b",
@@ -588,7 +604,8 @@
                 "enum": [
                   "gpt-4o",
                   "codestral-latest",
-                  "llama3-70b",
+                  "llama3.1-70b",
+                  "llama3.1-405b",
                   "gpt-3.5-turbo",
                   "phind-codellama-34b",
                   "gemini-pro",
@@ -628,6 +645,7 @@
                       "gpt-3.5-turbo",
                       "gpt-3.5-turbo-16k",
                       "gpt-4o",
+                      "gpt-4o-mini",
                       "gpt-4",
                       "gpt-3.5-turbo-0613",
                       "gpt-4-32k",
@@ -643,6 +661,9 @@
                       "codellama-70b",
                       "llama3-8b",
                       "llama3-70b",
+                      "llama3.1-8b",
+                      "llama3.1-70b",
+                      "llama3.1-405b",
                       "phind-codellama-34b",
                       "wizardcoder-7b",
                       "wizardcoder-13b",
@@ -816,6 +837,9 @@
                       "llama2-13b",
                       "llama3-8b",
                       "llama3-70b",
+                      "llama3.1-8b",
+                      "llama3.1-70b",
+                      "llama3.1-405b",
                       "codellama-7b",
                       "codellama-13b",
                       "codellama-34b",
@@ -886,6 +910,9 @@
                       "codellama-70b",
                       "llama3-8b",
                       "llama3-70b",
+                      "llama3.1-8b",
+                      "llama3.1-70b",
+                      "llama3.1-405b",
                       "phind-codellama-34b",
                       "wizardcoder-7b",
                       "wizardcoder-13b",
@@ -938,6 +965,9 @@
                       "codellama-70b",
                       "llama3-8b",
                       "llama3-70b",
+                      "llama3.1-8b",
+                      "llama3.1-70b",
+                      "llama3.1-405b",
                       "phi-2",
                       "phind-codellama-34b",
                       "wizardcoder-7b",
@@ -983,6 +1013,7 @@
               "model": {
                 "enum": [
                   "codestral-latest",
+                  "codestral-mamba-latest",
                   "open-mistral-7b",
                   "open-mixtral-8x7b",
                   "open-mixtral-8x22b",
@@ -1039,6 +1070,9 @@
                   "gemma",
                   "llama3-8b",
                   "llama3-70b",
+                  "llama3.1-8b",
+                  "llama3.1-70b",
+                  "llama3.1-405b",
                   "AUTODETECT"
                 ]
               }
@@ -1221,6 +1255,7 @@
                       "gpt-3.5-turbo",
                       "gpt-3.5-turbo-16k",
                       "gpt-4o",
+                      "gpt-4o-mini",
                       "gpt-4",
                       "gpt-3.5-turbo-0613",
                       "gpt-4-32k",
@@ -1236,6 +1271,9 @@
                       "codellama-70b",
                       "llama3-8b",
                       "llama3-70b",
+                      "llama3.1-8b",
+                      "llama3.1-70b",
+                      "llama3.1-405b",
                       "phind-codellama-34b",
                       "wizardcoder-7b",
                       "wizardcoder-13b",
@@ -1276,6 +1314,55 @@
               }
             }
           }
+        },
+        {
+          "if": {
+            "properties": {
+              "provider": {
+                "enum": [
+                  "watsonx"
+                ]
+              }
+            },
+            "required": [
+              "provider"
+            ]
+          },
+          "then": {

----------------------------------------

File: extensions/vscode/package-lock.json
Status: modified
Changes: +25 -8
Diff:
@@ -1,12 +1,12 @@
 {
   "name": "continue",
-  "version": "0.8.43",
+  "version": "0.9.194",
   "lockfileVersion": 3,
   "requires": true,
   "packages": {
     "": {
       "name": "continue",
-      "version": "0.8.43",
+      "version": "0.9.194",
       "license": "Apache-2.0",
       "dependencies": {
         "@electron/rebuild": "^3.2.10",
@@ -33,6 +33,7 @@
         "https-proxy-agent": "^7.0.2",
         "ignore": "^5.3.0",
         "jsdom": "^24.0.0",
+        "minisearch": "^7.0.0",
         "monaco-editor": "^0.45.0",
         "monaco-vscode-textmate-theme-converter": "^0.1.7",
         "ncp": "^2.0.0",
@@ -94,13 +95,12 @@
       "version": "1.0.13",
       "license": "Apache-2.0",
       "dependencies": {
-        "@aws-sdk/client-bedrock-runtime": "^3.574.0",
-        "@aws-sdk/credential-providers": "^3.596.0",
+        "@aws-sdk/client-bedrock-runtime": "^3.620.1",
+        "@aws-sdk/credential-providers": "^3.620.1",

----------------------------------------

File: extensions/vscode/package.json
Status: modified
Changes: +31 -8
Diff:
@@ -1,7 +1,8 @@
 {
   "name": "continue",
   "icon": "media/icon.png",
-  "version": "0.8.43",
+  "author": "Continue Dev, Inc",
+  "version": "0.8.45",
   "repository": {
     "type": "git",
     "url": "https://github.com/continuedev/continue"
@@ -74,6 +75,11 @@
           "default": true,
           "markdownDescription": "Continue collects anonymous usage data, cleaned of PII, to help us improve the product for our users. Read more  at [continue.dev ‚Ä∫ Telemetry](https://docs.continue.dev/telemetry)."
         },
+        "continue.enableContinueForTeams": {
+          "type": "boolean",
+          "default": false,
+          "markdownDescription": "_(Requires window reload)_ Enable Continue for teams beta features. To sign in, click the person icon in the bottom right of the sidebar."
+        },
         "continue.showInlineTip": {
           "type": "boolean",
           "default": true,
@@ -82,18 +88,28 @@
         "continue.enableQuickActions": {
           "type": "boolean",
           "default": false,
-          "markdownDescription": "Enable the experimental Quick Actions feature. Read our walkthrough to learn about configuration and how to share feedback: [continue.dev ‚Ä∫ Walkthrough: Quick Actions (experimental)](https://docs.continue.dev/walkthroughs/quick-actions)"
+          "markdownDescription": "Enable the experimental Quick Actions feature. Read our walkthrough to learn about configuration and how to share feedback: [continue.dev ‚Ä∫ Walkthrough: Quick Actions (experimental)](https://docs.continue.dev/features/quick-actions)"
         },
         "continue.enableTabAutocomplete": {
           "type": "boolean",
           "default": true,
-          "markdownDescription": "Enable Continue's tab autocomplete feature. Read our walkthrough to learn about configuration and how to share feedback: [continue.dev ‚Ä∫ Walkthrough: Tab Autocomplete (beta)](https://docs.continue.dev/walkthroughs/tab-autocomplete)"
+          "markdownDescription": "Enable Continue's tab autocomplete feature. Read our walkthrough to learn about configuration and how to share feedback: [continue.dev ‚Ä∫ Walkthrough: Tab Autocomplete (beta)](https://docs.continue.dev/features/tab-autocomplete)"

----------------------------------------

File: extensions/vscode/scripts/prepackage.js
Status: modified
Changes: +10 -5
Diff:
@@ -241,11 +241,15 @@ const exe = os === "win32" ? ".exe" : "";
     );
   });
 
-  fs.copyFileSync(
-    path.join(__dirname, "../../../core/vendor/tree-sitter.wasm"),
-    path.join(__dirname, "../out/tree-sitter.wasm"),
-  );
-  console.log("[info] Copied tree-sitter wasms");
+  const filesToCopy = [

----------------------------------------

File: extensions/vscode/src/ContinueGUIWebviewViewProvider.ts
Status: renamed
Changes: +74 -2
Diff:
@@ -1,5 +1,5 @@
 import type { FileEdit } from "core";
-import { IConfigHandler } from "core/config/IConfigHandler";
+import { ConfigHandler } from "core/config/ConfigHandler";
 import * as vscode from "vscode";
 import { getTheme } from "./util/getTheme";
 import { getExtensionVersion } from "./util/util";
@@ -12,19 +12,69 @@ export class ContinueGUIWebviewViewProvider
   public static readonly viewType = "continue.continueGUIView";
   public webviewProtocol: VsCodeWebviewProtocol;
 
+  private updateDebugLogsStatus() {
+    const settings = vscode.workspace.getConfiguration("continue");
+    this.enableDebugLogs = settings.get<boolean>("enableDebugLogs", false);
+    if (this.enableDebugLogs) {
+      this.outputChannel.show(true);
+    } else {
+      this.outputChannel.hide();
+    }
+  }
+
+  // Show or hide the output channel on enableDebugLogs
+  private setupDebugLogsListener() {
+    vscode.workspace.onDidChangeConfiguration((event) => {
+      if (event.affectsConfiguration('continue.enableDebugLogs')) {
+        const settings = vscode.workspace.getConfiguration("continue");
+        const enableDebugLogs = settings.get<boolean>("enableDebugLogs", false);
+        if (enableDebugLogs) {
+          this.outputChannel.show(true);
+        } else {
+          this.outputChannel.hide();
+        }
+      }
+    });
+  }
+
+  private async handleWebviewMessage(message: any) {
+  if (message.messageType === "log") {
+    const settings = vscode.workspace.getConfiguration("continue");

----------------------------------------

File: extensions/vscode/src/activation/activate.ts
Status: modified
Changes: +9 -4
Diff:
@@ -1,4 +1,4 @@
-import { getTsConfigPath, migrate } from "core/util/paths";
+import { getContinueRcPath, getTsConfigPath, migrate } from "core/util/paths";
 import { Telemetry } from "core/util/posthog";
 import path from "node:path";
 import * as vscode from "vscode";
@@ -12,6 +12,7 @@ import { setupInlineTips } from "./inlineTips";
 export async function activateExtension(context: vscode.ExtensionContext) {
   // Add necessary files
   getTsConfigPath();

----------------------------------------

File: extensions/vscode/src/activation/languageClient.ts
Status: modified
Changes: +2 -1
Diff:
@@ -65,7 +65,7 @@ function startPythonLanguageServer(context: ExtensionContext): LanguageClient {
       configurationSection: "pyls",
     },
   };
-  return new LanguageClient(command, serverOptions, clientOptions);
+  return new LanguageClient(command, serverOptions, clientOptions)
 }
 
 async function startPylance(context: ExtensionContext) {
@@ -112,3 +112,4 @@ async function startPylance(context: ExtensionContext) {

----------------------------------------

File: extensions/vscode/src/autocomplete/completionProvider.ts
Status: modified
Changes: +3 -3
Diff:
@@ -4,7 +4,7 @@ import {
   CompletionProvider,
   type AutocompleteInput,
 } from "core/autocomplete/completionProvider";
-import { IConfigHandler } from "core/config/IConfigHandler";
+import { ConfigHandler } from "core/config/ConfigHandler";
 import { v4 as uuidv4 } from "uuid";
 import * as vscode from "vscode";
 import type { TabAutocompleteModel } from "../util/loadAutocompleteModel";
@@ -35,7 +35,7 @@ export class ContinueCompletionProvider

----------------------------------------

File: extensions/vscode/src/commands.ts
Status: modified
Changes: +71 -61
Diff:
@@ -6,8 +6,9 @@ import * as vscode from "vscode";
 
 import { ContextMenuConfig, IDE } from "core";
 import { CompletionProvider } from "core/autocomplete/completionProvider";
-import { IConfigHandler } from "core/config/IConfigHandler";
+import { ConfigHandler } from "core/config/ConfigHandler";
 import { ContinueServerClient } from "core/continueServer/stubs/client";
+import { Core } from "core/core";
 import { GlobalContext } from "core/util/GlobalContext";
 import { getConfigJsonPath, getDevDataFilePath } from "core/util/paths";
 import { Telemetry } from "core/util/posthog";
@@ -19,10 +20,10 @@ import {
   quickPickStatusText,
   setupStatusBar,
 } from "./autocomplete/statusBar";
-import { ContinueGUIWebviewViewProvider } from "./debugPanel";
+import { ContinueGUIWebviewViewProvider } from "./ContinueGUIWebviewViewProvider";
 import { DiffManager } from "./diff/horizontal";
 import { VerticalPerLineDiffManager } from "./diff/verticalPerLine/manager";
-import { QuickEdit } from "./quickEdit/QuickEdit";
+import { QuickEdit, QuickEditShowParams } from "./quickEdit/QuickEditQuickPick";
 import { Battery } from "./util/battery";
 import type { VsCodeWebviewProtocol } from "./webviewProtocol";
 
@@ -82,7 +83,6 @@ function addCodeToContextFromRange(
 }
 
 async function addHighlightedCodeToContext(
-  edit: boolean,
   webviewProtocol: VsCodeWebviewProtocol | undefined,
 ) {
   const editor = vscode.window.activeTextEditor;
@@ -164,11 +164,13 @@ const commandsMap: (
   ide: IDE,
   extensionContext: vscode.ExtensionContext,
   sidebar: ContinueGUIWebviewViewProvider,
-  configHandler: IConfigHandler,
+  configHandler: ConfigHandler,
   diffManager: DiffManager,
   verticalDiffManager: VerticalPerLineDiffManager,
   continueServerClientPromise: Promise<ContinueServerClient>,
   battery: Battery,
+  quickEdit: QuickEdit,
+  core: Core,
 ) => { [command: string]: (...args: any) => any } = (
   ide,
   extensionContext,
@@ -178,6 +180,8 @@ const commandsMap: (
   verticalDiffManager,
   continueServerClientPromise,
   battery,
+  quickEdit,
+  core,
 ) => {
   /**
    * Streams an inline edit to the vertical diff manager.
@@ -218,18 +222,6 @@ const commandsMap: (
     );
   }
 
-  const historyUpEventEmitter = new vscode.EventEmitter<void>();
-  const historyDownEventEmitter = new vscode.EventEmitter<void>();
-  const quickEdit = new QuickEdit(
-    verticalDiffManager,
-    configHandler,
-    sidebar.webviewProtocol,
-    ide,
-    extensionContext,
-    historyUpEventEmitter.event,
-    historyDownEventEmitter.event,
-  );
-
   return {
     "continue.acceptDiff": async (newFilepath?: string | vscode.Uri) => {
       captureCommandTelemetry("acceptDiff");
@@ -269,26 +261,10 @@ const commandsMap: (
 
       vscode.commands.executeCommand("continue.continueGUIView.focus");
     },
-    "continue.defaultQuickActionDocstring": async (range: vscode.Range) => {

----------------------------------------

File: extensions/vscode/src/diff/oldVerticalPerLine.ts
Status: removed
Changes: +0 -94
Diff:
@@ -1,94 +0,0 @@
-import { matchLine } from "core/diff/util";
-
-interface NextLineEvent {
-  type: "nextLine";
-}
-
-interface InsertDeletionEvent {
-  type: "insertDeletion";
-  lines: string[];
-  aboveLineAtIndex: number;
-}
-
-interface ReplaceLineEvent {
-  type: "replaceLine";
-  index: number;
-  newLine: string;
-}
-
-interface InsertLineEvent {
-  type: "insertLine";
-  aboveLineAtIndex: number;
-  line: string;
-}
-
-type VerticalPerLineDiffEvent =
-  | NextLineEvent
-  | InsertDeletionEvent
-  | ReplaceLineEvent
-  | InsertLineEvent;
-

----------------------------------------

File: extensions/vscode/src/diff/verticalPerLine/manager.ts
Status: modified
Changes: +2 -2
Diff:
@@ -1,4 +1,4 @@
-import { IConfigHandler } from "core/config/IConfigHandler";
+import { ConfigHandler } from "core/config/ConfigHandler";
 import { pruneLinesFromBottom, pruneLinesFromTop } from "core/llm/countTokens";
 import { getMarkdownLanguageTagForFile } from "core/util";
 import { streamDiffLines } from "core/util/verticalEdit";
@@ -21,7 +21,7 @@ export class VerticalPerLineDiffManager {
 
   private userChangeListener: vscode.Disposable | undefined;
 

----------------------------------------

File: extensions/vscode/src/extension.ts
Status: modified
Changes: +7 -3
Diff:
@@ -36,9 +36,13 @@ export function activate(context: vscode.ExtensionContext) {
 }
 
 export function deactivate() {
-  Telemetry.capture("deactivate", {
-    extensionVersion: getExtensionVersion(),
-  });
+  Telemetry.capture(
+    "deactivate",
+    {

----------------------------------------

File: extensions/vscode/src/extension/VsCodeExtension.ts
Status: modified
Changes: +54 -13
Diff:
@@ -1,5 +1,5 @@
 import { IContextProvider } from "core";
-import { IConfigHandler } from "core/config/IConfigHandler";
+import { ConfigHandler } from "core/config/ConfigHandler";
 import { Core } from "core/core";
 import { FromCoreProtocol, ToCoreProtocol } from "core/protocol";
 import { InProcessMessenger } from "core/util/messenger";
@@ -9,18 +9,23 @@ import { v4 as uuidv4 } from "uuid";
 import * as vscode from "vscode";
 import { ContinueCompletionProvider } from "../autocomplete/completionProvider";
 import {
-  StatusBarStatus,
   monitorBatteryChanges,
   setupStatusBar,
+  StatusBarStatus,
 } from "../autocomplete/statusBar";
 import { registerAllCommands } from "../commands";
+import { ContinueGUIWebviewViewProvider } from "../ContinueGUIWebviewViewProvider";
 import { registerDebugTracker } from "../debug/debug";
-import { ContinueGUIWebviewViewProvider } from "../debugPanel";
 import { DiffManager } from "../diff/horizontal";
 import { VerticalPerLineDiffManager } from "../diff/verticalPerLine/manager";
 import { VsCodeIde } from "../ideProtocol";
 import { registerAllCodeLensProviders } from "../lang-server/codeLens";
+import { QuickEdit } from "../quickEdit/QuickEditQuickPick";
 import { setupRemoteConfigSync } from "../stubs/activation";
+import {
+  getControlPlaneSessionInfo,
+  WorkOsAuthProvider,
+} from "../stubs/WorkOsAuthProvider";
 import { Battery } from "../util/battery";
 import { TabAutocompleteModel } from "../util/loadAutocompleteModel";
 import type { VsCodeWebviewProtocol } from "../webviewProtocol";
@@ -29,7 +34,7 @@ import { VsCodeMessenger } from "./VsCodeMessenger";
 export class VsCodeExtension {
   // Currently some of these are public so they can be used in testing (test/test-suites)
 
-  private configHandler: IConfigHandler;
+  private configHandler: ConfigHandler;
   private extensionContext: vscode.ExtensionContext;
   private ide: VsCodeIde;
   private tabAutocompleteModel: TabAutocompleteModel;
@@ -40,9 +45,14 @@ export class VsCodeExtension {
   webviewProtocolPromise: Promise<VsCodeWebviewProtocol>;
   private core: Core;
   private battery: Battery;
-  private quickActionsCodeLensDisposable?: vscode.Disposable;
+  private workOsAuthProvider: WorkOsAuthProvider;
 
   constructor(context: vscode.ExtensionContext) {
+    // Register auth provider
+    this.workOsAuthProvider = new WorkOsAuthProvider(context);
+    this.workOsAuthProvider.initialize();
+    context.subscriptions.push(this.workOsAuthProvider);
+
     let resolveWebviewProtocol: any = undefined;
     this.webviewProtocolPromise = new Promise<VsCodeWebviewProtocol>(
       (resolve) => {

----------------------------------------

File: extensions/vscode/src/extension/VsCodeMessenger.ts
Status: modified
Changes: +28 -12
Diff:
@@ -1,5 +1,9 @@
-import { IConfigHandler } from "core/config/IConfigHandler";
-import { FromCoreProtocol, ToCoreProtocol } from "core/protocol";
+import { ConfigHandler } from "core/config/ConfigHandler";
+import {
+  FromCoreProtocol,
+  FromWebviewProtocol,
+  ToCoreProtocol,
+} from "core/protocol";
 import { ToWebviewFromCoreProtocol } from "core/protocol/coreWebview";
 import { ToIdeFromWebviewOrCoreProtocol } from "core/protocol/ide";
 import { ToIdeFromCoreProtocol } from "core/protocol/ideCore";
@@ -14,11 +18,12 @@ import * as path from "node:path";
 import * as vscode from "vscode";
 import { VerticalPerLineDiffManager } from "../diff/verticalPerLine/manager";
 import { VsCodeIde } from "../ideProtocol";
-import { getExtensionUri } from "../util/vscode";
 import {
-  ToCoreOrIdeFromWebviewProtocol,
-  VsCodeWebviewProtocol,
-} from "../webviewProtocol";
+  getControlPlaneSessionInfo,
+  WorkOsAuthProvider,
+} from "../stubs/WorkOsAuthProvider";
+import { getExtensionUri } from "../util/vscode";

----------------------------------------

File: extensions/vscode/src/ideProtocol.ts
Status: modified
Changes: +18 -3
Diff:
@@ -270,12 +270,14 @@ class VsCodeIde implements IDE {
   }
 
   async isTelemetryEnabled(): Promise<boolean> {
-    return (
+    const globalEnabled = vscode.env.isTelemetryEnabled;
+    const continueEnabled: boolean =
       (await vscode.workspace
         .getConfiguration("continue")
-        .get("telemetryEnabled")) ?? true
-    );
+        .get("telemetryEnabled")) ?? true;

----------------------------------------

File: extensions/vscode/src/lang-server/codeLens/providers/QuickActionsCodeLensProvider.ts
Status: modified
Changes: +51 -24
Diff:
@@ -1,11 +1,12 @@
 import { ContinueConfig, QuickActionConfig } from "core";
+import { Telemetry } from "core/util/posthog";
 import * as vscode from "vscode";
+import { QuickEditShowParams } from "../../../quickEdit/QuickEditQuickPick";
 import {
   CONTINUE_WORKSPACE_KEY,
   getContinueWorkspaceConfig,
 } from "../../../util/workspaceConfig";
 import { isTutorialFile } from "./TutorialCodeLensProvider";
-import { Telemetry } from "core/util/posthog";
 
 export const ENABLE_QUICK_ACTIONS_KEY = "enableQuickActions";
 
@@ -47,13 +48,14 @@ export class QuickActionsCodeLensProvider implements vscode.CodeLensProvider {
   /**
    * Defines which code elements are eligible for Quick Actions.
    *
-   * Right now, we only allow functions, methods and classes
-   * to keep things simple.
+   * Right now, we only allow functions, methods, constructors
+   * and classes to keep things simple.
    */
-  static quickActionSymbolKinds = [
+  quickActionSymbolKinds = [
     vscode.SymbolKind.Function,
     vscode.SymbolKind.Method,
     vscode.SymbolKind.Class,
+    vscode.SymbolKind.Constructor,
   ];
 
   customQuickActionsConfig?: QuickActionConfig[];
@@ -83,20 +85,51 @@ export class QuickActionsCodeLensProvider implements vscode.CodeLensProvider {
     });
   }
 
-  getDefaultCommands(range: vscode.Range): vscode.Command[] {
-    const explain: vscode.Command = {
-      command: "continue.defaultQuickActionExplain",

----------------------------------------

File: extensions/vscode/src/lang-server/codeLens/providers/TutorialCodeLensProvider.ts
Status: modified
Changes: +2 -1
Diff:
@@ -3,6 +3,7 @@ import path from "path";
 import * as vscode from "vscode";
 import { getPlatform } from "../../../util/util";
 import { getExtensionUri } from "../../../util/vscode";
+import { QuickEditShowParams } from "../../../quickEdit/QuickEditQuickPick";
 
 interface TutorialCodeLensItems {
   lineIncludes: string;
@@ -44,7 +45,7 @@ const actions: TutorialCodeLensItems[] = [
       {

----------------------------------------

File: extensions/vscode/src/quickEdit/ContextProvidersQuickPick.ts
Status: added
Changes: +89 -0
Diff:
@@ -0,0 +1,89 @@
+import { ContinueConfig, IDE } from "core";
+import { fetchwithRequestOptions } from "core/util/fetchWithOptions";
+import { QuickPickItem, window } from "vscode";
+
+export async function getContextProviderItems({
+  contextProviders,
+}: ContinueConfig): Promise<QuickPickItem[]> {
+  if (!contextProviders) {
+    return [];
+  }
+
+  const quickPickItems = contextProviders
+    .filter((provider) => provider.description.type === "normal")
+    .map((provider) => {
+      return {
+        label: provider.description.displayTitle,
+        detail: provider.description.description,
+      };
+    });
+
+  return quickPickItems;
+}
+
+export async function getContextProvidersString(
+  selectedProviders: QuickPickItem[] | undefined,
+  config: ContinueConfig,
+  ide: IDE,
+): Promise<string> {
+  const contextItems = (

----------------------------------------

File: extensions/vscode/src/quickEdit/HistoryQuickPick.ts
Status: added
Changes: +42 -0
Diff:
@@ -0,0 +1,42 @@
+import { QuickPickItem, window, ExtensionContext } from "vscode";
+
+const HISTORY_KEY = "quickEditHistory";
+const MAX_HISTORY_LENGTH = 50;
+
+export function appendToHistory(
+  prompt: string,
+  { globalState }: ExtensionContext,
+) {
+  let history: string[] = globalState.get(HISTORY_KEY, []);
+
+  // Remove duplicate if exists
+  if (history[history.length - 1] === prompt) {

----------------------------------------

File: extensions/vscode/src/quickEdit/InputBoxWithHistory.ts
Status: removed
Changes: +0 -181
Diff:
@@ -1,181 +0,0 @@
-import * as vscode from "vscode";
-
-// Because we have to hide and show the input box again to allow history, this class can act like a more contiguous input box.
-export default class InputBoxWithHistory implements vscode.Disposable {
-  private static MaxSize = 50;
-  private static HistoryKey = "quickEditHistory";
-  private currentIndex: number;
-  private history: string[] = [];
-
-  private cancellationReason: "up" | "down" | undefined = undefined;
-  private readonly completionEventEmitter = new vscode.EventEmitter<
-    string | undefined
-  >();
-  private currentInputBoxCancellationTokenSource:
-    | vscode.CancellationTokenSource
-    | undefined = undefined;
-
-  private disposables: vscode.Disposable[] = [];
-
-  constructor(
-    private readonly context: vscode.ExtensionContext,
-    private readonly historyUpEvent: vscode.Event<void>,
-    private readonly historyDownEvent: vscode.Event<void>,
-    private readonly options: vscode.InputBoxOptions,
-  ) {
-    this.history = this.context.globalState.get(
-      InputBoxWithHistory.HistoryKey,
-      [],
-    );
-    this.currentIndex = this.history.length;
-
-    this.disposables.push(
-      this.historyUpEvent(() => {
-        const value = this.up();
-        this.cancellationReason = "up";
-
-        if (typeof value === "undefined") {
-          return;
-        }
-        this._displayInputBox(value);
-      }),
-    );
-    this.disposables.push(
-      this.historyDownEvent(() => {
-        const value = this.down();
-        this.cancellationReason = "down";
-
-        if (typeof value === "undefined") {
-          return;
-        }
-        this._displayInputBox(value);
-      }),
-    );
-  }
-
-  dispose() {
-    if (this.currentInputBoxCancellationTokenSource) {
-      this.currentInputBoxCancellationTokenSource.dispose();
-    }

----------------------------------------

File: extensions/vscode/src/quickEdit/ModelSelectionQuickPick.ts
Status: added
Changes: +32 -0
Diff:
@@ -0,0 +1,32 @@
+import { ContinueConfig } from "core";
+import { QuickPickItem, window } from "vscode";
+
+export async function getModelQuickPickVal(
+  curModelTitle: string,
+  config: ContinueConfig,
+) {
+  const modelItems: QuickPickItem[] = config.models.map((model) => {
+    const isCurModel = curModelTitle === model.title;
+

----------------------------------------

File: extensions/vscode/src/quickEdit/QuickEdit.ts
Status: removed
Changes: +0 -194
Diff:
@@ -1,194 +0,0 @@
-import { IDE } from "core";
-import { IConfigHandler } from "core/config/IConfigHandler";
-import { fetchwithRequestOptions } from "core/util/fetchWithOptions";
-import * as vscode from "vscode";
-import { VerticalPerLineDiffManager } from "../diff/verticalPerLine/manager";
-import { getPlatform } from "../util/util";
-import { VsCodeWebviewProtocol } from "../webviewProtocol";
-import InputBoxWithHistory from "./InputBoxWithHistory";
-
-interface QuickEditFlowStuff {
-  defaultModelTitle: string;
-  quickPickItems: vscode.QuickPickItem[];
-  previousInput: string | undefined;
-  injectedPrompt?: string | undefined;
-}
-
-export class QuickEdit {
-  constructor(
-    private readonly verticalDiffManager: VerticalPerLineDiffManager,
-    private readonly configHandler: IConfigHandler,
-    private readonly webviewProtocol: VsCodeWebviewProtocol,
-    private readonly ide: IDE,
-    private readonly context: vscode.ExtensionContext,
-    private readonly historyUpEvent: vscode.Event<void>,
-    private readonly historyDownEvent: vscode.Event<void>,
-  ) {}
-
-  private async _getDefaultModelTitle(): Promise<string> {
-    const config = await this.configHandler.loadConfig();
-    let defaultModelTitle =
-      config.experimental?.modelRoles?.inlineEdit ??
-      (await this.webviewProtocol.request("getDefaultModelTitle", undefined));
-    if (!defaultModelTitle) {
-      defaultModelTitle = config.models[0]?.title!;
-    }
-    return defaultModelTitle;
-  }
-
-  private async _getQuickPickItems(): Promise<vscode.QuickPickItem[]> {
-    const contextProviders = (await this.configHandler.loadConfig())
-      .contextProviders;
-    const quickPickItems =
-      contextProviders
-        ?.filter((provider) => provider.description.type === "normal")
-        .map((provider) => {
-          return {
-            label: provider.description.displayTitle,
-            description: provider.description.title,
-            detail: provider.description.description,
-          };
-        }) || [];
-    return quickPickItems;
-  }
-
-  private async _getStuff(
-    injectedPrompt: string | undefined,
-  ): Promise<QuickEditFlowStuff> {
-    const editor = vscode.window.activeTextEditor;
-    const existingHandler = this.verticalDiffManager.getHandlerForFile(
-      editor?.document.uri.fsPath ?? "",
-    );
-    const previousInput = existingHandler?.input;
-    const stuff: QuickEditFlowStuff = {
-      defaultModelTitle: await this._getDefaultModelTitle(),

----------------------------------------

File: extensions/vscode/src/quickEdit/QuickEditQuickPick.ts
Status: added
Changes: +454 -0
Diff:
@@ -0,0 +1,454 @@
+/* eslint-disable @typescript-eslint/naming-convention */
+import { IDE } from "core";
+import { walkDir } from "core/indexing/walkDir";
+import { Telemetry } from "core/util/posthog";
+import * as vscode from "vscode";
+import { VerticalPerLineDiffManager } from "../diff/verticalPerLine/manager";
+import { VsCodeWebviewProtocol } from "../webviewProtocol";
+import { getContextProviderQuickPickVal } from "./ContextProvidersQuickPick";
+import { appendToHistory, getHistoryQuickPickVal } from "./HistoryQuickPick";
+import { getModelQuickPickVal } from "./ModelSelectionQuickPick";
+
+// @ts-ignore - error finding typings
+import { ConfigHandler } from "core/config/ConfigHandler";
+// @ts-ignore
+import MiniSearch from "minisearch";
+
+/**
+ * Used to track what action to take after a user interacts
+ * with the initial Quick Pick
+ */
+enum QuickEditInitialItemLabels {
+  History = "History",
+  ContextProviders = "Context providers",
+  Model = "Model",
+  Submit = "Submit",
+}
+
+export type QuickEditShowParams = {
+  initialPrompt?: string;
+  /**
+   * Used for Quick Actions where the user has not highlighted code.
+   * Instead the range comes from the document symbol.
+   */
+  range?: vscode.Range;
+};
+
+type FileMiniSearchResult = { filename: string };
+
+/**
+ * Quick Edit is a collection of Quick Picks that allow the user to
+ * quickly edit a file.
+ */
+export class QuickEdit {
+  private static fileSearchChar = "@";
+
+  /**
+   * Matches the search char followed by non-space chars, excluding matches ending with a space.
+   * This is used to detect file search queries while allowing subsequent prompt text
+   */
+  private static hasFileSearchQueryRegex = new RegExp(
+    `${QuickEdit.fileSearchChar}[^${QuickEdit.fileSearchChar}\\s]+(?!\\s)$`,
+  );
+
+  private static maxFileSearchResults = 20;
+
+  private range?: vscode.Range;
+  private initialPrompt?: string;
+
+  private miniSearch = new MiniSearch<FileMiniSearchResult>({
+    fields: ["filename"],
+    storeFields: ["filename"],
+    searchOptions: {
+      prefix: true,
+      fuzzy: 2,
+    },
+  });
+
+  private previousInput?: string;
+
+  /**
+   * Handles situations where the user navigates to a different editor
+   * while interacting with the Quick Pick
+   */
+  private editorWhenOpened!: vscode.TextEditor;
+
+  /**
+   * Required to store the string content of a context provider
+   * while naviagting beween Quick Picks.
+   */
+  private contextProviderStr?: string;
+
+  /**
+   * Stores the current model title for potential changes
+   */
+  private _curModelTitle?: string;
+
+  constructor(
+    private readonly verticalDiffManager: VerticalPerLineDiffManager,
+    private readonly configHandler: ConfigHandler,
+    private readonly webviewProtocol: VsCodeWebviewProtocol,
+    private readonly ide: IDE,
+    private readonly context: vscode.ExtensionContext,
+  ) {
+    this.initializeFileSearchState();
+  }
+
+  private async initializeFileSearchState() {
+    const workspaceDirs = await this.ide.getWorkspaceDirs();
+
+    const results = await Promise.all(
+      workspaceDirs.map((dir) => {
+        return walkDir(dir, this.ide);
+      }),
+    );
+
+    const filenames = results.flat().map((file) => ({
+      id: file,
+      filename: vscode.workspace.asRelativePath(file),
+    }));
+
+    this.miniSearch.addAll(filenames);
+  }
+
+  private setActiveEditorAndPrevInput(editor: vscode.TextEditor) {
+    const existingHandler = this.verticalDiffManager.getHandlerForFile(
+      editor.document.uri.fsPath ?? "",
+    );
+
+    this.editorWhenOpened = editor;
+    this.previousInput = existingHandler?.input;
+  }
+
+  /**
+   * Gets the model title the user has chosen, or their default model
+   */
+  private async _getCurModelTitle() {
+    const config = await this.configHandler.loadConfig();
+
+    if (this._curModelTitle) {
+      return this._curModelTitle;
+    }
+
+    let defaultModelTitle =
+      config.experimental?.modelRoles?.inlineEdit ??
+      (await this.webviewProtocol.request("getDefaultModelTitle", undefined));
+
+    if (!defaultModelTitle) {
+      defaultModelTitle = config.models[0]?.title!;
+    }
+
+    return defaultModelTitle;
+  }
+
+  /**
+   * Generates a title for the Quick Pick, including the
+   * file name and selected line(s) if available.
+   *
+   * @example
+   * // "Edit myFile.ts", "Edit myFile.ts:5-10", "Edit myFile.ts:15"
+   */

----------------------------------------

File: extensions/vscode/src/quickEdit/index.ts
Status: added
Changes: +0 -0

----------------------------------------

File: extensions/vscode/src/stubs/WorkOsAuthProvider.ts
Status: added
Changes: +421 -0
Diff:
@@ -0,0 +1,421 @@
+import fetch from "node-fetch";
+import { v4 as uuidv4 } from "uuid";
+import {
+  authentication,
+  AuthenticationProvider,
+  AuthenticationProviderAuthenticationSessionsChangeEvent,
+  AuthenticationSession,
+  Disposable,
+  env,
+  EventEmitter,
+  ExtensionContext,
+  ProgressLocation,
+  Uri,
+  UriHandler,
+  window,
+} from "vscode";
+import { PromiseAdapter, promiseFromEvent } from "./promiseUtils";
+
+export const AUTH_TYPE = "continue";
+const AUTH_NAME = "Continue";
+const CLIENT_ID =
+  process.env.CONTROL_PLANE_ENV === "local"
+    ? "client_01J0FW6XCPMJMQ3CG51RB4HBZQ"
+    : "client_01J0FW6XN8N2XJAECF7NE0Y65J";
+const SESSIONS_SECRET_KEY = `${AUTH_TYPE}.sessions`;
+
+class UriEventHandler extends EventEmitter<Uri> implements UriHandler {
+  public handleUri(uri: Uri) {
+    this.fire(uri);
+  }
+}
+
+import {
+  CONTROL_PLANE_URL,
+  ControlPlaneSessionInfo,
+} from "core/control-plane/client";
+import crypto from "crypto";
+
+// Function to generate a random string of specified length
+function generateRandomString(length: number): string {
+  const possibleCharacters =
+    "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~";
+  let randomString = "";
+  for (let i = 0; i < length; i++) {
+    const randomIndex = Math.floor(Math.random() * possibleCharacters.length);
+    randomString += possibleCharacters[randomIndex];
+  }
+  return randomString;
+}
+
+// Function to generate a code challenge from the code verifier
+
+async function generateCodeChallenge(verifier: string) {
+  // Create a SHA-256 hash of the verifier
+  const hash = crypto.createHash("sha256").update(verifier).digest();
+
+  // Convert the hash to a base64 URL-encoded string
+  const base64String = hash
+    .toString("base64")
+    .replace(/\+/g, "-")
+    .replace(/\//g, "_")
+    .replace(/=+$/, "");
+
+  return base64String;
+}
+
+interface ContinueAuthenticationSession extends AuthenticationSession {
+  accessToken: string;
+  refreshToken: string;
+  expiresIn: number;
+}
+
+export class WorkOsAuthProvider implements AuthenticationProvider, Disposable {
+  private _sessionChangeEmitter =
+    new EventEmitter<AuthenticationProviderAuthenticationSessionsChangeEvent>();
+  private _disposable: Disposable;
+  private _pendingStates: string[] = [];
+  private _codeExchangePromises = new Map<
+    string,
+    { promise: Promise<string>; cancel: EventEmitter<void> }
+  >();
+  private _uriHandler = new UriEventHandler();
+  private _sessions: ContinueAuthenticationSession[] = [];
+
+  private static EXPIRATION_TIME_MS = 1000 * 60 * 5; // 5 minutes
+
+  constructor(private readonly context: ExtensionContext) {
+    this._disposable = Disposable.from(
+      authentication.registerAuthenticationProvider(
+        AUTH_TYPE,
+        AUTH_NAME,
+        this,
+        { supportsMultipleAccounts: false },
+      ),
+      window.registerUriHandler(this._uriHandler),
+    );
+  }
+
+  get onDidChangeSessions() {
+    return this._sessionChangeEmitter.event;
+  }
+
+  get redirectUri() {
+    const publisher = this.context.extension.packageJSON.publisher;
+    const name = this.context.extension.packageJSON.name;
+    return `${env.uriScheme}://${publisher}.${name}`;
+  }
+
+  async initialize() {
+    let sessions = await this.context.secrets.get(SESSIONS_SECRET_KEY);
+    this._sessions = sessions ? JSON.parse(sessions) : [];
+    await this._refreshSessions();
+  }
+
+  private async _refreshSessions(): Promise<void> {
+    if (!this._sessions.length) {
+      return;
+    }
+    for (const session of this._sessions) {
+      try {
+        const newSession = await this._refreshSession(session.refreshToken);
+        session.accessToken = newSession.accessToken;
+        session.refreshToken = newSession.refreshToken;
+        session.expiresIn = newSession.expiresIn;
+      } catch (e: any) {
+        if (e.message === "Network failure") {
+          setTimeout(() => this._refreshSessions(), 60 * 1000);
+          return;
+        }
+      }
+    }
+    await this.context.secrets.store(
+      SESSIONS_SECRET_KEY,
+      JSON.stringify(this._sessions),
+    );
+    this._sessionChangeEmitter.fire({
+      added: [],
+      removed: [],
+      changed: this._sessions,

----------------------------------------

File: extensions/vscode/src/stubs/promiseUtils.ts
Status: added
Changes: +57 -0
Diff:
@@ -0,0 +1,57 @@
+import { Disposable, Event, EventEmitter } from "vscode";
+
+export interface PromiseAdapter<T, U> {
+  (
+    value: T,
+    resolve: (value: U | PromiseLike<U>) => void,
+    reject: (reason: any) => void,
+  ): any;
+}
+
+const passthrough = (value: any, resolve: (value?: any) => void) =>
+  resolve(value);
+
+/**
+ * Return a promise that resolves with the next emitted event, or with some future
+ * event as decided by an adapter.
+ *
+ * If specified, the adapter is a function that will be called with

----------------------------------------

File: extensions/vscode/src/suggestions.ts
Status: modified
Changes: +45 -15
Diff:
@@ -18,7 +18,9 @@ export const currentSuggestion: Map<string, number> = new Map(); // Map from edi
 
 // When tab is reopened, rerender the decorations:
 vscode.window.onDidChangeActiveTextEditor((editor) => {
-  if (!editor) return;
+  if (!editor) {
+    return;
+  }
   rerenderDecorations(editor.document.uri.toString());
 });
 vscode.workspace.onDidOpenTextDocument((doc) => {
@@ -57,7 +59,9 @@ export function rerenderDecorations(editorUri: string) {
   const editor = vscode.window.visibleTextEditors.find(
     (editor) => editor.document.uri.toString() === editorUri,
   );
-  if (!suggestions || !editor) return;
+  if (!suggestions || !editor) {
+    return;
+  }
 
   const rangesWithoutEmptyLastLine = (ranges: vscode.Range[]) => {
     const newRanges: vscode.Range[] = [];
@@ -116,7 +120,9 @@ export function rerenderDecorations(editorUri: string) {
   editor.setDecorations(newSelDecorationType, newSels);
 
   // Reveal the range in the editor
-  if (idx === undefined) return;
+  if (idx === undefined) {
+    return;
+  }
   editor.revealRange(
     suggestions[idx].newRange,
     vscode.TextEditorRevealType.Default,
@@ -129,35 +135,47 @@ export function rerenderDecorations(editorUri: string) {
 
 export function suggestionDownCommand() {
   const editor = vscode.window.activeTextEditor;
-  if (!editor) return;
+  if (!editor) {
+    return;
+  }
   const editorUri = editor.document.uri.toString();
   const suggestions = editorToSuggestions.get(editorUri);
   const idx = currentSuggestion.get(editorUri);
-  if (!suggestions || idx === undefined) return;
+  if (!suggestions || idx === undefined) {
+    return;
+  }

----------------------------------------

File: extensions/vscode/src/util/cleanSlate.ts
Status: modified
Changes: +3 -0
Diff:
@@ -1,4 +1,7 @@
+import { getContinueGlobalPath } from "core/util/paths";
 import { ExtensionContext } from "vscode";
+import fs from "fs";
+
 /**
  * Clear all Continue-related artifacts to simulate a brand new user
  */

----------------------------------------

File: extensions/vscode/src/util/loadAutocompleteModel.ts
Status: modified
Changes: +5 -5
Diff:
@@ -1,5 +1,5 @@
 import type { ILLM } from "core";
-import { IConfigHandler } from "core/config/IConfigHandler";
+import { ConfigHandler } from "core/config/ConfigHandler";
 import Ollama from "core/llm/llms/Ollama";
 import { GlobalContext } from "core/util/GlobalContext";
 import * as vscode from "vscode";
@@ -13,9 +13,9 @@ export class TabAutocompleteModel {
   private shownOllamaWarning = false;
   private shownDeepseekWarning = false;
 
-  private configHandler: IConfigHandler;

----------------------------------------

File: extensions/vscode/src/webviewProtocol.ts
Status: modified
Changes: +13 -30
Diff:
@@ -1,16 +1,9 @@
+import { FromWebviewProtocol, ToWebviewProtocol } from "core/protocol";
 import { Message } from "core/util/messenger";
 import fs from "node:fs";
 import path from "path";
 import { v4 as uuidv4 } from "uuid";
 import * as vscode from "vscode";
-import {
-  ToCoreFromWebviewProtocol,
-  ToWebviewFromCoreProtocol,
-} from "../../../core/protocol/coreWebview";
-import {
-  ToIdeFromWebviewProtocol,
-  ToWebviewFromIdeProtocol,
-} from "../../../core/protocol/ideWebview";
 import { IMessenger } from "../../../core/util/messenger";
 import { getExtensionUri } from "./util/vscode";
 
@@ -32,19 +25,11 @@ export async function showTutorial() {
   await vscode.window.showTextDocument(doc, { preview: false });
 }
 
-export type ToCoreOrIdeFromWebviewProtocol = ToCoreFromWebviewProtocol &
-  ToIdeFromWebviewProtocol;
-type FullToWebviewFromIdeOrCoreProtocol = ToWebviewFromIdeProtocol &
-  ToWebviewFromCoreProtocol;
 export class VsCodeWebviewProtocol
-  implements
-    IMessenger<
-      ToCoreOrIdeFromWebviewProtocol,
-      FullToWebviewFromIdeOrCoreProtocol

----------------------------------------

File: gui/package-lock.json
Status: modified
Changes: +13615 -1834

----------------------------------------

File: gui/package.json
Status: modified
Changes: +6 -3
Diff:
@@ -2,6 +2,7 @@
   "name": "gui",
   "private": true,
   "type": "module",
+  "author": "Continue Dev, Inc",
   "license": "Apache-2.0",
   "scripts": {
     "dev": "vite",
@@ -39,6 +40,7 @@
     "react-dom": "^18.2.0",
     "react-error-boundary": "^4.0.11",
     "react-hook-form": "^7.47.0",

----------------------------------------

File: gui/public/continue-dev-square.png
Status: removed
Changes: +0 -0

----------------------------------------

File: gui/public/continue.gif
Status: removed
Changes: +0 -0

----------------------------------------

File: gui/public/logos/WatsonX.png
Status: added
Changes: +0 -0

----------------------------------------

File: gui/public/logos/ibm.png
Status: added
Changes: +0 -0

----------------------------------------

File: gui/public/play_button.png
Status: removed
Changes: +0 -0

----------------------------------------

File: gui/src/components/ChatScrollAnchor.tsx
Status: added
Changes: +32 -0
Diff:
@@ -0,0 +1,32 @@
+import { useEffect } from "react";
+import { useInView } from "react-intersection-observer";
+
+interface ChatScrollAnchorProps {
+  trackVisibility: boolean;
+  isAtBottom: boolean;
+  scrollAreaRef: React.RefObject<HTMLDivElement>;
+}
+
+export function ChatScrollAnchor({

----------------------------------------

File: gui/src/components/HeaderButtonWithText.tsx
Status: modified
Changes: +8 -2
Diff:
@@ -1,6 +1,7 @@
 import React, { useState } from "react";
 import ReactDOM from "react-dom";
 import { HeaderButton, StyledTooltip } from ".";
+import { type PlacesType } from "react-tooltip";
 
 import { v4 as uuidv4 } from "uuid";
 
@@ -17,6 +18,7 @@ interface HeaderButtonWithTextProps {
   style?: React.CSSProperties;
   backgroundColor?: string;
   hoverBackgroundColor?: string;
+  tooltipPlacement?: PlacesType;
 }

----------------------------------------

File: gui/src/components/Layout.tsx
Status: modified
Changes: +29 -20
Diff:
@@ -1,7 +1,4 @@
-import {
-  Cog6ToothIcon,
-  QuestionMarkCircleIcon,
-} from "@heroicons/react/24/outline";
+import { QuestionMarkCircleIcon } from "@heroicons/react/24/outline";
 import { IndexingProgressUpdate } from "core";
 import { useContext, useEffect, useState } from "react";
 import { useDispatch, useSelector } from "react-redux";
@@ -30,15 +27,26 @@ import TextDialog from "./dialogs";
 import HeaderButtonWithText from "./HeaderButtonWithText";
 import IndexingProgressBar from "./loaders/IndexingProgressBar";
 import ProgressBar from "./loaders/ProgressBar";
-import ModelSelect from "./modelSelection/ModelSelect";
 import PostHogPageView from "./PosthogPageView";
+import ProfileSwitcher from "./ProfileSwitcher";
 
 // #region Styled Components
 const FOOTER_HEIGHT = "1.8em";
 
 const LayoutTopDiv = styled(CustomScrollbarDiv)`
   height: 100%;
   border-radius: ${defaultBorderRadius};
+  position: relative;
+
+  &::after {
+    position: absolute;
+    content: "";
+    width: 100%;
+    height: 1px;
+    background-color: rgba(136, 136, 136, 0.3);
+    top: 0;
+    left: 0;
+  }
 `;
 
 const BottomMessageDiv = styled.div<{ displayOnBottom: boolean }>`
@@ -69,7 +77,8 @@ const Footer = styled.footer`

----------------------------------------

File: gui/src/components/Logo.tsx
Status: added
Changes: +22 -0
Diff:
@@ -0,0 +1,22 @@
+export default function Logo({
+  height,
+  width,
+}: {
+  height: number;
+  width: number;
+}) {
+  return (
+    <svg

----------------------------------------

File: gui/src/components/PosthogPageView.ts
Status: modified
Changes: +2 -2
Diff:
@@ -1,6 +1,6 @@
-import { useEffect } from "react";
 import { usePostHog } from "posthog-js/react";
-import { useSearchParams, useLocation } from "react-router-dom";
+import { useEffect } from "react";
+import { useLocation, useSearchParams } from "react-router-dom";
 
 /**
  * This is copied from here: https://posthog.com/tutorials/single-page-app-pageviews#tracking-pageviews-in-nextjs-app-router

----------------------------------------

File: gui/src/components/ProfileSwitcher.tsx
Status: added
Changes: +276 -0
Diff:
@@ -0,0 +1,276 @@
+import { Listbox, Transition } from "@headlessui/react";
+import {
+  ChevronUpDownIcon,
+  Cog6ToothIcon,
+  UserCircleIcon,
+} from "@heroicons/react/24/outline";
+import { ProfileDescription } from "core/config/ConfigHandler";
+import { Fragment, useContext, useEffect, useState } from "react";
+import ReactDOM from "react-dom";
+import { useDispatch, useSelector } from "react-redux";
+import styled from "styled-components";
+import {
+  defaultBorderRadius,
+  lightGray,
+  vscBackground,
+  vscForeground,
+  vscInputBackground,
+  vscListActiveBackground,
+  vscListActiveForeground,
+} from ".";
+import { IdeMessengerContext } from "../context/IdeMessenger";
+import { useAuth } from "../hooks/useAuth";
+import { useWebviewListener } from "../hooks/useWebviewListener";
+import { setLastControlServerBetaEnabledStatus } from "../redux/slices/miscSlice";
+import { RootState } from "../redux/store";
+import { getFontSize } from "../util";
+import HeaderButtonWithText from "./HeaderButtonWithText";
+
+const StyledListbox = styled(Listbox)`
+  background-color: ${vscBackground};
+  min-width: 80px;
+`;
+
+const StyledListboxButton = styled(Listbox.Button)`
+  position: relative;
+  cursor: pointer;
+  background-color: ${vscBackground};
+  text-align: left;
+  border: none;
+  margin: 0;
+  height: 100%;
+  width: 100%;
+  max-width: 180px;
+  white-space: nowrap;
+  overflow: hidden;
+
+  border: 0.5px solid ${lightGray};
+  border-radius: ${defaultBorderRadius};
+
+  display: grid;
+  grid-template-columns: 1fr auto;
+  align-items: center;
+
+  color: ${vscForeground};
+
+  padding: 3px 6px;
+
+  &:focus {
+    outline: none;
+  }
+
+  &:hover {
+    background-color: ${vscInputBackground};
+  }
+
+  font-size: ${getFontSize() - 2}px;
+`;
+
+const StyledListboxOptions = styled(Listbox.Options)`
+  background-color: ${vscInputBackground};
+  padding: 0;
+
+  position: absolute;
+  bottom: calc(100% - 16px);
+  max-width: 100%;
+  max-height: 80vh;
+
+  border-radius: ${defaultBorderRadius};
+  overflow-y: scroll;
+`;
+
+const StyledListboxOption = styled(Listbox.Option)<{ selected: boolean }>`
+  background-color: ${({ selected }) =>
+    selected ? vscListActiveBackground : vscInputBackground};
+  cursor: pointer;
+  padding: 6px 8px;
+
+  &:hover {
+    background-color: ${vscListActiveBackground};
+    color: ${vscListActiveForeground};
+  }

----------------------------------------

File: gui/src/components/dialogs/AddDocsDialog.tsx
Status: modified
Changes: +112 -49
Diff:
@@ -1,10 +1,10 @@
+import { ChevronDownIcon, ChevronUpIcon } from "@heroicons/react/24/outline";
 import { SiteIndexingConfig } from "core";
 import { usePostHog } from "posthog-js/react";
-import React, { useContext, useLayoutEffect, useRef, useState } from "react";
+import { useContext, useLayoutEffect, useRef, useState } from "react";
 import { useDispatch } from "react-redux";
-import { Button, Input } from "..";
+import { Button, HelperText, Input, lightGray } from "..";
 import { IdeMessengerContext } from "../../context/IdeMessenger";
-import { SubmenuContextProvidersContext } from "../../context/SubmenuContextProviders";
 import { setShowDialog } from "../../redux/slices/uiStateSlice";
 
 const DEFAULT_MAX_DEPTH = 3;
@@ -15,15 +15,16 @@ function AddDocsDialog() {
 
   const ref = useRef<HTMLInputElement>(null);
 
-  const [docsUrl, setDocsUrl] = useState("");
-  const [docsTitle, setDocsTitle] = useState("");
-  const [urlValid, setUrlValid] = useState(false);
+  const [title, setTitle] = useState("");
+  const [startUrl, setStartUrl] = useState("");
+  const [rootUrl, setRootUrl] = useState("");
+  const [faviconUrl, setFaviconUrl] = useState("");
   const [maxDepth, setMaxDepth] = useState<number | string>("");
+  const [isOpen, setIsOpen] = useState(false);
 
   const ideMessenger = useContext(IdeMessengerContext);
-  const { addItem } = useContext(SubmenuContextProvidersContext);
 
-  const isFormValid = docsUrl && docsTitle && urlValid;
+  const isFormValid = startUrl && title;
 
   useLayoutEffect(() => {
     setTimeout(() => {
@@ -37,33 +38,30 @@ function AddDocsDialog() {
     e.preventDefault();
 
     const siteIndexingConfig: SiteIndexingConfig = {
-      startUrl: docsUrl,
-      rootUrl: docsUrl,
-      title: docsTitle,
+      startUrl,
+      rootUrl,
+      title,
       maxDepth: typeof maxDepth === "string" ? DEFAULT_MAX_DEPTH : maxDepth,
+      faviconUrl: new URL("/favicon.ico", startUrl).toString(),
     };
 
     ideMessenger.post("context/addDocs", siteIndexingConfig);
 
-    setDocsTitle("");
-    setDocsUrl("");
+    setTitle("");
+    setStartUrl("");
+    setRootUrl("");
     setMaxDepth("");
+    setFaviconUrl("");
 
     dispatch(setShowDialog(false));
 
-    addItem("docs", {
-      id: docsUrl,
-      title: docsTitle,
-      description: new URL(docsUrl).hostname,
-    });
-
-    posthog.capture("add_docs", { url: docsUrl });
+    posthog.capture("add_docs_gui", { url: startUrl });
   }
 
   return (
     <div className="p-4">

----------------------------------------

File: gui/src/components/dialogs/ConfirmationDialog.tsx
Status: modified
Changes: +24 -11
Diff:
@@ -11,40 +11,53 @@ const GridDiv = styled.div`
   grid-template-columns: 1fr 1fr;
   grid-gap: 8px;
   align-items: center;
+
+  > * {
+    grid-column: 2;
+  }
+
+  > :nth-last-child(2):first-child {
+    grid-column: 1;
+  }
 `;
 
 interface ConfirmationDialogProps {
   onConfirm: () => void;
   onCancel?: () => void;
   text: string;
+  title?: string;
+  hideCancelButton?: boolean;
+  confirmText?: string;

----------------------------------------

File: gui/src/components/dialogs/index.tsx
Status: modified
Changes: +2 -2
Diff:
@@ -4,9 +4,9 @@ import styled from "styled-components";
 import {
   VSC_BACKGROUND_VAR,
   defaultBorderRadius,
+  lightGray,
   parseColorForHex,
   vscBackground,
-  vscFocusBorder,
   vscForeground,
 } from "..";

----------------------------------------

File: gui/src/components/gui/StepContainer.tsx
Status: modified
Changes: +36 -25
Diff:
@@ -1,18 +1,21 @@
 import {
   ArrowUturnLeftIcon,
   BarsArrowDownIcon,
+  CubeIcon,
   HandThumbDownIcon,
   HandThumbUpIcon,
+  TrashIcon,
 } from "@heroicons/react/24/outline";
 import { ChatHistoryItem } from "core";
-import { stripImages } from "core/llm/countTokens";
+import { stripImages } from "core/llm/images";
 import { useContext, useEffect, useState } from "react";
 import { useSelector } from "react-redux";
 import styled from "styled-components";
 import {
   defaultBorderRadius,
   lightGray,
   vscBackground,
+  vscButtonBackground,
   vscInputBackground,
 } from "..";
 import { IdeMessengerContext } from "../../context/IdeMessenger";
@@ -34,36 +37,18 @@ interface StepContainerProps {
   isFirst: boolean;
   isLast: boolean;
   index: number;
+  modelTitle?: string;
 }
 
-// #region styled components
-
-const ButtonsDiv = styled.div`
-  display: flex;
-  gap: 2px;
-  align-items: center;
-  background-color: ${vscBackground};

----------------------------------------

File: gui/src/components/index.tsx
Status: modified
Changes: +10 -2
Diff:
@@ -39,8 +39,8 @@ export const VSC_THEME_COLOR_VARS = [
 ];
 
 export const defaultBorderRadius = "5px";
-export const lightGray = "#646464";
-export const greenButtonColor = "#1bbe84";
+export const lightGray = "#999998";
+export const greenButtonColor = "#189e72";
 
 export const vscInputBackground = `var(${VSC_INPUT_BACKGROUND_VAR}, rgb(45 45 45))`;
 export const vscQuickInputBackground = `var(${VSC_QUICK_INPUT_BACKGROUND_VAR}, ${VSC_INPUT_BACKGROUND_VAR}, rgb(45 45 45))`;

----------------------------------------

File: gui/src/components/loaders/IndexingProgressBar.tsx
Status: modified
Changes: +7 -3
Diff:
@@ -1,4 +1,5 @@
 import { IndexingProgressUpdate } from "core";
+import TransformersJsEmbeddingsProvider from "core/indexing/embeddings/TransformersJsEmbeddingsProvider";
 import { useContext, useEffect, useState } from "react";
 import ReactDOM from "react-dom";
 import { useSelector } from "react-redux";
@@ -108,7 +109,10 @@ const IndexingProgressBar = ({
   }, [paused]);
 
   function getIndexingErrMsg(msg: string): string {
-    if (isJetBrains() && embeddingsProvider === "all-MiniLM-L6-v2") {
+    if (

----------------------------------------

File: gui/src/components/loaders/StatusDot.tsx
Status: modified
Changes: +1 -1
Diff:
@@ -27,7 +27,7 @@ const StatusDot = styled.div<{
   height: ${(props) => props.diameter ?? DEFAULT_DIAMETER}px;
   border-radius: 50%;
   border: 1px solid rgba(255, 255, 255, 0.75);
-  margin: 0 2px;
+  margin: 0 4px 0 8px;
   ${(props) => (props.shouldBlink ?? false) && blinkAnimation};
 `;
 

----------------------------------------

File: gui/src/components/mainInput/ContextItemsPeek.tsx
Status: modified
Changes: +44 -22
Diff:
@@ -12,18 +12,20 @@ import {
 import { IdeMessengerContext } from "../../context/IdeMessenger";
 import { getFontSize } from "../../util";
 import FileIcon from "../FileIcon";
+import SafeImg from "../SafeImg";
 
 const ContextItemDiv = styled.div`
   cursor: pointer;
-  padding-left: 6px;
-  padding-right: 10px;
-  padding-top: 6px;
-  padding-bottom: 6px;
+  padding: 6px 10px 6px 6px;
   margin-left: 4px;
   display: flex;
   align-items: center;
   border-radius: ${defaultBorderRadius};
-  width: fit-content;
+  font-size: ${getFontSize()};
+  max-width: 100%;
+  overflow: hidden;
+  white-space: nowrap;
+  text-overflow: ellipsis;
 
   &:hover {
     background-color: #fff1;
@@ -97,7 +99,7 @@ const ContextItemsPeek = (props: ContextItemsPeekProps) => {
             style={{ color: lightGray }}
           ></ChevronDownIcon>
         )}
-        Context Used
+        <span className="ms-1">Context Used</span>
       </div>

----------------------------------------

File: gui/src/components/mainInput/ContinueInputBox.tsx
Status: modified
Changes: +0 -1
Diff:
@@ -54,7 +54,6 @@ interface ContinueInputBoxProps {
   isLastUserInput: boolean;
   isMainInput?: boolean;
   onEnter: (editorState: JSONContent, modifiers: InputModifiers) => void;
-
   editorState?: JSONContent;
   contextItems?: ContextItemWithId[];
   hidden?: boolean;

----------------------------------------

File: gui/src/components/mainInput/InputToolbar.tsx
Status: modified
Changes: +131 -112
Diff:
@@ -1,4 +1,7 @@
-import { PhotoIcon as OutlinePhotoIcon } from "@heroicons/react/24/outline";
+import {
+  PhotoIcon as OutlinePhotoIcon,
+  PlusIcon,
+} from "@heroicons/react/24/outline";
 import { PhotoIcon as SolidPhotoIcon } from "@heroicons/react/24/solid";
 import { InputModifiers } from "core";
 import { modelSupportsImages } from "core/llm/autodetect";
@@ -21,27 +24,36 @@ import {
   getMetaKeyLabel,
   isMetaEquivalentKeyPressed,
 } from "../../util";
+import ModelSelect from "../modelSelection/ModelSelect";
 
-const StyledDiv = styled.div<{ hidden?: boolean }>`
-  position: absolute;
+const StyledDiv = styled.div<{ isHidden: boolean }>`
+  padding: 4px 0;
   display: flex;
-  gap: 4px;
-  right: 4px;
-  bottom: 4px;
-  width: calc(100% - 10px);
+  justify-content: space-between;
+  gap: 1px;
   background-color: ${vscInputBackground};
-
-  ${(props) => (props.hidden ? "display: none;" : "")}
-
   align-items: center;
   z-index: 50;
-  font-size: ${getFontSize() - 4}px;
-
-  cursor: text;
+  font-size: ${getFontSize() - 2}px;
+  cursor: ${(props) => (props.isHidden ? "default" : "text")};
+  opacity: ${(props) => (props.isHidden ? 0 : 1)};
+  pointer-events: ${(props) => (props.isHidden ? "none" : "auto")};
 
   & > * {
     flex: 0 0 auto;
   }
+
+  /* Add a media query to hide the right-hand set of components */
+  @media (max-width: 400px) {
+    & > span:last-child {
+      display: none;
+    }
+  }
+`;
+
+const StyledSpan = styled.span`
+  font-size: ${() => `${getFontSize() - 2}px`};
+  color: ${lightGray};
 `;
 
 const EnterButton = styled.div<{ offFocus: boolean }>`
@@ -83,111 +95,118 @@ function InputToolbar(props: InputToolbarProps) {
   const useActiveFile = useSelector(selectUseActiveFile);
 
   return (
-    <StyledDiv hidden={props.hidden} onClick={props.onClick} id="input-toolbar">
-      <span className="cursor-pointer mr-auto flex items-center">
-        <span
-          style={{
-            color: lightGray,
-          }}
-          onClick={(e) => {
-            props.onAddContextItem();
-          }}
-          className="hover:underline cursor-pointer"
-        >
-          + Add Context
+    <>
+      <StyledDiv
+        isHidden={props.hidden}
+        onClick={props.onClick}
+        id="input-toolbar"
+      >
+        <span className="flex gap-2 items-center whitespace-nowrap">
+          <ModelSelect />
+          <StyledSpan
+            onClick={(e) => {
+              props.onAddContextItem();
+            }}
+            className="hover:underline cursor-pointer"
+          >
+            Add Context <PlusIcon className="h-2.5 w-2.5" aria-hidden="true" />
+          </StyledSpan>
+          {defaultModel &&
+            modelSupportsImages(

----------------------------------------

File: gui/src/components/mainInput/MentionList.tsx
Status: modified
Changes: +13 -17
Diff:
@@ -85,8 +85,8 @@ function DropdownIcon(props: { className?: string; item: ComboBoxItem }) {
     props.item.type === "contextProvider"
       ? props.item.id
       : props.item.type === "slashCommand"
-        ? props.item.id
-        : props.item.type;
+      ? props.item.id
+      : props.item.type;
 
   const iconClass = `${props.className} flex-shrink-0`;
 
@@ -103,28 +103,24 @@ function DropdownIcon(props: { className?: string; item: ComboBoxItem }) {
     fallbackIcon = <Icon className={iconClass} height="1.2em" width="1.2em" />;
   }
 
-  if (false && props.item.iconUrl) {
-    try {

----------------------------------------

File: gui/src/components/mainInput/TipTapEditor.css
Status: modified
Changes: +1 -0
Diff:
@@ -22,6 +22,7 @@
   float: left;
   height: 0;
   pointer-events: none;
+  white-space: nowrap;
 }
 
 .gap-cursor {

----------------------------------------

File: gui/src/components/mainInput/TipTapEditor.tsx
Status: modified
Changes: +96 -28
Diff:
@@ -4,6 +4,7 @@ import Image from "@tiptap/extension-image";
 import Paragraph from "@tiptap/extension-paragraph";
 import Placeholder from "@tiptap/extension-placeholder";
 import Text from "@tiptap/extension-text";
+import { Plugin } from "@tiptap/pm/state";
 import { Editor, EditorContent, JSONContent, useEditor } from "@tiptap/react";
 import {
   ContextItemWithId,
@@ -13,6 +14,7 @@ import {
 } from "core";
 import { modelSupportsImages } from "core/llm/autodetect";
 import { getBasename, getRelativePath } from "core/util";
+import { usePostHog } from "posthog-js/react";
 import { useContext, useEffect, useRef, useState } from "react";
 import { useDispatch, useSelector } from "react-redux";
 import styled from "styled-components";
@@ -42,6 +44,7 @@ import {
   getFontSize,
   isJetBrains,
   isMetaEquivalentKeyPressed,
+  isWebEnvironment,
 } from "../../util";
 import CodeBlockExtension from "./CodeBlockExtension";
 import { SlashCommand } from "./CommandsExtension";
@@ -57,8 +60,8 @@ import { ComboBoxItem } from "./types";
 const InputBoxDiv = styled.div`
   resize: none;
 
-  padding: 8px;
-  padding-bottom: 24px;
+  padding: 8px 12px;
+  padding-bottom: 4px;
   font-family: inherit;
   border-radius: ${defaultBorderRadius};
   margin: 0;
@@ -70,7 +73,6 @@ const InputBoxDiv = styled.div`
   border: 0.5px solid ${vscInputBorder};
   outline: none;
   font-size: ${getFontSize()}px;
-
   &:focus {
     outline: none;
 
@@ -81,7 +83,8 @@ const InputBoxDiv = styled.div`
     color: ${lightGray}cc;
   }
 
-  position: relative;
+  display: flex;
+  flex-direction: column;
 `;
 
 const HoverDiv = styled.div`
@@ -136,7 +139,6 @@ interface TipTapEditorProps {
   availableSlashCommands: ComboBoxItem[];
   isMainInput: boolean;
   onEnter: (editorState: JSONContent, modifiers: InputModifiers) => void;
-
   editorState?: JSONContent;
 }
 
@@ -151,10 +153,11 @@ function TipTapEditor(props: TipTapEditorProps) {
   );
   const useActiveFile = useSelector(selectUseActiveFile);
 
-  const [inputFocused, setInputFocused] = useState(false);
-
   const { saveSession } = useHistory(dispatch);
 
+  const posthog = usePostHog();
+  const [isEditorFocused, setIsEditorFocused] = useState(false);
+
   const inSubmenuRef = useRef<string | undefined>(undefined);
   const inDropdownRef = useRef(false);
 
@@ -258,7 +261,41 @@ function TipTapEditor(props: TipTapEditorProps) {
     extensions: [
       Document,
       History,
-      Image,
+      Image.extend({
+        addProseMirrorPlugins() {

----------------------------------------

File: gui/src/components/mainInput/TutorialCard.tsx
Status: added
Changes: +86 -0
Diff:
@@ -0,0 +1,86 @@
+import {
+  BookOpenIcon,
+  ClipboardDocumentIcon,
+  Cog6ToothIcon,
+  PencilSquareIcon,
+  XMarkIcon,
+} from "@heroicons/react/24/outline";
+import styled from "styled-components";
+import { defaultBorderRadius, lightGray } from "..";
+import { getMetaKeyLabel } from "../../util";
+
+interface TutorialCardProps {
+  onClose: () => void;
+}
+
+const TutorialCardDiv = styled.div`
+  border: 1px solid ${lightGray};
+  border-radius: ${defaultBorderRadius};
+  padding: 1rem 2.5rem 1rem 2rem;
+  margin: 1rem;
+  max-width: 28rem;
+  position: relative;
+`;
+
+export function TutorialCard({ onClose }: TutorialCardProps) {
+  return (
+    <TutorialCardDiv>
+      <div

----------------------------------------

File: gui/src/components/mainInput/getSuggestion.ts
Status: modified
Changes: +2 -1
Diff:
@@ -89,7 +89,7 @@ function getSubActionsForSubmenuItem(
         label: "Open in new tab",
         icon: "trash",
         action: () => {
-          ideMessenger.request("context/removeDocs", { baseUrl: item.id });
+          ideMessenger.request("context/removeDocs", { startUrl: item.id });
         },
       },
     ];
@@ -156,6 +156,7 @@ export function getContextProviderDropdownOptions(

----------------------------------------

File: gui/src/components/mainInput/resolveInput.ts
Status: modified
Changes: +14 -36
Diff:
@@ -6,8 +6,7 @@ import {
   MessagePart,
   RangeInFile,
 } from "core";
-import { stripImages } from "core/llm/countTokens";
-import { getBasename, getRelativePath } from "core/util";
+import { stripImages } from "core/llm/images";
 import { IIdeMessenger } from "../../context/IdeMessenger";
 
 interface MentionAttrs {
@@ -99,40 +98,19 @@ async function resolveEditorContent(
   let contextItemsText = "";
   let contextItems: ContextItemWithId[] = [];
   for (const item of contextItemAttrs) {
-    if (item.itemType === "file") {
-      // This is a quick way to resolve @file references
-      const basename = getBasename(item.id);
-      const relativeFilePath = getRelativePath(
-        item.id,
-        await ideMessenger.ide.getWorkspaceDirs(),
-      );

----------------------------------------

File: gui/src/components/mainInput/types.d.ts
Status: modified
Changes: +1 -1
Diff:
@@ -23,7 +23,7 @@ export interface ComboBoxItem {
   contextProvider?: ContextProviderDescription;
   query?: string;
   label?: string;
-  iconUrl?: string;
+  icon?: string;
   action?: () => void;
   subActions?: ComboBoxSubAction[];
 }

----------------------------------------

File: gui/src/components/modelSelection/LegacyModelSelect.tsx
Status: added
Changes: +305 -0
Diff:
@@ -0,0 +1,305 @@
+import { Listbox, Transition } from "@headlessui/react";
+import {
+  ChevronUpDownIcon,
+  PlusIcon,
+  TrashIcon,
+} from "@heroicons/react/24/outline";
+import { Fragment, useContext, useEffect, useState } from "react";
+import ReactDOM from "react-dom";
+import { useDispatch, useSelector } from "react-redux";
+import { useNavigate } from "react-router-dom";
+import styled from "styled-components";
+import {
+  defaultBorderRadius,
+  lightGray,
+  vscBackground,
+  vscForeground,
+  vscInputBackground,
+  vscListActiveBackground,
+  vscListActiveForeground,
+} from "..";
+import { IdeMessengerContext } from "../../context/IdeMessenger";
+import { defaultModelSelector } from "../../redux/selectors/modelSelectors";
+import { setDefaultModel } from "../../redux/slices/stateSlice";
+import {
+  setDialogMessage,
+  setShowDialog,
+} from "../../redux/slices/uiStateSlice";
+import { RootState } from "../../redux/store";
+import { getMetaKeyLabel, isMetaEquivalentKeyPressed } from "../../util";
+import HeaderButtonWithText from "../HeaderButtonWithText";
+import ConfirmationDialog from "../dialogs/ConfirmationDialog";
+
+const GridDiv = styled.div`
+  display: grid;
+  grid-template-columns: 1fr auto;
+  align-items: center;
+  border: 0.5px solid ${lightGray};
+  border-radius: ${defaultBorderRadius};
+  overflow: hidden;
+`;
+
+const StyledPlusIcon = styled(PlusIcon)`
+  background-color: ${vscBackground};
+  cursor: pointer;
+  margin: 0px;
+  padding-left: 4px;
+  padding-right: 4px;
+  height: 100%;
+
+  &:hover {
+    background-color: ${vscInputBackground};
+  }
+  border-left: 0.5px solid ${lightGray};
+`;
+
+const StyledListbox = styled(Listbox)`
+  background-color: ${vscBackground};
+  padding: 0;
+  min-width: 80px;
+`;
+
+const StyledListboxButton = styled(Listbox.Button)`
+  position: relative;
+  cursor: pointer;
+  background-color: ${vscBackground};
+  text-align: left;
+  border: none;
+  margin: 0;
+  height: 100%;
+  width: 100%;
+  max-width: 180px;
+  white-space: nowrap;
+  overflow: hidden;
+
+  display: grid;
+  grid-template-columns: 1fr auto;
+  align-items: center;
+
+  color: ${vscForeground};
+
+  padding: 4px 8px;
+
+  &:focus {
+    outline: none;
+  }
+
+  &:hover {
+    background-color: ${vscInputBackground};
+  }
+`;
+
+const StyledListboxOptions = styled(Listbox.Options)`
+  background-color: ${vscInputBackground};
+  padding: 0;
+
+  position: absolute;
+  bottom: calc(100% - 16px);
+  max-width: 100%;
+  max-height: 80vh;
+
+  border-radius: ${defaultBorderRadius};

----------------------------------------

File: gui/src/components/modelSelection/ModelSelect.tsx
Status: modified
Changes: +146 -177
Diff:
@@ -1,23 +1,15 @@
-import { Listbox, Transition } from "@headlessui/react";
+import { Listbox } from "@headlessui/react";
 import {
-  ChevronUpDownIcon,
+  ChevronDownIcon,
+  CubeIcon,
   PlusIcon,
   TrashIcon,
 } from "@heroicons/react/24/outline";
-import { Fragment, useContext, useEffect, useState } from "react";
-import ReactDOM from "react-dom";
+import { useContext, useEffect, useState } from "react";
 import { useDispatch, useSelector } from "react-redux";
 import { useNavigate } from "react-router-dom";
 import styled from "styled-components";
-import {
-  defaultBorderRadius,
-  lightGray,
-  vscBackground,
-  vscForeground,
-  vscInputBackground,
-  vscListActiveBackground,
-  vscListActiveForeground,
-} from "..";
+import { defaultBorderRadius, lightGray, vscInputBackground } from "..";
 import { IdeMessengerContext } from "../../context/IdeMessenger";
 import { defaultModelSelector } from "../../redux/selectors/modelSelectors";
 import { setDefaultModel } from "../../redux/slices/stateSlice";
@@ -26,95 +18,70 @@ import {
   setShowDialog,
 } from "../../redux/slices/uiStateSlice";
 import { RootState } from "../../redux/store";
-import { getMetaKeyLabel, isMetaEquivalentKeyPressed } from "../../util";
-import HeaderButtonWithText from "../HeaderButtonWithText";
+import {
+  getFontSize,
+  getMetaKeyLabel,
+  isMetaEquivalentKeyPressed,
+} from "../../util";
 import ConfirmationDialog from "../dialogs/ConfirmationDialog";
 
-const GridDiv = styled.div`
-  display: grid;
-  grid-template-columns: 1fr auto;
-  align-items: center;
-  border: 0.5px solid ${lightGray};
-  border-radius: ${defaultBorderRadius};
-  overflow: hidden;
-`;
-
-const StyledPlusIcon = styled(PlusIcon)`
-  background-color: ${vscBackground};
-  cursor: pointer;
-  margin: 0px;
-  padding-left: 4px;
-  padding-right: 4px;
-  height: 100%;
-
-  &:hover {
-    background-color: ${vscInputBackground};
-  }
-  border-left: 0.5px solid ${lightGray};
-`;
-
-const StyledListbox = styled(Listbox)`
-  background-color: ${vscBackground};
-  padding: 0;
-  min-width: 80px;
-`;
-
 const StyledListboxButton = styled(Listbox.Button)`
-  position: relative;
-  cursor: pointer;
-  background-color: ${vscBackground};
-  text-align: left;
-  border: none;
-  margin: 0;
-  height: 100%;
-  width: 100%;
-  max-width: 180px;
-  white-space: nowrap;
-  overflow: hidden;
-
-  display: grid;
-  grid-template-columns: 1fr auto;
+  font-family: inherit;
+  display: flex;
   align-items: center;
-
-  color: ${vscForeground};
-
-  padding: 4px 8px;
-
+  gap: 2px;
+  border: none;
+  cursor: pointer;
+  font-size: ${getFontSize() - 2}px;
+  background: transparent;
+  color: ${lightGray};
   &:focus {
     outline: none;
   }
-
-  &:hover {
-    background-color: ${vscInputBackground};
-  }
 `;
 
 const StyledListboxOptions = styled(Listbox.Options)`
-  background-color: ${vscInputBackground};
-  padding: 0;
-
+  margin-top: 4px;
   position: absolute;
-  bottom: calc(100% - 16px);
-  max-width: 100%;
-  max-height: 80vh;
+  list-style: none;
+  padding: 4px;
+  white-space: nowrap;
+  cursor: default;
 
   border-radius: ${defaultBorderRadius};
-  overflow-y: scroll;
+  border: 0.5px solid ${lightGray};
+  background-color: ${vscInputBackground};
+
+  max-height: 300px;
+  overflow-y: auto;
 `;
 
-const StyledListboxOption = styled(Listbox.Option)<{ selected: boolean }>`
-  background-color: ${({ selected }) =>
-    selected ? vscListActiveBackground : vscInputBackground};
+const StyledListboxOption = styled(Listbox.Option)`

----------------------------------------

File: gui/src/hooks/useAuth.tsx
Status: added
Changes: +78 -0
Diff:
@@ -0,0 +1,78 @@
+import { ControlPlaneSessionInfo } from "core/control-plane/client";
+import { useContext, useEffect, useState } from "react";
+import { useDispatch } from "react-redux";
+import ConfirmationDialog from "../components/dialogs/ConfirmationDialog";
+import { IdeMessengerContext } from "../context/IdeMessenger";
+import { setDialogMessage, setShowDialog } from "../redux/slices/uiStateSlice";
+import { getLocalStorage, setLocalStorage } from "../util/localStorage";
+import { useWebviewListener } from "./useWebviewListener";
+
+export function useAuth(): {
+  session: ControlPlaneSessionInfo | undefined;
+  logout: () => void;
+  login: () => void;
+} {
+  const [session, setSession] = useState<ControlPlaneSessionInfo | undefined>(
+    undefined,
+  );
+  const ideMessenger = useContext(IdeMessengerContext);
+  const dispatch = useDispatch();
+
+  useWebviewListener("didChangeControlPlaneSessionInfo", async (data) => {
+    setSession(data.sessionInfo);
+  });
+
+  useEffect(() => {

----------------------------------------

File: gui/src/hooks/useChatHandler.ts
Status: modified
Changes: +1 -1
Diff:
@@ -12,7 +12,7 @@ import {
   SlashCommandDescription,
 } from "core";
 import { constructMessages } from "core/llm/constructMessages";
-import { stripImages } from "core/llm/countTokens";
+import { stripImages } from "core/llm/images";
 import { getBasename, getRelativePath } from "core/util";
 import { usePostHog } from "posthog-js/react";
 import { useEffect, useRef } from "react";

----------------------------------------

File: gui/src/hooks/useHistory.tsx
Status: modified
Changes: +1 -1
Diff:
@@ -2,7 +2,7 @@ import { Dispatch } from "@reduxjs/toolkit";
 import { PersistedSessionInfo, SessionInfo } from "core";
 
 import { llmCanGenerateInParallel } from "core/llm/autodetect";
-import { stripImages } from "core/llm/countTokens";
+import { stripImages } from "core/llm/images";
 import { useContext } from "react";
 import { useSelector } from "react-redux";
 import { IdeMessengerContext } from "../context/IdeMessenger";

----------------------------------------

File: gui/src/hooks/useSetup.ts
Status: modified
Changes: +16 -4
Diff:
@@ -8,26 +8,30 @@ import {
   addContextItemsAtIndex,
   setConfig,
   setInactive,
+  setSelectedProfileId,
 } from "../redux/slices/stateSlice";
 import { RootState } from "../redux/store";
 
 import { isJetBrains } from "../util";
-import { setLocalStorage } from "../util/localStorage";
+import { getLocalStorage, setLocalStorage } from "../util/localStorage";
 import useChatHandler from "./useChatHandler";
 import { useWebviewListener } from "./useWebviewListener";
+import { debounce } from "lodash";
 
 function useSetup(dispatch: Dispatch<any>) {
   const [configLoaded, setConfigLoaded] = useState<boolean>(false);

----------------------------------------

File: gui/src/hooks/useSubmenuContextProviders.tsx
Status: modified
Changes: +93 -57
Diff:
@@ -6,7 +6,7 @@ import {
   groupByLastNPathParts,
 } from "core/util";
 import MiniSearch, { SearchResult } from "minisearch";
-import { useContext, useEffect, useState } from "react";
+import { useContext, useEffect, useMemo, useState } from "react";
 import { useSelector } from "react-redux";
 import { IdeMessengerContext } from "../context/IdeMessenger";
 import { selectContextProviderDescriptions } from "../redux/selectors";
@@ -20,8 +20,6 @@ const MINISEARCH_OPTIONS = {
 const MAX_LENGTH = 70;
 
 function useSubmenuContextProviders() {
-  // TODO: Refresh periodically
-
   const [minisearches, setMinisearches] = useState<{
     [id: string]: MiniSearch;
   }>({});
@@ -107,6 +105,93 @@ function useSubmenuContextProviders() {
     };
   }, []);
 
+  const getSubmenuSearchResults = useMemo(
+    () =>
+      (providerTitle: string | undefined, query: string): SearchResult[] => {
+        console.debug(
+          "Executing getSubmenuSearchResults. Provider:",
+          providerTitle,
+          "Query:",
+          query,
+        );
+        console.debug("Current minisearches:", Object.keys(minisearches));
+        if (providerTitle === undefined) {
+          // Return search combined from all providers
+          const results = Object.keys(minisearches).map((providerTitle) => {
+            const results = minisearches[providerTitle].search(
+              query,
+              MINISEARCH_OPTIONS,
+            );
+            console.debug(
+              `Search results for ${providerTitle}:`,
+              results.length,
+            );
+            return results.map((result) => {
+              return { ...result, providerTitle };
+            });
+          });
+
+          return results.flat().sort((a, b) => b.score - a.score);
+        }
+        if (!minisearches[providerTitle]) {
+          console.debug(`No minisearch found for provider: ${providerTitle}`);
+          return [];
+        }
+
+        const results = minisearches[providerTitle]
+          .search(query, MINISEARCH_OPTIONS)
+          .map((result) => {
+            return { ...result, providerTitle };

----------------------------------------

